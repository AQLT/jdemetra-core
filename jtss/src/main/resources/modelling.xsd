<?xml version="1.0"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->

<xs:schema version="0.1.0"
           targetNamespace="ec/eurostat/jdemetra/modelling"
           xmlns:tss="ec/eurostat/jdemetra/core"
           xmlns:modelling="ec/eurostat/jdemetra/modelling"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified">
    
    <xs:import schemaLocation="core.xsd" namespace="ec/eurostat/jdemetra/core"/>
    <xs:import schemaLocation="regression.xsd" namespace="ec/eurostat/jdemetra/core"/>

    <xs:complexType name="TransformationSpecType" abstract="true">
        <xs:annotation>
            <xs:documentation>
                Automatic transformation of a series
            </xs:documentation>
        </xs:annotation>
    </xs:complexType>

    <xs:complexType name="ModellingSpecType" abstract="true">
        <xs:annotation>
            <xs:documentation>
                Automatic transformation of a series
            </xs:documentation>
        </xs:annotation>
    </xs:complexType>
    
    <xs:complexType name="OutlierDetectionSpecType" abstract="true">
        <xs:annotation>
            <xs:documentation>
                Automatic detection of outliers
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Span" type="tss:PeriodSelectionType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Defines the time domain over which outliers have to be searched.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CalendarSpecType" abstract="true">
        <xs:annotation>
            <xs:documentation>
                Automatic estimation of calendar effects
            </xs:documentation>
        </xs:annotation>
    </xs:complexType>

    <xs:complexType name="RegressionSpecType" abstract="true">
        <xs:annotation>
            <xs:documentation>
                Tests on regression variables
            </xs:documentation>
        </xs:annotation>
    </xs:complexType>

    <xs:complexType name="EstimationSpecType" abstract="true">
        <xs:annotation>
            <xs:documentation>
                Estimation of the model
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Span" type="tss:PeriodSelectionType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Defines the time domain over which the model is estimated.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Precision" type="xs:double"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ModellingSpecificationType" abstract="true">
        <xs:annotation>
            <xs:documentation>
                Automatic modelling
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="name" type="xs:ID" use="optional"/>
    </xs:complexType>

    <xs:complexType name="OutlierSpecType" abstract="true">
        <xs:annotation>
            <xs:documentation>
                Detection of outliers
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Span" type="tss:PeriodSelectionType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Defines the time domain over which the outliers are detected.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="SeriesTransformationType" abstract="true"/>
     
    <xs:complexType name="LogTransformationType">
        <xs:complexContent>
            <xs:extension base="modelling:SeriesTransformationType"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BoxCoxTransformationType">
        <xs:complexContent>
            <xs:extension base="modelling:SeriesTransformationType">
                <xs:sequence>
                    <xs:element name="Lambda" type="xs:double"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
      
    <xs:complexType name="LengthOfPeriodAdjustmentType">
        <xs:complexContent>
            <xs:extension base="modelling:SeriesTransformationType">
                <xs:attribute name="correction" type="tss:LengthOfPeriodEnum" use="optional" default="LeapYear"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
      
    <xs:complexType name="SeriesTransformationsType">
        <xs:sequence>
            <xs:element name="Transformation" type="modelling:SeriesTransformationType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="RegressionItemType">
        <xs:annotation>
            <xs:documentation>
                Regression variable with its coefficient(s). The number of coefficients should correspond to the regression variable 
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Variable" type="tss:RegressionVariableType"/>
            <xs:choice>
                <xs:element name="Coefficient" type="tss:ParameterType" minOccurs="0"/>
                <xs:element name="Coefficients" type="tss:ParametersType" minOccurs="0"/>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="name" type="xs:NMTOKEN" use="optional"/>
    </xs:complexType>

    <xs:complexType name="RegressionType">
        <xs:annotation>
            <xs:documentation>
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Item" type="modelling:RegressionItemType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>


</xs:schema>
