// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sts.proto

package demetra.sts.io.protobuf;

public final class StsProtos {
  private StsProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code sts.SeasonalModel}
   */
  public enum SeasonalModel
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SEAS_NONE = 0;</code>
     */
    SEAS_NONE(0),
    /**
     * <code>SEAS_DUMMY = 1;</code>
     */
    SEAS_DUMMY(1),
    /**
     * <code>SEAS_TRIGONOMETRIC = 2;</code>
     */
    SEAS_TRIGONOMETRIC(2),
    /**
     * <code>SEAS_HARRISONSTEVENS = 3;</code>
     */
    SEAS_HARRISONSTEVENS(3),
    /**
     * <code>SEAS_CRUDE = 4;</code>
     */
    SEAS_CRUDE(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SEAS_NONE = 0;</code>
     */
    public static final int SEAS_NONE_VALUE = 0;
    /**
     * <code>SEAS_DUMMY = 1;</code>
     */
    public static final int SEAS_DUMMY_VALUE = 1;
    /**
     * <code>SEAS_TRIGONOMETRIC = 2;</code>
     */
    public static final int SEAS_TRIGONOMETRIC_VALUE = 2;
    /**
     * <code>SEAS_HARRISONSTEVENS = 3;</code>
     */
    public static final int SEAS_HARRISONSTEVENS_VALUE = 3;
    /**
     * <code>SEAS_CRUDE = 4;</code>
     */
    public static final int SEAS_CRUDE_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SeasonalModel valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SeasonalModel forNumber(int value) {
      switch (value) {
        case 0: return SEAS_NONE;
        case 1: return SEAS_DUMMY;
        case 2: return SEAS_TRIGONOMETRIC;
        case 3: return SEAS_HARRISONSTEVENS;
        case 4: return SEAS_CRUDE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SeasonalModel>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SeasonalModel> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SeasonalModel>() {
            public SeasonalModel findValueByNumber(int number) {
              return SeasonalModel.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return demetra.sts.io.protobuf.StsProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final SeasonalModel[] VALUES = values();

    public static SeasonalModel valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SeasonalModel(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sts.SeasonalModel)
  }

  public interface BasicStructuralModelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sts.BasicStructuralModel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 period = 1;</code>
     * @return The period.
     */
    int getPeriod();

    /**
     * <code>double nvar = 2;</code>
     * @return The nvar.
     */
    double getNvar();

    /**
     * <code>bool level = 3;</code>
     * @return The level.
     */
    boolean getLevel();

    /**
     * <code>double lvar = 4;</code>
     * @return The lvar.
     */
    double getLvar();

    /**
     * <code>bool slope = 5;</code>
     * @return The slope.
     */
    boolean getSlope();

    /**
     * <code>double svar = 6;</code>
     * @return The svar.
     */
    double getSvar();

    /**
     * <code>bool cycle = 7;</code>
     * @return The cycle.
     */
    boolean getCycle();

    /**
     * <code>double cycle_period = 8;</code>
     * @return The cyclePeriod.
     */
    double getCyclePeriod();

    /**
     * <code>double cycle_factor = 9;</code>
     * @return The cycleFactor.
     */
    double getCycleFactor();

    /**
     * <code>double cvar = 10;</code>
     * @return The cvar.
     */
    double getCvar();

    /**
     * <code>.sts.SeasonalModel seasonal_model = 11;</code>
     * @return The enum numeric value on the wire for seasonalModel.
     */
    int getSeasonalModelValue();
    /**
     * <code>.sts.SeasonalModel seasonal_model = 11;</code>
     * @return The seasonalModel.
     */
    demetra.sts.io.protobuf.StsProtos.SeasonalModel getSeasonalModel();

    /**
     * <code>double seasvar = 12;</code>
     * @return The seasvar.
     */
    double getSeasvar();

    /**
     * <code>.jd3.Matrix covariance = 13;</code>
     * @return Whether the covariance field is set.
     */
    boolean hasCovariance();
    /**
     * <code>.jd3.Matrix covariance = 13;</code>
     * @return The covariance.
     */
    demetra.toolkit.io.protobuf.ToolkitProtos.Matrix getCovariance();
    /**
     * <code>.jd3.Matrix covariance = 13;</code>
     */
    demetra.toolkit.io.protobuf.ToolkitProtos.MatrixOrBuilder getCovarianceOrBuilder();
  }
  /**
   * Protobuf type {@code sts.BasicStructuralModel}
   */
  public static final class BasicStructuralModel extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sts.BasicStructuralModel)
      BasicStructuralModelOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BasicStructuralModel.newBuilder() to construct.
    private BasicStructuralModel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BasicStructuralModel() {
      seasonalModel_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BasicStructuralModel();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BasicStructuralModel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              period_ = input.readInt32();
              break;
            }
            case 17: {

              nvar_ = input.readDouble();
              break;
            }
            case 24: {

              level_ = input.readBool();
              break;
            }
            case 33: {

              lvar_ = input.readDouble();
              break;
            }
            case 40: {

              slope_ = input.readBool();
              break;
            }
            case 49: {

              svar_ = input.readDouble();
              break;
            }
            case 56: {

              cycle_ = input.readBool();
              break;
            }
            case 65: {

              cyclePeriod_ = input.readDouble();
              break;
            }
            case 73: {

              cycleFactor_ = input.readDouble();
              break;
            }
            case 81: {

              cvar_ = input.readDouble();
              break;
            }
            case 88: {
              int rawValue = input.readEnum();

              seasonalModel_ = rawValue;
              break;
            }
            case 97: {

              seasvar_ = input.readDouble();
              break;
            }
            case 106: {
              demetra.toolkit.io.protobuf.ToolkitProtos.Matrix.Builder subBuilder = null;
              if (covariance_ != null) {
                subBuilder = covariance_.toBuilder();
              }
              covariance_ = input.readMessage(demetra.toolkit.io.protobuf.ToolkitProtos.Matrix.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(covariance_);
                covariance_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return demetra.sts.io.protobuf.StsProtos.internal_static_sts_BasicStructuralModel_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return demetra.sts.io.protobuf.StsProtos.internal_static_sts_BasicStructuralModel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              demetra.sts.io.protobuf.StsProtos.BasicStructuralModel.class, demetra.sts.io.protobuf.StsProtos.BasicStructuralModel.Builder.class);
    }

    public static final int PERIOD_FIELD_NUMBER = 1;
    private int period_;
    /**
     * <code>int32 period = 1;</code>
     * @return The period.
     */
    @java.lang.Override
    public int getPeriod() {
      return period_;
    }

    public static final int NVAR_FIELD_NUMBER = 2;
    private double nvar_;
    /**
     * <code>double nvar = 2;</code>
     * @return The nvar.
     */
    @java.lang.Override
    public double getNvar() {
      return nvar_;
    }

    public static final int LEVEL_FIELD_NUMBER = 3;
    private boolean level_;
    /**
     * <code>bool level = 3;</code>
     * @return The level.
     */
    @java.lang.Override
    public boolean getLevel() {
      return level_;
    }

    public static final int LVAR_FIELD_NUMBER = 4;
    private double lvar_;
    /**
     * <code>double lvar = 4;</code>
     * @return The lvar.
     */
    @java.lang.Override
    public double getLvar() {
      return lvar_;
    }

    public static final int SLOPE_FIELD_NUMBER = 5;
    private boolean slope_;
    /**
     * <code>bool slope = 5;</code>
     * @return The slope.
     */
    @java.lang.Override
    public boolean getSlope() {
      return slope_;
    }

    public static final int SVAR_FIELD_NUMBER = 6;
    private double svar_;
    /**
     * <code>double svar = 6;</code>
     * @return The svar.
     */
    @java.lang.Override
    public double getSvar() {
      return svar_;
    }

    public static final int CYCLE_FIELD_NUMBER = 7;
    private boolean cycle_;
    /**
     * <code>bool cycle = 7;</code>
     * @return The cycle.
     */
    @java.lang.Override
    public boolean getCycle() {
      return cycle_;
    }

    public static final int CYCLE_PERIOD_FIELD_NUMBER = 8;
    private double cyclePeriod_;
    /**
     * <code>double cycle_period = 8;</code>
     * @return The cyclePeriod.
     */
    @java.lang.Override
    public double getCyclePeriod() {
      return cyclePeriod_;
    }

    public static final int CYCLE_FACTOR_FIELD_NUMBER = 9;
    private double cycleFactor_;
    /**
     * <code>double cycle_factor = 9;</code>
     * @return The cycleFactor.
     */
    @java.lang.Override
    public double getCycleFactor() {
      return cycleFactor_;
    }

    public static final int CVAR_FIELD_NUMBER = 10;
    private double cvar_;
    /**
     * <code>double cvar = 10;</code>
     * @return The cvar.
     */
    @java.lang.Override
    public double getCvar() {
      return cvar_;
    }

    public static final int SEASONAL_MODEL_FIELD_NUMBER = 11;
    private int seasonalModel_;
    /**
     * <code>.sts.SeasonalModel seasonal_model = 11;</code>
     * @return The enum numeric value on the wire for seasonalModel.
     */
    @java.lang.Override public int getSeasonalModelValue() {
      return seasonalModel_;
    }
    /**
     * <code>.sts.SeasonalModel seasonal_model = 11;</code>
     * @return The seasonalModel.
     */
    @java.lang.Override public demetra.sts.io.protobuf.StsProtos.SeasonalModel getSeasonalModel() {
      @SuppressWarnings("deprecation")
      demetra.sts.io.protobuf.StsProtos.SeasonalModel result = demetra.sts.io.protobuf.StsProtos.SeasonalModel.valueOf(seasonalModel_);
      return result == null ? demetra.sts.io.protobuf.StsProtos.SeasonalModel.UNRECOGNIZED : result;
    }

    public static final int SEASVAR_FIELD_NUMBER = 12;
    private double seasvar_;
    /**
     * <code>double seasvar = 12;</code>
     * @return The seasvar.
     */
    @java.lang.Override
    public double getSeasvar() {
      return seasvar_;
    }

    public static final int COVARIANCE_FIELD_NUMBER = 13;
    private demetra.toolkit.io.protobuf.ToolkitProtos.Matrix covariance_;
    /**
     * <code>.jd3.Matrix covariance = 13;</code>
     * @return Whether the covariance field is set.
     */
    @java.lang.Override
    public boolean hasCovariance() {
      return covariance_ != null;
    }
    /**
     * <code>.jd3.Matrix covariance = 13;</code>
     * @return The covariance.
     */
    @java.lang.Override
    public demetra.toolkit.io.protobuf.ToolkitProtos.Matrix getCovariance() {
      return covariance_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.Matrix.getDefaultInstance() : covariance_;
    }
    /**
     * <code>.jd3.Matrix covariance = 13;</code>
     */
    @java.lang.Override
    public demetra.toolkit.io.protobuf.ToolkitProtos.MatrixOrBuilder getCovarianceOrBuilder() {
      return getCovariance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (period_ != 0) {
        output.writeInt32(1, period_);
      }
      if (nvar_ != 0D) {
        output.writeDouble(2, nvar_);
      }
      if (level_ != false) {
        output.writeBool(3, level_);
      }
      if (lvar_ != 0D) {
        output.writeDouble(4, lvar_);
      }
      if (slope_ != false) {
        output.writeBool(5, slope_);
      }
      if (svar_ != 0D) {
        output.writeDouble(6, svar_);
      }
      if (cycle_ != false) {
        output.writeBool(7, cycle_);
      }
      if (cyclePeriod_ != 0D) {
        output.writeDouble(8, cyclePeriod_);
      }
      if (cycleFactor_ != 0D) {
        output.writeDouble(9, cycleFactor_);
      }
      if (cvar_ != 0D) {
        output.writeDouble(10, cvar_);
      }
      if (seasonalModel_ != demetra.sts.io.protobuf.StsProtos.SeasonalModel.SEAS_NONE.getNumber()) {
        output.writeEnum(11, seasonalModel_);
      }
      if (seasvar_ != 0D) {
        output.writeDouble(12, seasvar_);
      }
      if (covariance_ != null) {
        output.writeMessage(13, getCovariance());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (period_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, period_);
      }
      if (nvar_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, nvar_);
      }
      if (level_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, level_);
      }
      if (lvar_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, lvar_);
      }
      if (slope_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, slope_);
      }
      if (svar_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, svar_);
      }
      if (cycle_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, cycle_);
      }
      if (cyclePeriod_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, cyclePeriod_);
      }
      if (cycleFactor_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, cycleFactor_);
      }
      if (cvar_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, cvar_);
      }
      if (seasonalModel_ != demetra.sts.io.protobuf.StsProtos.SeasonalModel.SEAS_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, seasonalModel_);
      }
      if (seasvar_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, seasvar_);
      }
      if (covariance_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getCovariance());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof demetra.sts.io.protobuf.StsProtos.BasicStructuralModel)) {
        return super.equals(obj);
      }
      demetra.sts.io.protobuf.StsProtos.BasicStructuralModel other = (demetra.sts.io.protobuf.StsProtos.BasicStructuralModel) obj;

      if (getPeriod()
          != other.getPeriod()) return false;
      if (java.lang.Double.doubleToLongBits(getNvar())
          != java.lang.Double.doubleToLongBits(
              other.getNvar())) return false;
      if (getLevel()
          != other.getLevel()) return false;
      if (java.lang.Double.doubleToLongBits(getLvar())
          != java.lang.Double.doubleToLongBits(
              other.getLvar())) return false;
      if (getSlope()
          != other.getSlope()) return false;
      if (java.lang.Double.doubleToLongBits(getSvar())
          != java.lang.Double.doubleToLongBits(
              other.getSvar())) return false;
      if (getCycle()
          != other.getCycle()) return false;
      if (java.lang.Double.doubleToLongBits(getCyclePeriod())
          != java.lang.Double.doubleToLongBits(
              other.getCyclePeriod())) return false;
      if (java.lang.Double.doubleToLongBits(getCycleFactor())
          != java.lang.Double.doubleToLongBits(
              other.getCycleFactor())) return false;
      if (java.lang.Double.doubleToLongBits(getCvar())
          != java.lang.Double.doubleToLongBits(
              other.getCvar())) return false;
      if (seasonalModel_ != other.seasonalModel_) return false;
      if (java.lang.Double.doubleToLongBits(getSeasvar())
          != java.lang.Double.doubleToLongBits(
              other.getSeasvar())) return false;
      if (hasCovariance() != other.hasCovariance()) return false;
      if (hasCovariance()) {
        if (!getCovariance()
            .equals(other.getCovariance())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + getPeriod();
      hash = (37 * hash) + NVAR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getNvar()));
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLevel());
      hash = (37 * hash) + LVAR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLvar()));
      hash = (37 * hash) + SLOPE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSlope());
      hash = (37 * hash) + SVAR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSvar()));
      hash = (37 * hash) + CYCLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCycle());
      hash = (37 * hash) + CYCLE_PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCyclePeriod()));
      hash = (37 * hash) + CYCLE_FACTOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCycleFactor()));
      hash = (37 * hash) + CVAR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCvar()));
      hash = (37 * hash) + SEASONAL_MODEL_FIELD_NUMBER;
      hash = (53 * hash) + seasonalModel_;
      hash = (37 * hash) + SEASVAR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSeasvar()));
      if (hasCovariance()) {
        hash = (37 * hash) + COVARIANCE_FIELD_NUMBER;
        hash = (53 * hash) + getCovariance().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static demetra.sts.io.protobuf.StsProtos.BasicStructuralModel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sts.io.protobuf.StsProtos.BasicStructuralModel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sts.io.protobuf.StsProtos.BasicStructuralModel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sts.io.protobuf.StsProtos.BasicStructuralModel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sts.io.protobuf.StsProtos.BasicStructuralModel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sts.io.protobuf.StsProtos.BasicStructuralModel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sts.io.protobuf.StsProtos.BasicStructuralModel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.sts.io.protobuf.StsProtos.BasicStructuralModel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.sts.io.protobuf.StsProtos.BasicStructuralModel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static demetra.sts.io.protobuf.StsProtos.BasicStructuralModel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.sts.io.protobuf.StsProtos.BasicStructuralModel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.sts.io.protobuf.StsProtos.BasicStructuralModel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(demetra.sts.io.protobuf.StsProtos.BasicStructuralModel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sts.BasicStructuralModel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sts.BasicStructuralModel)
        demetra.sts.io.protobuf.StsProtos.BasicStructuralModelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return demetra.sts.io.protobuf.StsProtos.internal_static_sts_BasicStructuralModel_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return demetra.sts.io.protobuf.StsProtos.internal_static_sts_BasicStructuralModel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                demetra.sts.io.protobuf.StsProtos.BasicStructuralModel.class, demetra.sts.io.protobuf.StsProtos.BasicStructuralModel.Builder.class);
      }

      // Construct using demetra.sts.io.protobuf.StsProtos.BasicStructuralModel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        period_ = 0;

        nvar_ = 0D;

        level_ = false;

        lvar_ = 0D;

        slope_ = false;

        svar_ = 0D;

        cycle_ = false;

        cyclePeriod_ = 0D;

        cycleFactor_ = 0D;

        cvar_ = 0D;

        seasonalModel_ = 0;

        seasvar_ = 0D;

        if (covarianceBuilder_ == null) {
          covariance_ = null;
        } else {
          covariance_ = null;
          covarianceBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return demetra.sts.io.protobuf.StsProtos.internal_static_sts_BasicStructuralModel_descriptor;
      }

      @java.lang.Override
      public demetra.sts.io.protobuf.StsProtos.BasicStructuralModel getDefaultInstanceForType() {
        return demetra.sts.io.protobuf.StsProtos.BasicStructuralModel.getDefaultInstance();
      }

      @java.lang.Override
      public demetra.sts.io.protobuf.StsProtos.BasicStructuralModel build() {
        demetra.sts.io.protobuf.StsProtos.BasicStructuralModel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public demetra.sts.io.protobuf.StsProtos.BasicStructuralModel buildPartial() {
        demetra.sts.io.protobuf.StsProtos.BasicStructuralModel result = new demetra.sts.io.protobuf.StsProtos.BasicStructuralModel(this);
        result.period_ = period_;
        result.nvar_ = nvar_;
        result.level_ = level_;
        result.lvar_ = lvar_;
        result.slope_ = slope_;
        result.svar_ = svar_;
        result.cycle_ = cycle_;
        result.cyclePeriod_ = cyclePeriod_;
        result.cycleFactor_ = cycleFactor_;
        result.cvar_ = cvar_;
        result.seasonalModel_ = seasonalModel_;
        result.seasvar_ = seasvar_;
        if (covarianceBuilder_ == null) {
          result.covariance_ = covariance_;
        } else {
          result.covariance_ = covarianceBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof demetra.sts.io.protobuf.StsProtos.BasicStructuralModel) {
          return mergeFrom((demetra.sts.io.protobuf.StsProtos.BasicStructuralModel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(demetra.sts.io.protobuf.StsProtos.BasicStructuralModel other) {
        if (other == demetra.sts.io.protobuf.StsProtos.BasicStructuralModel.getDefaultInstance()) return this;
        if (other.getPeriod() != 0) {
          setPeriod(other.getPeriod());
        }
        if (other.getNvar() != 0D) {
          setNvar(other.getNvar());
        }
        if (other.getLevel() != false) {
          setLevel(other.getLevel());
        }
        if (other.getLvar() != 0D) {
          setLvar(other.getLvar());
        }
        if (other.getSlope() != false) {
          setSlope(other.getSlope());
        }
        if (other.getSvar() != 0D) {
          setSvar(other.getSvar());
        }
        if (other.getCycle() != false) {
          setCycle(other.getCycle());
        }
        if (other.getCyclePeriod() != 0D) {
          setCyclePeriod(other.getCyclePeriod());
        }
        if (other.getCycleFactor() != 0D) {
          setCycleFactor(other.getCycleFactor());
        }
        if (other.getCvar() != 0D) {
          setCvar(other.getCvar());
        }
        if (other.seasonalModel_ != 0) {
          setSeasonalModelValue(other.getSeasonalModelValue());
        }
        if (other.getSeasvar() != 0D) {
          setSeasvar(other.getSeasvar());
        }
        if (other.hasCovariance()) {
          mergeCovariance(other.getCovariance());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        demetra.sts.io.protobuf.StsProtos.BasicStructuralModel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (demetra.sts.io.protobuf.StsProtos.BasicStructuralModel) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int period_ ;
      /**
       * <code>int32 period = 1;</code>
       * @return The period.
       */
      @java.lang.Override
      public int getPeriod() {
        return period_;
      }
      /**
       * <code>int32 period = 1;</code>
       * @param value The period to set.
       * @return This builder for chaining.
       */
      public Builder setPeriod(int value) {
        
        period_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 period = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPeriod() {
        
        period_ = 0;
        onChanged();
        return this;
      }

      private double nvar_ ;
      /**
       * <code>double nvar = 2;</code>
       * @return The nvar.
       */
      @java.lang.Override
      public double getNvar() {
        return nvar_;
      }
      /**
       * <code>double nvar = 2;</code>
       * @param value The nvar to set.
       * @return This builder for chaining.
       */
      public Builder setNvar(double value) {
        
        nvar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double nvar = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNvar() {
        
        nvar_ = 0D;
        onChanged();
        return this;
      }

      private boolean level_ ;
      /**
       * <code>bool level = 3;</code>
       * @return The level.
       */
      @java.lang.Override
      public boolean getLevel() {
        return level_;
      }
      /**
       * <code>bool level = 3;</code>
       * @param value The level to set.
       * @return This builder for chaining.
       */
      public Builder setLevel(boolean value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool level = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevel() {
        
        level_ = false;
        onChanged();
        return this;
      }

      private double lvar_ ;
      /**
       * <code>double lvar = 4;</code>
       * @return The lvar.
       */
      @java.lang.Override
      public double getLvar() {
        return lvar_;
      }
      /**
       * <code>double lvar = 4;</code>
       * @param value The lvar to set.
       * @return This builder for chaining.
       */
      public Builder setLvar(double value) {
        
        lvar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double lvar = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLvar() {
        
        lvar_ = 0D;
        onChanged();
        return this;
      }

      private boolean slope_ ;
      /**
       * <code>bool slope = 5;</code>
       * @return The slope.
       */
      @java.lang.Override
      public boolean getSlope() {
        return slope_;
      }
      /**
       * <code>bool slope = 5;</code>
       * @param value The slope to set.
       * @return This builder for chaining.
       */
      public Builder setSlope(boolean value) {
        
        slope_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool slope = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlope() {
        
        slope_ = false;
        onChanged();
        return this;
      }

      private double svar_ ;
      /**
       * <code>double svar = 6;</code>
       * @return The svar.
       */
      @java.lang.Override
      public double getSvar() {
        return svar_;
      }
      /**
       * <code>double svar = 6;</code>
       * @param value The svar to set.
       * @return This builder for chaining.
       */
      public Builder setSvar(double value) {
        
        svar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double svar = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSvar() {
        
        svar_ = 0D;
        onChanged();
        return this;
      }

      private boolean cycle_ ;
      /**
       * <code>bool cycle = 7;</code>
       * @return The cycle.
       */
      @java.lang.Override
      public boolean getCycle() {
        return cycle_;
      }
      /**
       * <code>bool cycle = 7;</code>
       * @param value The cycle to set.
       * @return This builder for chaining.
       */
      public Builder setCycle(boolean value) {
        
        cycle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool cycle = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCycle() {
        
        cycle_ = false;
        onChanged();
        return this;
      }

      private double cyclePeriod_ ;
      /**
       * <code>double cycle_period = 8;</code>
       * @return The cyclePeriod.
       */
      @java.lang.Override
      public double getCyclePeriod() {
        return cyclePeriod_;
      }
      /**
       * <code>double cycle_period = 8;</code>
       * @param value The cyclePeriod to set.
       * @return This builder for chaining.
       */
      public Builder setCyclePeriod(double value) {
        
        cyclePeriod_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double cycle_period = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearCyclePeriod() {
        
        cyclePeriod_ = 0D;
        onChanged();
        return this;
      }

      private double cycleFactor_ ;
      /**
       * <code>double cycle_factor = 9;</code>
       * @return The cycleFactor.
       */
      @java.lang.Override
      public double getCycleFactor() {
        return cycleFactor_;
      }
      /**
       * <code>double cycle_factor = 9;</code>
       * @param value The cycleFactor to set.
       * @return This builder for chaining.
       */
      public Builder setCycleFactor(double value) {
        
        cycleFactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double cycle_factor = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearCycleFactor() {
        
        cycleFactor_ = 0D;
        onChanged();
        return this;
      }

      private double cvar_ ;
      /**
       * <code>double cvar = 10;</code>
       * @return The cvar.
       */
      @java.lang.Override
      public double getCvar() {
        return cvar_;
      }
      /**
       * <code>double cvar = 10;</code>
       * @param value The cvar to set.
       * @return This builder for chaining.
       */
      public Builder setCvar(double value) {
        
        cvar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double cvar = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearCvar() {
        
        cvar_ = 0D;
        onChanged();
        return this;
      }

      private int seasonalModel_ = 0;
      /**
       * <code>.sts.SeasonalModel seasonal_model = 11;</code>
       * @return The enum numeric value on the wire for seasonalModel.
       */
      @java.lang.Override public int getSeasonalModelValue() {
        return seasonalModel_;
      }
      /**
       * <code>.sts.SeasonalModel seasonal_model = 11;</code>
       * @param value The enum numeric value on the wire for seasonalModel to set.
       * @return This builder for chaining.
       */
      public Builder setSeasonalModelValue(int value) {
        
        seasonalModel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.sts.SeasonalModel seasonal_model = 11;</code>
       * @return The seasonalModel.
       */
      @java.lang.Override
      public demetra.sts.io.protobuf.StsProtos.SeasonalModel getSeasonalModel() {
        @SuppressWarnings("deprecation")
        demetra.sts.io.protobuf.StsProtos.SeasonalModel result = demetra.sts.io.protobuf.StsProtos.SeasonalModel.valueOf(seasonalModel_);
        return result == null ? demetra.sts.io.protobuf.StsProtos.SeasonalModel.UNRECOGNIZED : result;
      }
      /**
       * <code>.sts.SeasonalModel seasonal_model = 11;</code>
       * @param value The seasonalModel to set.
       * @return This builder for chaining.
       */
      public Builder setSeasonalModel(demetra.sts.io.protobuf.StsProtos.SeasonalModel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        seasonalModel_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.sts.SeasonalModel seasonal_model = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeasonalModel() {
        
        seasonalModel_ = 0;
        onChanged();
        return this;
      }

      private double seasvar_ ;
      /**
       * <code>double seasvar = 12;</code>
       * @return The seasvar.
       */
      @java.lang.Override
      public double getSeasvar() {
        return seasvar_;
      }
      /**
       * <code>double seasvar = 12;</code>
       * @param value The seasvar to set.
       * @return This builder for chaining.
       */
      public Builder setSeasvar(double value) {
        
        seasvar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double seasvar = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeasvar() {
        
        seasvar_ = 0D;
        onChanged();
        return this;
      }

      private demetra.toolkit.io.protobuf.ToolkitProtos.Matrix covariance_;
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.toolkit.io.protobuf.ToolkitProtos.Matrix, demetra.toolkit.io.protobuf.ToolkitProtos.Matrix.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.MatrixOrBuilder> covarianceBuilder_;
      /**
       * <code>.jd3.Matrix covariance = 13;</code>
       * @return Whether the covariance field is set.
       */
      public boolean hasCovariance() {
        return covarianceBuilder_ != null || covariance_ != null;
      }
      /**
       * <code>.jd3.Matrix covariance = 13;</code>
       * @return The covariance.
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.Matrix getCovariance() {
        if (covarianceBuilder_ == null) {
          return covariance_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.Matrix.getDefaultInstance() : covariance_;
        } else {
          return covarianceBuilder_.getMessage();
        }
      }
      /**
       * <code>.jd3.Matrix covariance = 13;</code>
       */
      public Builder setCovariance(demetra.toolkit.io.protobuf.ToolkitProtos.Matrix value) {
        if (covarianceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          covariance_ = value;
          onChanged();
        } else {
          covarianceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.jd3.Matrix covariance = 13;</code>
       */
      public Builder setCovariance(
          demetra.toolkit.io.protobuf.ToolkitProtos.Matrix.Builder builderForValue) {
        if (covarianceBuilder_ == null) {
          covariance_ = builderForValue.build();
          onChanged();
        } else {
          covarianceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.jd3.Matrix covariance = 13;</code>
       */
      public Builder mergeCovariance(demetra.toolkit.io.protobuf.ToolkitProtos.Matrix value) {
        if (covarianceBuilder_ == null) {
          if (covariance_ != null) {
            covariance_ =
              demetra.toolkit.io.protobuf.ToolkitProtos.Matrix.newBuilder(covariance_).mergeFrom(value).buildPartial();
          } else {
            covariance_ = value;
          }
          onChanged();
        } else {
          covarianceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.jd3.Matrix covariance = 13;</code>
       */
      public Builder clearCovariance() {
        if (covarianceBuilder_ == null) {
          covariance_ = null;
          onChanged();
        } else {
          covariance_ = null;
          covarianceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.jd3.Matrix covariance = 13;</code>
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.Matrix.Builder getCovarianceBuilder() {
        
        onChanged();
        return getCovarianceFieldBuilder().getBuilder();
      }
      /**
       * <code>.jd3.Matrix covariance = 13;</code>
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.MatrixOrBuilder getCovarianceOrBuilder() {
        if (covarianceBuilder_ != null) {
          return covarianceBuilder_.getMessageOrBuilder();
        } else {
          return covariance_ == null ?
              demetra.toolkit.io.protobuf.ToolkitProtos.Matrix.getDefaultInstance() : covariance_;
        }
      }
      /**
       * <code>.jd3.Matrix covariance = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.toolkit.io.protobuf.ToolkitProtos.Matrix, demetra.toolkit.io.protobuf.ToolkitProtos.Matrix.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.MatrixOrBuilder> 
          getCovarianceFieldBuilder() {
        if (covarianceBuilder_ == null) {
          covarianceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              demetra.toolkit.io.protobuf.ToolkitProtos.Matrix, demetra.toolkit.io.protobuf.ToolkitProtos.Matrix.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.MatrixOrBuilder>(
                  getCovariance(),
                  getParentForChildren(),
                  isClean());
          covariance_ = null;
        }
        return covarianceBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sts.BasicStructuralModel)
    }

    // @@protoc_insertion_point(class_scope:sts.BasicStructuralModel)
    private static final demetra.sts.io.protobuf.StsProtos.BasicStructuralModel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new demetra.sts.io.protobuf.StsProtos.BasicStructuralModel();
    }

    public static demetra.sts.io.protobuf.StsProtos.BasicStructuralModel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BasicStructuralModel>
        PARSER = new com.google.protobuf.AbstractParser<BasicStructuralModel>() {
      @java.lang.Override
      public BasicStructuralModel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BasicStructuralModel(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BasicStructuralModel> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BasicStructuralModel> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public demetra.sts.io.protobuf.StsProtos.BasicStructuralModel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sts_BasicStructuralModel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sts_BasicStructuralModel_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tsts.proto\022\003sts\032\rtoolkit.proto\"\225\002\n\024Basi" +
      "cStructuralModel\022\016\n\006period\030\001 \001(\005\022\014\n\004nvar" +
      "\030\002 \001(\001\022\r\n\005level\030\003 \001(\010\022\014\n\004lvar\030\004 \001(\001\022\r\n\005s" +
      "lope\030\005 \001(\010\022\014\n\004svar\030\006 \001(\001\022\r\n\005cycle\030\007 \001(\010\022" +
      "\024\n\014cycle_period\030\010 \001(\001\022\024\n\014cycle_factor\030\t " +
      "\001(\001\022\014\n\004cvar\030\n \001(\001\022*\n\016seasonal_model\030\013 \001(" +
      "\0162\022.sts.SeasonalModel\022\017\n\007seasvar\030\014 \001(\001\022\037" +
      "\n\ncovariance\030\r \001(\0132\013.jd3.Matrix*p\n\rSeaso" +
      "nalModel\022\r\n\tSEAS_NONE\020\000\022\016\n\nSEAS_DUMMY\020\001\022" +
      "\026\n\022SEAS_TRIGONOMETRIC\020\002\022\030\n\024SEAS_HARRISON" +
      "STEVENS\020\003\022\016\n\nSEAS_CRUDE\020\004B$\n\027demetra.sts" +
      ".io.protobufB\tStsProtosP\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          demetra.toolkit.io.protobuf.ToolkitProtos.getDescriptor(),
        });
    internal_static_sts_BasicStructuralModel_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_sts_BasicStructuralModel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sts_BasicStructuralModel_descriptor,
        new java.lang.String[] { "Period", "Nvar", "Level", "Lvar", "Slope", "Svar", "Cycle", "CyclePeriod", "CycleFactor", "Cvar", "SeasonalModel", "Seasvar", "Covariance", });
    demetra.toolkit.io.protobuf.ToolkitProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
