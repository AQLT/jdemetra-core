// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: x13.proto

package demetra.x13.io.protobuf;

public final class X13Protos {
  private X13Protos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface X11SpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:jd3.X11Spec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.jd3.X11Spec.DecompositionMode mode = 1;</code>
     * @return The enum numeric value on the wire for mode.
     */
    int getModeValue();
    /**
     * <code>.jd3.X11Spec.DecompositionMode mode = 1;</code>
     * @return The mode.
     */
    demetra.x13.io.protobuf.X13Protos.X11Spec.DecompositionMode getMode();

    /**
     * <code>bool seasonal = 2;</code>
     * @return The seasonal.
     */
    boolean getSeasonal();

    /**
     * <code>int32 henderson = 3;</code>
     * @return The henderson.
     */
    int getHenderson();

    /**
     * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
     * @return A list containing the sfilter.
     */
    java.util.List<demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter> getSfilterList();
    /**
     * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
     * @return The count of sfilter.
     */
    int getSfilterCount();
    /**
     * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
     * @param index The index of the element to return.
     * @return The sfilter at the given index.
     */
    demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter getSfilter(int index);
    /**
     * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
     * @return A list containing the enum numeric values on the wire for sfilter.
     */
    java.util.List<java.lang.Integer>
    getSfilterValueList();
    /**
     * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of sfilter at the given index.
     */
    int getSfilterValue(int index);

    /**
     * <code>double lsig = 5;</code>
     * @return The lsig.
     */
    double getLsig();

    /**
     * <code>double usig = 6;</code>
     * @return The usig.
     */
    double getUsig();

    /**
     * <code>int32 nfcasts = 7;</code>
     * @return The nfcasts.
     */
    int getNfcasts();

    /**
     * <code>int32 nbcasts = 8;</code>
     * @return The nbcasts.
     */
    int getNbcasts();

    /**
     * <code>.jd3.X11Spec.CalendarSigma sigma = 9;</code>
     * @return The enum numeric value on the wire for sigma.
     */
    int getSigmaValue();
    /**
     * <code>.jd3.X11Spec.CalendarSigma sigma = 9;</code>
     * @return The sigma.
     */
    demetra.x13.io.protobuf.X13Protos.X11Spec.CalendarSigma getSigma();

    /**
     * <code>repeated int32 vsigma = 10;</code>
     * @return A list containing the vsigma.
     */
    java.util.List<java.lang.Integer> getVsigmaList();
    /**
     * <code>repeated int32 vsigma = 10;</code>
     * @return The count of vsigma.
     */
    int getVsigmaCount();
    /**
     * <code>repeated int32 vsigma = 10;</code>
     * @param index The index of the element to return.
     * @return The vsigma at the given index.
     */
    int getVsigma(int index);

    /**
     * <code>bool excudefcasts = 11;</code>
     * @return The excudefcasts.
     */
    boolean getExcudefcasts();

    /**
     * <code>.jd3.X11Spec.BiasCorrection bias = 12;</code>
     * @return The enum numeric value on the wire for bias.
     */
    int getBiasValue();
    /**
     * <code>.jd3.X11Spec.BiasCorrection bias = 12;</code>
     * @return The bias.
     */
    demetra.x13.io.protobuf.X13Protos.X11Spec.BiasCorrection getBias();
  }
  /**
   * Protobuf type {@code jd3.X11Spec}
   */
  public static final class X11Spec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:jd3.X11Spec)
      X11SpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use X11Spec.newBuilder() to construct.
    private X11Spec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private X11Spec() {
      mode_ = 0;
      sfilter_ = java.util.Collections.emptyList();
      sigma_ = 0;
      vsigma_ = emptyIntList();
      bias_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new X11Spec();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private X11Spec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              mode_ = rawValue;
              break;
            }
            case 16: {

              seasonal_ = input.readBool();
              break;
            }
            case 24: {

              henderson_ = input.readInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                sfilter_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              sfilter_.add(rawValue);
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  sfilter_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                sfilter_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            case 41: {

              lsig_ = input.readDouble();
              break;
            }
            case 49: {

              usig_ = input.readDouble();
              break;
            }
            case 56: {

              nfcasts_ = input.readInt32();
              break;
            }
            case 64: {

              nbcasts_ = input.readInt32();
              break;
            }
            case 72: {
              int rawValue = input.readEnum();

              sigma_ = rawValue;
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                vsigma_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              vsigma_.addInt(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                vsigma_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                vsigma_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {

              excudefcasts_ = input.readBool();
              break;
            }
            case 96: {
              int rawValue = input.readEnum();

              bias_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          sfilter_ = java.util.Collections.unmodifiableList(sfilter_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          vsigma_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X11Spec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X11Spec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              demetra.x13.io.protobuf.X13Protos.X11Spec.class, demetra.x13.io.protobuf.X13Protos.X11Spec.Builder.class);
    }

    /**
     * Protobuf enum {@code jd3.X11Spec.DecompositionMode}
     */
    public enum DecompositionMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <code>ADDITIVE = 1;</code>
       */
      ADDITIVE(1),
      /**
       * <code>MULTIPLICATIVE = 2;</code>
       */
      MULTIPLICATIVE(2),
      /**
       * <code>LOGADDITIVE = 3;</code>
       */
      LOGADDITIVE(3),
      /**
       * <code>PSEUDOADDITIVE = 4;</code>
       */
      PSEUDOADDITIVE(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>ADDITIVE = 1;</code>
       */
      public static final int ADDITIVE_VALUE = 1;
      /**
       * <code>MULTIPLICATIVE = 2;</code>
       */
      public static final int MULTIPLICATIVE_VALUE = 2;
      /**
       * <code>LOGADDITIVE = 3;</code>
       */
      public static final int LOGADDITIVE_VALUE = 3;
      /**
       * <code>PSEUDOADDITIVE = 4;</code>
       */
      public static final int PSEUDOADDITIVE_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DecompositionMode valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static DecompositionMode forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return ADDITIVE;
          case 2: return MULTIPLICATIVE;
          case 3: return LOGADDITIVE;
          case 4: return PSEUDOADDITIVE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DecompositionMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DecompositionMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DecompositionMode>() {
              public DecompositionMode findValueByNumber(int number) {
                return DecompositionMode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return demetra.x13.io.protobuf.X13Protos.X11Spec.getDescriptor().getEnumTypes().get(0);
      }

      private static final DecompositionMode[] VALUES = values();

      public static DecompositionMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private DecompositionMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:jd3.X11Spec.DecompositionMode)
    }

    /**
     * Protobuf enum {@code jd3.X11Spec.SeasonalFilter}
     */
    public enum SeasonalFilter
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>MSR = 0;</code>
       */
      MSR(0),
      /**
       * <code>STABLE = 1;</code>
       */
      STABLE(1),
      /**
       * <code>S3X1 = 2;</code>
       */
      S3X1(2),
      /**
       * <code>S3X3 = 3;</code>
       */
      S3X3(3),
      /**
       * <code>S3X5 = 4;</code>
       */
      S3X5(4),
      /**
       * <code>S3X9 = 5;</code>
       */
      S3X9(5),
      /**
       * <code>S3X15 = 6;</code>
       */
      S3X15(6),
      /**
       * <code>X11DEFAULT = 7;</code>
       */
      X11DEFAULT(7),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>MSR = 0;</code>
       */
      public static final int MSR_VALUE = 0;
      /**
       * <code>STABLE = 1;</code>
       */
      public static final int STABLE_VALUE = 1;
      /**
       * <code>S3X1 = 2;</code>
       */
      public static final int S3X1_VALUE = 2;
      /**
       * <code>S3X3 = 3;</code>
       */
      public static final int S3X3_VALUE = 3;
      /**
       * <code>S3X5 = 4;</code>
       */
      public static final int S3X5_VALUE = 4;
      /**
       * <code>S3X9 = 5;</code>
       */
      public static final int S3X9_VALUE = 5;
      /**
       * <code>S3X15 = 6;</code>
       */
      public static final int S3X15_VALUE = 6;
      /**
       * <code>X11DEFAULT = 7;</code>
       */
      public static final int X11DEFAULT_VALUE = 7;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SeasonalFilter valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static SeasonalFilter forNumber(int value) {
        switch (value) {
          case 0: return MSR;
          case 1: return STABLE;
          case 2: return S3X1;
          case 3: return S3X3;
          case 4: return S3X5;
          case 5: return S3X9;
          case 6: return S3X15;
          case 7: return X11DEFAULT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SeasonalFilter>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SeasonalFilter> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SeasonalFilter>() {
              public SeasonalFilter findValueByNumber(int number) {
                return SeasonalFilter.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return demetra.x13.io.protobuf.X13Protos.X11Spec.getDescriptor().getEnumTypes().get(1);
      }

      private static final SeasonalFilter[] VALUES = values();

      public static SeasonalFilter valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SeasonalFilter(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:jd3.X11Spec.SeasonalFilter)
    }

    /**
     * Protobuf enum {@code jd3.X11Spec.CalendarSigma}
     */
    public enum CalendarSigma
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NONE = 0;</code>
       */
      NONE(0),
      /**
       * <code>SIGNIF = 1;</code>
       */
      SIGNIF(1),
      /**
       * <code>ALL = 2;</code>
       */
      ALL(2),
      /**
       * <code>SELECT = 3;</code>
       */
      SELECT(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;
      /**
       * <code>SIGNIF = 1;</code>
       */
      public static final int SIGNIF_VALUE = 1;
      /**
       * <code>ALL = 2;</code>
       */
      public static final int ALL_VALUE = 2;
      /**
       * <code>SELECT = 3;</code>
       */
      public static final int SELECT_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CalendarSigma valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static CalendarSigma forNumber(int value) {
        switch (value) {
          case 0: return NONE;
          case 1: return SIGNIF;
          case 2: return ALL;
          case 3: return SELECT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<CalendarSigma>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          CalendarSigma> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CalendarSigma>() {
              public CalendarSigma findValueByNumber(int number) {
                return CalendarSigma.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return demetra.x13.io.protobuf.X13Protos.X11Spec.getDescriptor().getEnumTypes().get(2);
      }

      private static final CalendarSigma[] VALUES = values();

      public static CalendarSigma valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private CalendarSigma(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:jd3.X11Spec.CalendarSigma)
    }

    /**
     * Protobuf enum {@code jd3.X11Spec.BiasCorrection}
     */
    public enum BiasCorrection
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NOCORRECTION = 0;</code>
       */
      NOCORRECTION(0),
      /**
       * <code>LEGACY = 1;</code>
       */
      LEGACY(1),
      /**
       * <code>SMOOTH = 2;</code>
       */
      SMOOTH(2),
      /**
       * <code>RATIO = 3;</code>
       */
      RATIO(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>NOCORRECTION = 0;</code>
       */
      public static final int NOCORRECTION_VALUE = 0;
      /**
       * <code>LEGACY = 1;</code>
       */
      public static final int LEGACY_VALUE = 1;
      /**
       * <code>SMOOTH = 2;</code>
       */
      public static final int SMOOTH_VALUE = 2;
      /**
       * <code>RATIO = 3;</code>
       */
      public static final int RATIO_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static BiasCorrection valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static BiasCorrection forNumber(int value) {
        switch (value) {
          case 0: return NOCORRECTION;
          case 1: return LEGACY;
          case 2: return SMOOTH;
          case 3: return RATIO;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<BiasCorrection>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          BiasCorrection> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<BiasCorrection>() {
              public BiasCorrection findValueByNumber(int number) {
                return BiasCorrection.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return demetra.x13.io.protobuf.X13Protos.X11Spec.getDescriptor().getEnumTypes().get(3);
      }

      private static final BiasCorrection[] VALUES = values();

      public static BiasCorrection valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private BiasCorrection(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:jd3.X11Spec.BiasCorrection)
    }

    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_;
    /**
     * <code>.jd3.X11Spec.DecompositionMode mode = 1;</code>
     * @return The enum numeric value on the wire for mode.
     */
    @java.lang.Override public int getModeValue() {
      return mode_;
    }
    /**
     * <code>.jd3.X11Spec.DecompositionMode mode = 1;</code>
     * @return The mode.
     */
    @java.lang.Override public demetra.x13.io.protobuf.X13Protos.X11Spec.DecompositionMode getMode() {
      @SuppressWarnings("deprecation")
      demetra.x13.io.protobuf.X13Protos.X11Spec.DecompositionMode result = demetra.x13.io.protobuf.X13Protos.X11Spec.DecompositionMode.valueOf(mode_);
      return result == null ? demetra.x13.io.protobuf.X13Protos.X11Spec.DecompositionMode.UNRECOGNIZED : result;
    }

    public static final int SEASONAL_FIELD_NUMBER = 2;
    private boolean seasonal_;
    /**
     * <code>bool seasonal = 2;</code>
     * @return The seasonal.
     */
    @java.lang.Override
    public boolean getSeasonal() {
      return seasonal_;
    }

    public static final int HENDERSON_FIELD_NUMBER = 3;
    private int henderson_;
    /**
     * <code>int32 henderson = 3;</code>
     * @return The henderson.
     */
    @java.lang.Override
    public int getHenderson() {
      return henderson_;
    }

    public static final int SFILTER_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> sfilter_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter> sfilter_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter>() {
              public demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter result = demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter.valueOf(from);
                return result == null ? demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
     * @return A list containing the sfilter.
     */
    @java.lang.Override
    public java.util.List<demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter> getSfilterList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter>(sfilter_, sfilter_converter_);
    }
    /**
     * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
     * @return The count of sfilter.
     */
    @java.lang.Override
    public int getSfilterCount() {
      return sfilter_.size();
    }
    /**
     * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
     * @param index The index of the element to return.
     * @return The sfilter at the given index.
     */
    @java.lang.Override
    public demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter getSfilter(int index) {
      return sfilter_converter_.convert(sfilter_.get(index));
    }
    /**
     * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
     * @return A list containing the enum numeric values on the wire for sfilter.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getSfilterValueList() {
      return sfilter_;
    }
    /**
     * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of sfilter at the given index.
     */
    @java.lang.Override
    public int getSfilterValue(int index) {
      return sfilter_.get(index);
    }
    private int sfilterMemoizedSerializedSize;

    public static final int LSIG_FIELD_NUMBER = 5;
    private double lsig_;
    /**
     * <code>double lsig = 5;</code>
     * @return The lsig.
     */
    @java.lang.Override
    public double getLsig() {
      return lsig_;
    }

    public static final int USIG_FIELD_NUMBER = 6;
    private double usig_;
    /**
     * <code>double usig = 6;</code>
     * @return The usig.
     */
    @java.lang.Override
    public double getUsig() {
      return usig_;
    }

    public static final int NFCASTS_FIELD_NUMBER = 7;
    private int nfcasts_;
    /**
     * <code>int32 nfcasts = 7;</code>
     * @return The nfcasts.
     */
    @java.lang.Override
    public int getNfcasts() {
      return nfcasts_;
    }

    public static final int NBCASTS_FIELD_NUMBER = 8;
    private int nbcasts_;
    /**
     * <code>int32 nbcasts = 8;</code>
     * @return The nbcasts.
     */
    @java.lang.Override
    public int getNbcasts() {
      return nbcasts_;
    }

    public static final int SIGMA_FIELD_NUMBER = 9;
    private int sigma_;
    /**
     * <code>.jd3.X11Spec.CalendarSigma sigma = 9;</code>
     * @return The enum numeric value on the wire for sigma.
     */
    @java.lang.Override public int getSigmaValue() {
      return sigma_;
    }
    /**
     * <code>.jd3.X11Spec.CalendarSigma sigma = 9;</code>
     * @return The sigma.
     */
    @java.lang.Override public demetra.x13.io.protobuf.X13Protos.X11Spec.CalendarSigma getSigma() {
      @SuppressWarnings("deprecation")
      demetra.x13.io.protobuf.X13Protos.X11Spec.CalendarSigma result = demetra.x13.io.protobuf.X13Protos.X11Spec.CalendarSigma.valueOf(sigma_);
      return result == null ? demetra.x13.io.protobuf.X13Protos.X11Spec.CalendarSigma.UNRECOGNIZED : result;
    }

    public static final int VSIGMA_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.IntList vsigma_;
    /**
     * <code>repeated int32 vsigma = 10;</code>
     * @return A list containing the vsigma.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getVsigmaList() {
      return vsigma_;
    }
    /**
     * <code>repeated int32 vsigma = 10;</code>
     * @return The count of vsigma.
     */
    public int getVsigmaCount() {
      return vsigma_.size();
    }
    /**
     * <code>repeated int32 vsigma = 10;</code>
     * @param index The index of the element to return.
     * @return The vsigma at the given index.
     */
    public int getVsigma(int index) {
      return vsigma_.getInt(index);
    }
    private int vsigmaMemoizedSerializedSize = -1;

    public static final int EXCUDEFCASTS_FIELD_NUMBER = 11;
    private boolean excudefcasts_;
    /**
     * <code>bool excudefcasts = 11;</code>
     * @return The excudefcasts.
     */
    @java.lang.Override
    public boolean getExcudefcasts() {
      return excudefcasts_;
    }

    public static final int BIAS_FIELD_NUMBER = 12;
    private int bias_;
    /**
     * <code>.jd3.X11Spec.BiasCorrection bias = 12;</code>
     * @return The enum numeric value on the wire for bias.
     */
    @java.lang.Override public int getBiasValue() {
      return bias_;
    }
    /**
     * <code>.jd3.X11Spec.BiasCorrection bias = 12;</code>
     * @return The bias.
     */
    @java.lang.Override public demetra.x13.io.protobuf.X13Protos.X11Spec.BiasCorrection getBias() {
      @SuppressWarnings("deprecation")
      demetra.x13.io.protobuf.X13Protos.X11Spec.BiasCorrection result = demetra.x13.io.protobuf.X13Protos.X11Spec.BiasCorrection.valueOf(bias_);
      return result == null ? demetra.x13.io.protobuf.X13Protos.X11Spec.BiasCorrection.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (mode_ != demetra.x13.io.protobuf.X13Protos.X11Spec.DecompositionMode.UNKNOWN.getNumber()) {
        output.writeEnum(1, mode_);
      }
      if (seasonal_ != false) {
        output.writeBool(2, seasonal_);
      }
      if (henderson_ != 0) {
        output.writeInt32(3, henderson_);
      }
      if (getSfilterList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(sfilterMemoizedSerializedSize);
      }
      for (int i = 0; i < sfilter_.size(); i++) {
        output.writeEnumNoTag(sfilter_.get(i));
      }
      if (lsig_ != 0D) {
        output.writeDouble(5, lsig_);
      }
      if (usig_ != 0D) {
        output.writeDouble(6, usig_);
      }
      if (nfcasts_ != 0) {
        output.writeInt32(7, nfcasts_);
      }
      if (nbcasts_ != 0) {
        output.writeInt32(8, nbcasts_);
      }
      if (sigma_ != demetra.x13.io.protobuf.X13Protos.X11Spec.CalendarSigma.NONE.getNumber()) {
        output.writeEnum(9, sigma_);
      }
      if (getVsigmaList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(vsigmaMemoizedSerializedSize);
      }
      for (int i = 0; i < vsigma_.size(); i++) {
        output.writeInt32NoTag(vsigma_.getInt(i));
      }
      if (excudefcasts_ != false) {
        output.writeBool(11, excudefcasts_);
      }
      if (bias_ != demetra.x13.io.protobuf.X13Protos.X11Spec.BiasCorrection.NOCORRECTION.getNumber()) {
        output.writeEnum(12, bias_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mode_ != demetra.x13.io.protobuf.X13Protos.X11Spec.DecompositionMode.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mode_);
      }
      if (seasonal_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, seasonal_);
      }
      if (henderson_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, henderson_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sfilter_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(sfilter_.get(i));
        }
        size += dataSize;
        if (!getSfilterList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }sfilterMemoizedSerializedSize = dataSize;
      }
      if (lsig_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, lsig_);
      }
      if (usig_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, usig_);
      }
      if (nfcasts_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, nfcasts_);
      }
      if (nbcasts_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, nbcasts_);
      }
      if (sigma_ != demetra.x13.io.protobuf.X13Protos.X11Spec.CalendarSigma.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, sigma_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < vsigma_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(vsigma_.getInt(i));
        }
        size += dataSize;
        if (!getVsigmaList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        vsigmaMemoizedSerializedSize = dataSize;
      }
      if (excudefcasts_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, excudefcasts_);
      }
      if (bias_ != demetra.x13.io.protobuf.X13Protos.X11Spec.BiasCorrection.NOCORRECTION.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, bias_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof demetra.x13.io.protobuf.X13Protos.X11Spec)) {
        return super.equals(obj);
      }
      demetra.x13.io.protobuf.X13Protos.X11Spec other = (demetra.x13.io.protobuf.X13Protos.X11Spec) obj;

      if (mode_ != other.mode_) return false;
      if (getSeasonal()
          != other.getSeasonal()) return false;
      if (getHenderson()
          != other.getHenderson()) return false;
      if (!sfilter_.equals(other.sfilter_)) return false;
      if (java.lang.Double.doubleToLongBits(getLsig())
          != java.lang.Double.doubleToLongBits(
              other.getLsig())) return false;
      if (java.lang.Double.doubleToLongBits(getUsig())
          != java.lang.Double.doubleToLongBits(
              other.getUsig())) return false;
      if (getNfcasts()
          != other.getNfcasts()) return false;
      if (getNbcasts()
          != other.getNbcasts()) return false;
      if (sigma_ != other.sigma_) return false;
      if (!getVsigmaList()
          .equals(other.getVsigmaList())) return false;
      if (getExcudefcasts()
          != other.getExcudefcasts()) return false;
      if (bias_ != other.bias_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + mode_;
      hash = (37 * hash) + SEASONAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSeasonal());
      hash = (37 * hash) + HENDERSON_FIELD_NUMBER;
      hash = (53 * hash) + getHenderson();
      if (getSfilterCount() > 0) {
        hash = (37 * hash) + SFILTER_FIELD_NUMBER;
        hash = (53 * hash) + sfilter_.hashCode();
      }
      hash = (37 * hash) + LSIG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLsig()));
      hash = (37 * hash) + USIG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getUsig()));
      hash = (37 * hash) + NFCASTS_FIELD_NUMBER;
      hash = (53 * hash) + getNfcasts();
      hash = (37 * hash) + NBCASTS_FIELD_NUMBER;
      hash = (53 * hash) + getNbcasts();
      hash = (37 * hash) + SIGMA_FIELD_NUMBER;
      hash = (53 * hash) + sigma_;
      if (getVsigmaCount() > 0) {
        hash = (37 * hash) + VSIGMA_FIELD_NUMBER;
        hash = (53 * hash) + getVsigmaList().hashCode();
      }
      hash = (37 * hash) + EXCUDEFCASTS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getExcudefcasts());
      hash = (37 * hash) + BIAS_FIELD_NUMBER;
      hash = (53 * hash) + bias_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static demetra.x13.io.protobuf.X13Protos.X11Spec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.x13.io.protobuf.X13Protos.X11Spec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.x13.io.protobuf.X13Protos.X11Spec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.x13.io.protobuf.X13Protos.X11Spec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.x13.io.protobuf.X13Protos.X11Spec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.x13.io.protobuf.X13Protos.X11Spec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.x13.io.protobuf.X13Protos.X11Spec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.x13.io.protobuf.X13Protos.X11Spec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.x13.io.protobuf.X13Protos.X11Spec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static demetra.x13.io.protobuf.X13Protos.X11Spec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.x13.io.protobuf.X13Protos.X11Spec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.x13.io.protobuf.X13Protos.X11Spec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(demetra.x13.io.protobuf.X13Protos.X11Spec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jd3.X11Spec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:jd3.X11Spec)
        demetra.x13.io.protobuf.X13Protos.X11SpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X11Spec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X11Spec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                demetra.x13.io.protobuf.X13Protos.X11Spec.class, demetra.x13.io.protobuf.X13Protos.X11Spec.Builder.class);
      }

      // Construct using demetra.x13.io.protobuf.X13Protos.X11Spec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        mode_ = 0;

        seasonal_ = false;

        henderson_ = 0;

        sfilter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        lsig_ = 0D;

        usig_ = 0D;

        nfcasts_ = 0;

        nbcasts_ = 0;

        sigma_ = 0;

        vsigma_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        excudefcasts_ = false;

        bias_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X11Spec_descriptor;
      }

      @java.lang.Override
      public demetra.x13.io.protobuf.X13Protos.X11Spec getDefaultInstanceForType() {
        return demetra.x13.io.protobuf.X13Protos.X11Spec.getDefaultInstance();
      }

      @java.lang.Override
      public demetra.x13.io.protobuf.X13Protos.X11Spec build() {
        demetra.x13.io.protobuf.X13Protos.X11Spec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public demetra.x13.io.protobuf.X13Protos.X11Spec buildPartial() {
        demetra.x13.io.protobuf.X13Protos.X11Spec result = new demetra.x13.io.protobuf.X13Protos.X11Spec(this);
        int from_bitField0_ = bitField0_;
        result.mode_ = mode_;
        result.seasonal_ = seasonal_;
        result.henderson_ = henderson_;
        if (((bitField0_ & 0x00000001) != 0)) {
          sfilter_ = java.util.Collections.unmodifiableList(sfilter_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.sfilter_ = sfilter_;
        result.lsig_ = lsig_;
        result.usig_ = usig_;
        result.nfcasts_ = nfcasts_;
        result.nbcasts_ = nbcasts_;
        result.sigma_ = sigma_;
        if (((bitField0_ & 0x00000002) != 0)) {
          vsigma_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.vsigma_ = vsigma_;
        result.excudefcasts_ = excudefcasts_;
        result.bias_ = bias_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof demetra.x13.io.protobuf.X13Protos.X11Spec) {
          return mergeFrom((demetra.x13.io.protobuf.X13Protos.X11Spec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(demetra.x13.io.protobuf.X13Protos.X11Spec other) {
        if (other == demetra.x13.io.protobuf.X13Protos.X11Spec.getDefaultInstance()) return this;
        if (other.mode_ != 0) {
          setModeValue(other.getModeValue());
        }
        if (other.getSeasonal() != false) {
          setSeasonal(other.getSeasonal());
        }
        if (other.getHenderson() != 0) {
          setHenderson(other.getHenderson());
        }
        if (!other.sfilter_.isEmpty()) {
          if (sfilter_.isEmpty()) {
            sfilter_ = other.sfilter_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSfilterIsMutable();
            sfilter_.addAll(other.sfilter_);
          }
          onChanged();
        }
        if (other.getLsig() != 0D) {
          setLsig(other.getLsig());
        }
        if (other.getUsig() != 0D) {
          setUsig(other.getUsig());
        }
        if (other.getNfcasts() != 0) {
          setNfcasts(other.getNfcasts());
        }
        if (other.getNbcasts() != 0) {
          setNbcasts(other.getNbcasts());
        }
        if (other.sigma_ != 0) {
          setSigmaValue(other.getSigmaValue());
        }
        if (!other.vsigma_.isEmpty()) {
          if (vsigma_.isEmpty()) {
            vsigma_ = other.vsigma_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureVsigmaIsMutable();
            vsigma_.addAll(other.vsigma_);
          }
          onChanged();
        }
        if (other.getExcudefcasts() != false) {
          setExcudefcasts(other.getExcudefcasts());
        }
        if (other.bias_ != 0) {
          setBiasValue(other.getBiasValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        demetra.x13.io.protobuf.X13Protos.X11Spec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (demetra.x13.io.protobuf.X13Protos.X11Spec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int mode_ = 0;
      /**
       * <code>.jd3.X11Spec.DecompositionMode mode = 1;</code>
       * @return The enum numeric value on the wire for mode.
       */
      @java.lang.Override public int getModeValue() {
        return mode_;
      }
      /**
       * <code>.jd3.X11Spec.DecompositionMode mode = 1;</code>
       * @param value The enum numeric value on the wire for mode to set.
       * @return This builder for chaining.
       */
      public Builder setModeValue(int value) {
        
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.jd3.X11Spec.DecompositionMode mode = 1;</code>
       * @return The mode.
       */
      @java.lang.Override
      public demetra.x13.io.protobuf.X13Protos.X11Spec.DecompositionMode getMode() {
        @SuppressWarnings("deprecation")
        demetra.x13.io.protobuf.X13Protos.X11Spec.DecompositionMode result = demetra.x13.io.protobuf.X13Protos.X11Spec.DecompositionMode.valueOf(mode_);
        return result == null ? demetra.x13.io.protobuf.X13Protos.X11Spec.DecompositionMode.UNRECOGNIZED : result;
      }
      /**
       * <code>.jd3.X11Spec.DecompositionMode mode = 1;</code>
       * @param value The mode to set.
       * @return This builder for chaining.
       */
      public Builder setMode(demetra.x13.io.protobuf.X13Protos.X11Spec.DecompositionMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        mode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.jd3.X11Spec.DecompositionMode mode = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMode() {
        
        mode_ = 0;
        onChanged();
        return this;
      }

      private boolean seasonal_ ;
      /**
       * <code>bool seasonal = 2;</code>
       * @return The seasonal.
       */
      @java.lang.Override
      public boolean getSeasonal() {
        return seasonal_;
      }
      /**
       * <code>bool seasonal = 2;</code>
       * @param value The seasonal to set.
       * @return This builder for chaining.
       */
      public Builder setSeasonal(boolean value) {
        
        seasonal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool seasonal = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeasonal() {
        
        seasonal_ = false;
        onChanged();
        return this;
      }

      private int henderson_ ;
      /**
       * <code>int32 henderson = 3;</code>
       * @return The henderson.
       */
      @java.lang.Override
      public int getHenderson() {
        return henderson_;
      }
      /**
       * <code>int32 henderson = 3;</code>
       * @param value The henderson to set.
       * @return This builder for chaining.
       */
      public Builder setHenderson(int value) {
        
        henderson_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 henderson = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHenderson() {
        
        henderson_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> sfilter_ =
        java.util.Collections.emptyList();
      private void ensureSfilterIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          sfilter_ = new java.util.ArrayList<java.lang.Integer>(sfilter_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
       * @return A list containing the sfilter.
       */
      public java.util.List<demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter> getSfilterList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter>(sfilter_, sfilter_converter_);
      }
      /**
       * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
       * @return The count of sfilter.
       */
      public int getSfilterCount() {
        return sfilter_.size();
      }
      /**
       * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
       * @param index The index of the element to return.
       * @return The sfilter at the given index.
       */
      public demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter getSfilter(int index) {
        return sfilter_converter_.convert(sfilter_.get(index));
      }
      /**
       * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
       * @param index The index to set the value at.
       * @param value The sfilter to set.
       * @return This builder for chaining.
       */
      public Builder setSfilter(
          int index, demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSfilterIsMutable();
        sfilter_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
       * @param value The sfilter to add.
       * @return This builder for chaining.
       */
      public Builder addSfilter(demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSfilterIsMutable();
        sfilter_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
       * @param values The sfilter to add.
       * @return This builder for chaining.
       */
      public Builder addAllSfilter(
          java.lang.Iterable<? extends demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter> values) {
        ensureSfilterIsMutable();
        for (demetra.x13.io.protobuf.X13Protos.X11Spec.SeasonalFilter value : values) {
          sfilter_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSfilter() {
        sfilter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
       * @return A list containing the enum numeric values on the wire for sfilter.
       */
      public java.util.List<java.lang.Integer>
      getSfilterValueList() {
        return java.util.Collections.unmodifiableList(sfilter_);
      }
      /**
       * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of sfilter at the given index.
       */
      public int getSfilterValue(int index) {
        return sfilter_.get(index);
      }
      /**
       * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of sfilter at the given index.
       * @return This builder for chaining.
       */
      public Builder setSfilterValue(
          int index, int value) {
        ensureSfilterIsMutable();
        sfilter_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
       * @param value The enum numeric value on the wire for sfilter to add.
       * @return This builder for chaining.
       */
      public Builder addSfilterValue(int value) {
        ensureSfilterIsMutable();
        sfilter_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .jd3.X11Spec.SeasonalFilter sfilter = 4;</code>
       * @param values The enum numeric values on the wire for sfilter to add.
       * @return This builder for chaining.
       */
      public Builder addAllSfilterValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureSfilterIsMutable();
        for (int value : values) {
          sfilter_.add(value);
        }
        onChanged();
        return this;
      }

      private double lsig_ ;
      /**
       * <code>double lsig = 5;</code>
       * @return The lsig.
       */
      @java.lang.Override
      public double getLsig() {
        return lsig_;
      }
      /**
       * <code>double lsig = 5;</code>
       * @param value The lsig to set.
       * @return This builder for chaining.
       */
      public Builder setLsig(double value) {
        
        lsig_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double lsig = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLsig() {
        
        lsig_ = 0D;
        onChanged();
        return this;
      }

      private double usig_ ;
      /**
       * <code>double usig = 6;</code>
       * @return The usig.
       */
      @java.lang.Override
      public double getUsig() {
        return usig_;
      }
      /**
       * <code>double usig = 6;</code>
       * @param value The usig to set.
       * @return This builder for chaining.
       */
      public Builder setUsig(double value) {
        
        usig_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double usig = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearUsig() {
        
        usig_ = 0D;
        onChanged();
        return this;
      }

      private int nfcasts_ ;
      /**
       * <code>int32 nfcasts = 7;</code>
       * @return The nfcasts.
       */
      @java.lang.Override
      public int getNfcasts() {
        return nfcasts_;
      }
      /**
       * <code>int32 nfcasts = 7;</code>
       * @param value The nfcasts to set.
       * @return This builder for chaining.
       */
      public Builder setNfcasts(int value) {
        
        nfcasts_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 nfcasts = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearNfcasts() {
        
        nfcasts_ = 0;
        onChanged();
        return this;
      }

      private int nbcasts_ ;
      /**
       * <code>int32 nbcasts = 8;</code>
       * @return The nbcasts.
       */
      @java.lang.Override
      public int getNbcasts() {
        return nbcasts_;
      }
      /**
       * <code>int32 nbcasts = 8;</code>
       * @param value The nbcasts to set.
       * @return This builder for chaining.
       */
      public Builder setNbcasts(int value) {
        
        nbcasts_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 nbcasts = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearNbcasts() {
        
        nbcasts_ = 0;
        onChanged();
        return this;
      }

      private int sigma_ = 0;
      /**
       * <code>.jd3.X11Spec.CalendarSigma sigma = 9;</code>
       * @return The enum numeric value on the wire for sigma.
       */
      @java.lang.Override public int getSigmaValue() {
        return sigma_;
      }
      /**
       * <code>.jd3.X11Spec.CalendarSigma sigma = 9;</code>
       * @param value The enum numeric value on the wire for sigma to set.
       * @return This builder for chaining.
       */
      public Builder setSigmaValue(int value) {
        
        sigma_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.jd3.X11Spec.CalendarSigma sigma = 9;</code>
       * @return The sigma.
       */
      @java.lang.Override
      public demetra.x13.io.protobuf.X13Protos.X11Spec.CalendarSigma getSigma() {
        @SuppressWarnings("deprecation")
        demetra.x13.io.protobuf.X13Protos.X11Spec.CalendarSigma result = demetra.x13.io.protobuf.X13Protos.X11Spec.CalendarSigma.valueOf(sigma_);
        return result == null ? demetra.x13.io.protobuf.X13Protos.X11Spec.CalendarSigma.UNRECOGNIZED : result;
      }
      /**
       * <code>.jd3.X11Spec.CalendarSigma sigma = 9;</code>
       * @param value The sigma to set.
       * @return This builder for chaining.
       */
      public Builder setSigma(demetra.x13.io.protobuf.X13Protos.X11Spec.CalendarSigma value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        sigma_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.jd3.X11Spec.CalendarSigma sigma = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSigma() {
        
        sigma_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList vsigma_ = emptyIntList();
      private void ensureVsigmaIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          vsigma_ = mutableCopy(vsigma_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 vsigma = 10;</code>
       * @return A list containing the vsigma.
       */
      public java.util.List<java.lang.Integer>
          getVsigmaList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(vsigma_) : vsigma_;
      }
      /**
       * <code>repeated int32 vsigma = 10;</code>
       * @return The count of vsigma.
       */
      public int getVsigmaCount() {
        return vsigma_.size();
      }
      /**
       * <code>repeated int32 vsigma = 10;</code>
       * @param index The index of the element to return.
       * @return The vsigma at the given index.
       */
      public int getVsigma(int index) {
        return vsigma_.getInt(index);
      }
      /**
       * <code>repeated int32 vsigma = 10;</code>
       * @param index The index to set the value at.
       * @param value The vsigma to set.
       * @return This builder for chaining.
       */
      public Builder setVsigma(
          int index, int value) {
        ensureVsigmaIsMutable();
        vsigma_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 vsigma = 10;</code>
       * @param value The vsigma to add.
       * @return This builder for chaining.
       */
      public Builder addVsigma(int value) {
        ensureVsigmaIsMutable();
        vsigma_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 vsigma = 10;</code>
       * @param values The vsigma to add.
       * @return This builder for chaining.
       */
      public Builder addAllVsigma(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureVsigmaIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, vsigma_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 vsigma = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearVsigma() {
        vsigma_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private boolean excudefcasts_ ;
      /**
       * <code>bool excudefcasts = 11;</code>
       * @return The excudefcasts.
       */
      @java.lang.Override
      public boolean getExcudefcasts() {
        return excudefcasts_;
      }
      /**
       * <code>bool excudefcasts = 11;</code>
       * @param value The excudefcasts to set.
       * @return This builder for chaining.
       */
      public Builder setExcudefcasts(boolean value) {
        
        excudefcasts_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool excudefcasts = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearExcudefcasts() {
        
        excudefcasts_ = false;
        onChanged();
        return this;
      }

      private int bias_ = 0;
      /**
       * <code>.jd3.X11Spec.BiasCorrection bias = 12;</code>
       * @return The enum numeric value on the wire for bias.
       */
      @java.lang.Override public int getBiasValue() {
        return bias_;
      }
      /**
       * <code>.jd3.X11Spec.BiasCorrection bias = 12;</code>
       * @param value The enum numeric value on the wire for bias to set.
       * @return This builder for chaining.
       */
      public Builder setBiasValue(int value) {
        
        bias_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.jd3.X11Spec.BiasCorrection bias = 12;</code>
       * @return The bias.
       */
      @java.lang.Override
      public demetra.x13.io.protobuf.X13Protos.X11Spec.BiasCorrection getBias() {
        @SuppressWarnings("deprecation")
        demetra.x13.io.protobuf.X13Protos.X11Spec.BiasCorrection result = demetra.x13.io.protobuf.X13Protos.X11Spec.BiasCorrection.valueOf(bias_);
        return result == null ? demetra.x13.io.protobuf.X13Protos.X11Spec.BiasCorrection.UNRECOGNIZED : result;
      }
      /**
       * <code>.jd3.X11Spec.BiasCorrection bias = 12;</code>
       * @param value The bias to set.
       * @return This builder for chaining.
       */
      public Builder setBias(demetra.x13.io.protobuf.X13Protos.X11Spec.BiasCorrection value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        bias_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.jd3.X11Spec.BiasCorrection bias = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearBias() {
        
        bias_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:jd3.X11Spec)
    }

    // @@protoc_insertion_point(class_scope:jd3.X11Spec)
    private static final demetra.x13.io.protobuf.X13Protos.X11Spec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new demetra.x13.io.protobuf.X13Protos.X11Spec();
    }

    public static demetra.x13.io.protobuf.X13Protos.X11Spec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<X11Spec>
        PARSER = new com.google.protobuf.AbstractParser<X11Spec>() {
      @java.lang.Override
      public X11Spec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new X11Spec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<X11Spec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<X11Spec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public demetra.x13.io.protobuf.X13Protos.X11Spec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface X13SpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:jd3.X13Spec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.jd3.X13Spec.AutoModelSpec automodel = 2;</code>
     * @return Whether the automodel field is set.
     */
    boolean hasAutomodel();
    /**
     * <code>.jd3.X13Spec.AutoModelSpec automodel = 2;</code>
     * @return The automodel.
     */
    demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec getAutomodel();
    /**
     * <code>.jd3.X13Spec.AutoModelSpec automodel = 2;</code>
     */
    demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpecOrBuilder getAutomodelOrBuilder();

    /**
     * <code>.jd3.X11Spec x11 = 6;</code>
     * @return Whether the x11 field is set.
     */
    boolean hasX11();
    /**
     * <code>.jd3.X11Spec x11 = 6;</code>
     * @return The x11.
     */
    demetra.x13.io.protobuf.X13Protos.X11Spec getX11();
    /**
     * <code>.jd3.X11Spec x11 = 6;</code>
     */
    demetra.x13.io.protobuf.X13Protos.X11SpecOrBuilder getX11OrBuilder();
  }
  /**
   * Protobuf type {@code jd3.X13Spec}
   */
  public static final class X13Spec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:jd3.X13Spec)
      X13SpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use X13Spec.newBuilder() to construct.
    private X13Spec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private X13Spec() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new X13Spec();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private X13Spec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.Builder subBuilder = null;
              if (automodel_ != null) {
                subBuilder = automodel_.toBuilder();
              }
              automodel_ = input.readMessage(demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(automodel_);
                automodel_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              demetra.x13.io.protobuf.X13Protos.X11Spec.Builder subBuilder = null;
              if (x11_ != null) {
                subBuilder = x11_.toBuilder();
              }
              x11_ = input.readMessage(demetra.x13.io.protobuf.X13Protos.X11Spec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(x11_);
                x11_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X13Spec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X13Spec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              demetra.x13.io.protobuf.X13Protos.X13Spec.class, demetra.x13.io.protobuf.X13Protos.X13Spec.Builder.class);
    }

    public interface BasicSpecOrBuilder extends
        // @@protoc_insertion_point(interface_extends:jd3.X13Spec.BasicSpec)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.jd3.TimeSelector span = 1;</code>
       * @return Whether the span field is set.
       */
      boolean hasSpan();
      /**
       * <code>.jd3.TimeSelector span = 1;</code>
       * @return The span.
       */
      demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector getSpan();
      /**
       * <code>.jd3.TimeSelector span = 1;</code>
       */
      demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelectorOrBuilder getSpanOrBuilder();

      /**
       * <code>bool preprocessing = 2;</code>
       * @return The preprocessing.
       */
      boolean getPreprocessing();

      /**
       * <code>bool preliminary_check = 3;</code>
       * @return The preliminaryCheck.
       */
      boolean getPreliminaryCheck();
    }
    /**
     * Protobuf type {@code jd3.X13Spec.BasicSpec}
     */
    public static final class BasicSpec extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:jd3.X13Spec.BasicSpec)
        BasicSpecOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use BasicSpec.newBuilder() to construct.
      private BasicSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private BasicSpec() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new BasicSpec();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private BasicSpec(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector.Builder subBuilder = null;
                if (span_ != null) {
                  subBuilder = span_.toBuilder();
                }
                span_ = input.readMessage(demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(span_);
                  span_ = subBuilder.buildPartial();
                }

                break;
              }
              case 16: {

                preprocessing_ = input.readBool();
                break;
              }
              case 24: {

                preliminaryCheck_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X13Spec_BasicSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X13Spec_BasicSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec.class, demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec.Builder.class);
      }

      public static final int SPAN_FIELD_NUMBER = 1;
      private demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector span_;
      /**
       * <code>.jd3.TimeSelector span = 1;</code>
       * @return Whether the span field is set.
       */
      @java.lang.Override
      public boolean hasSpan() {
        return span_ != null;
      }
      /**
       * <code>.jd3.TimeSelector span = 1;</code>
       * @return The span.
       */
      @java.lang.Override
      public demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector getSpan() {
        return span_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector.getDefaultInstance() : span_;
      }
      /**
       * <code>.jd3.TimeSelector span = 1;</code>
       */
      @java.lang.Override
      public demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelectorOrBuilder getSpanOrBuilder() {
        return getSpan();
      }

      public static final int PREPROCESSING_FIELD_NUMBER = 2;
      private boolean preprocessing_;
      /**
       * <code>bool preprocessing = 2;</code>
       * @return The preprocessing.
       */
      @java.lang.Override
      public boolean getPreprocessing() {
        return preprocessing_;
      }

      public static final int PRELIMINARY_CHECK_FIELD_NUMBER = 3;
      private boolean preliminaryCheck_;
      /**
       * <code>bool preliminary_check = 3;</code>
       * @return The preliminaryCheck.
       */
      @java.lang.Override
      public boolean getPreliminaryCheck() {
        return preliminaryCheck_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (span_ != null) {
          output.writeMessage(1, getSpan());
        }
        if (preprocessing_ != false) {
          output.writeBool(2, preprocessing_);
        }
        if (preliminaryCheck_ != false) {
          output.writeBool(3, preliminaryCheck_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (span_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getSpan());
        }
        if (preprocessing_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, preprocessing_);
        }
        if (preliminaryCheck_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, preliminaryCheck_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec)) {
          return super.equals(obj);
        }
        demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec other = (demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec) obj;

        if (hasSpan() != other.hasSpan()) return false;
        if (hasSpan()) {
          if (!getSpan()
              .equals(other.getSpan())) return false;
        }
        if (getPreprocessing()
            != other.getPreprocessing()) return false;
        if (getPreliminaryCheck()
            != other.getPreliminaryCheck()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSpan()) {
          hash = (37 * hash) + SPAN_FIELD_NUMBER;
          hash = (53 * hash) + getSpan().hashCode();
        }
        hash = (37 * hash) + PREPROCESSING_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getPreprocessing());
        hash = (37 * hash) + PRELIMINARY_CHECK_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getPreliminaryCheck());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code jd3.X13Spec.BasicSpec}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:jd3.X13Spec.BasicSpec)
          demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpecOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X13Spec_BasicSpec_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X13Spec_BasicSpec_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec.class, demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec.Builder.class);
        }

        // Construct using demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (spanBuilder_ == null) {
            span_ = null;
          } else {
            span_ = null;
            spanBuilder_ = null;
          }
          preprocessing_ = false;

          preliminaryCheck_ = false;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X13Spec_BasicSpec_descriptor;
        }

        @java.lang.Override
        public demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec getDefaultInstanceForType() {
          return demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec.getDefaultInstance();
        }

        @java.lang.Override
        public demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec build() {
          demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec buildPartial() {
          demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec result = new demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec(this);
          if (spanBuilder_ == null) {
            result.span_ = span_;
          } else {
            result.span_ = spanBuilder_.build();
          }
          result.preprocessing_ = preprocessing_;
          result.preliminaryCheck_ = preliminaryCheck_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec) {
            return mergeFrom((demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec other) {
          if (other == demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec.getDefaultInstance()) return this;
          if (other.hasSpan()) {
            mergeSpan(other.getSpan());
          }
          if (other.getPreprocessing() != false) {
            setPreprocessing(other.getPreprocessing());
          }
          if (other.getPreliminaryCheck() != false) {
            setPreliminaryCheck(other.getPreliminaryCheck());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector span_;
        private com.google.protobuf.SingleFieldBuilderV3<
            demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector, demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelectorOrBuilder> spanBuilder_;
        /**
         * <code>.jd3.TimeSelector span = 1;</code>
         * @return Whether the span field is set.
         */
        public boolean hasSpan() {
          return spanBuilder_ != null || span_ != null;
        }
        /**
         * <code>.jd3.TimeSelector span = 1;</code>
         * @return The span.
         */
        public demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector getSpan() {
          if (spanBuilder_ == null) {
            return span_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector.getDefaultInstance() : span_;
          } else {
            return spanBuilder_.getMessage();
          }
        }
        /**
         * <code>.jd3.TimeSelector span = 1;</code>
         */
        public Builder setSpan(demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector value) {
          if (spanBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            span_ = value;
            onChanged();
          } else {
            spanBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.jd3.TimeSelector span = 1;</code>
         */
        public Builder setSpan(
            demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector.Builder builderForValue) {
          if (spanBuilder_ == null) {
            span_ = builderForValue.build();
            onChanged();
          } else {
            spanBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.jd3.TimeSelector span = 1;</code>
         */
        public Builder mergeSpan(demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector value) {
          if (spanBuilder_ == null) {
            if (span_ != null) {
              span_ =
                demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector.newBuilder(span_).mergeFrom(value).buildPartial();
            } else {
              span_ = value;
            }
            onChanged();
          } else {
            spanBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.jd3.TimeSelector span = 1;</code>
         */
        public Builder clearSpan() {
          if (spanBuilder_ == null) {
            span_ = null;
            onChanged();
          } else {
            span_ = null;
            spanBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.jd3.TimeSelector span = 1;</code>
         */
        public demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector.Builder getSpanBuilder() {
          
          onChanged();
          return getSpanFieldBuilder().getBuilder();
        }
        /**
         * <code>.jd3.TimeSelector span = 1;</code>
         */
        public demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelectorOrBuilder getSpanOrBuilder() {
          if (spanBuilder_ != null) {
            return spanBuilder_.getMessageOrBuilder();
          } else {
            return span_ == null ?
                demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector.getDefaultInstance() : span_;
          }
        }
        /**
         * <code>.jd3.TimeSelector span = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector, demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelectorOrBuilder> 
            getSpanFieldBuilder() {
          if (spanBuilder_ == null) {
            spanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector, demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelector.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.TimeSelectorOrBuilder>(
                    getSpan(),
                    getParentForChildren(),
                    isClean());
            span_ = null;
          }
          return spanBuilder_;
        }

        private boolean preprocessing_ ;
        /**
         * <code>bool preprocessing = 2;</code>
         * @return The preprocessing.
         */
        @java.lang.Override
        public boolean getPreprocessing() {
          return preprocessing_;
        }
        /**
         * <code>bool preprocessing = 2;</code>
         * @param value The preprocessing to set.
         * @return This builder for chaining.
         */
        public Builder setPreprocessing(boolean value) {
          
          preprocessing_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool preprocessing = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearPreprocessing() {
          
          preprocessing_ = false;
          onChanged();
          return this;
        }

        private boolean preliminaryCheck_ ;
        /**
         * <code>bool preliminary_check = 3;</code>
         * @return The preliminaryCheck.
         */
        @java.lang.Override
        public boolean getPreliminaryCheck() {
          return preliminaryCheck_;
        }
        /**
         * <code>bool preliminary_check = 3;</code>
         * @param value The preliminaryCheck to set.
         * @return This builder for chaining.
         */
        public Builder setPreliminaryCheck(boolean value) {
          
          preliminaryCheck_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool preliminary_check = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearPreliminaryCheck() {
          
          preliminaryCheck_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:jd3.X13Spec.BasicSpec)
      }

      // @@protoc_insertion_point(class_scope:jd3.X13Spec.BasicSpec)
      private static final demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec();
      }

      public static demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<BasicSpec>
          PARSER = new com.google.protobuf.AbstractParser<BasicSpec>() {
        @java.lang.Override
        public BasicSpec parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BasicSpec(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<BasicSpec> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<BasicSpec> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public demetra.x13.io.protobuf.X13Protos.X13Spec.BasicSpec getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AutoModelSpecOrBuilder extends
        // @@protoc_insertion_point(interface_extends:jd3.X13Spec.AutoModelSpec)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool enavled = 1;</code>
       * @return The enavled.
       */
      boolean getEnavled();

      /**
       * <code>double ljungbox = 2;</code>
       * @return The ljungbox.
       */
      double getLjungbox();

      /**
       * <code>double tsig = 3;</code>
       * @return The tsig.
       */
      double getTsig();

      /**
       * <code>double predcv = 4;</code>
       * @return The predcv.
       */
      double getPredcv();

      /**
       * <code>double ubfinal = 5;</code>
       * @return The ubfinal.
       */
      double getUbfinal();

      /**
       * <code>double ub1 = 6;</code>
       * @return The ub1.
       */
      double getUb1();

      /**
       * <code>double ub2 = 7;</code>
       * @return The ub2.
       */
      double getUb2();

      /**
       * <code>double cancel = 8;</code>
       * @return The cancel.
       */
      double getCancel();

      /**
       * <code>double fct = 9;</code>
       * @return The fct.
       */
      double getFct();

      /**
       * <code>bool acceptdef = 10;</code>
       * @return The acceptdef.
       */
      boolean getAcceptdef();

      /**
       * <code>bool checkmu = 11;</code>
       * @return The checkmu.
       */
      boolean getCheckmu();

      /**
       * <code>bool mixed = 12;</code>
       * @return The mixed.
       */
      boolean getMixed();

      /**
       * <code>bool balanced = 13;</code>
       * @return The balanced.
       */
      boolean getBalanced();
    }
    /**
     * Protobuf type {@code jd3.X13Spec.AutoModelSpec}
     */
    public static final class AutoModelSpec extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:jd3.X13Spec.AutoModelSpec)
        AutoModelSpecOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AutoModelSpec.newBuilder() to construct.
      private AutoModelSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AutoModelSpec() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AutoModelSpec();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AutoModelSpec(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                enavled_ = input.readBool();
                break;
              }
              case 17: {

                ljungbox_ = input.readDouble();
                break;
              }
              case 25: {

                tsig_ = input.readDouble();
                break;
              }
              case 33: {

                predcv_ = input.readDouble();
                break;
              }
              case 41: {

                ubfinal_ = input.readDouble();
                break;
              }
              case 49: {

                ub1_ = input.readDouble();
                break;
              }
              case 57: {

                ub2_ = input.readDouble();
                break;
              }
              case 65: {

                cancel_ = input.readDouble();
                break;
              }
              case 73: {

                fct_ = input.readDouble();
                break;
              }
              case 80: {

                acceptdef_ = input.readBool();
                break;
              }
              case 88: {

                checkmu_ = input.readBool();
                break;
              }
              case 96: {

                mixed_ = input.readBool();
                break;
              }
              case 104: {

                balanced_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X13Spec_AutoModelSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X13Spec_AutoModelSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.class, demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.Builder.class);
      }

      public static final int ENAVLED_FIELD_NUMBER = 1;
      private boolean enavled_;
      /**
       * <code>bool enavled = 1;</code>
       * @return The enavled.
       */
      @java.lang.Override
      public boolean getEnavled() {
        return enavled_;
      }

      public static final int LJUNGBOX_FIELD_NUMBER = 2;
      private double ljungbox_;
      /**
       * <code>double ljungbox = 2;</code>
       * @return The ljungbox.
       */
      @java.lang.Override
      public double getLjungbox() {
        return ljungbox_;
      }

      public static final int TSIG_FIELD_NUMBER = 3;
      private double tsig_;
      /**
       * <code>double tsig = 3;</code>
       * @return The tsig.
       */
      @java.lang.Override
      public double getTsig() {
        return tsig_;
      }

      public static final int PREDCV_FIELD_NUMBER = 4;
      private double predcv_;
      /**
       * <code>double predcv = 4;</code>
       * @return The predcv.
       */
      @java.lang.Override
      public double getPredcv() {
        return predcv_;
      }

      public static final int UBFINAL_FIELD_NUMBER = 5;
      private double ubfinal_;
      /**
       * <code>double ubfinal = 5;</code>
       * @return The ubfinal.
       */
      @java.lang.Override
      public double getUbfinal() {
        return ubfinal_;
      }

      public static final int UB1_FIELD_NUMBER = 6;
      private double ub1_;
      /**
       * <code>double ub1 = 6;</code>
       * @return The ub1.
       */
      @java.lang.Override
      public double getUb1() {
        return ub1_;
      }

      public static final int UB2_FIELD_NUMBER = 7;
      private double ub2_;
      /**
       * <code>double ub2 = 7;</code>
       * @return The ub2.
       */
      @java.lang.Override
      public double getUb2() {
        return ub2_;
      }

      public static final int CANCEL_FIELD_NUMBER = 8;
      private double cancel_;
      /**
       * <code>double cancel = 8;</code>
       * @return The cancel.
       */
      @java.lang.Override
      public double getCancel() {
        return cancel_;
      }

      public static final int FCT_FIELD_NUMBER = 9;
      private double fct_;
      /**
       * <code>double fct = 9;</code>
       * @return The fct.
       */
      @java.lang.Override
      public double getFct() {
        return fct_;
      }

      public static final int ACCEPTDEF_FIELD_NUMBER = 10;
      private boolean acceptdef_;
      /**
       * <code>bool acceptdef = 10;</code>
       * @return The acceptdef.
       */
      @java.lang.Override
      public boolean getAcceptdef() {
        return acceptdef_;
      }

      public static final int CHECKMU_FIELD_NUMBER = 11;
      private boolean checkmu_;
      /**
       * <code>bool checkmu = 11;</code>
       * @return The checkmu.
       */
      @java.lang.Override
      public boolean getCheckmu() {
        return checkmu_;
      }

      public static final int MIXED_FIELD_NUMBER = 12;
      private boolean mixed_;
      /**
       * <code>bool mixed = 12;</code>
       * @return The mixed.
       */
      @java.lang.Override
      public boolean getMixed() {
        return mixed_;
      }

      public static final int BALANCED_FIELD_NUMBER = 13;
      private boolean balanced_;
      /**
       * <code>bool balanced = 13;</code>
       * @return The balanced.
       */
      @java.lang.Override
      public boolean getBalanced() {
        return balanced_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (enavled_ != false) {
          output.writeBool(1, enavled_);
        }
        if (ljungbox_ != 0D) {
          output.writeDouble(2, ljungbox_);
        }
        if (tsig_ != 0D) {
          output.writeDouble(3, tsig_);
        }
        if (predcv_ != 0D) {
          output.writeDouble(4, predcv_);
        }
        if (ubfinal_ != 0D) {
          output.writeDouble(5, ubfinal_);
        }
        if (ub1_ != 0D) {
          output.writeDouble(6, ub1_);
        }
        if (ub2_ != 0D) {
          output.writeDouble(7, ub2_);
        }
        if (cancel_ != 0D) {
          output.writeDouble(8, cancel_);
        }
        if (fct_ != 0D) {
          output.writeDouble(9, fct_);
        }
        if (acceptdef_ != false) {
          output.writeBool(10, acceptdef_);
        }
        if (checkmu_ != false) {
          output.writeBool(11, checkmu_);
        }
        if (mixed_ != false) {
          output.writeBool(12, mixed_);
        }
        if (balanced_ != false) {
          output.writeBool(13, balanced_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (enavled_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, enavled_);
        }
        if (ljungbox_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, ljungbox_);
        }
        if (tsig_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, tsig_);
        }
        if (predcv_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, predcv_);
        }
        if (ubfinal_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(5, ubfinal_);
        }
        if (ub1_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(6, ub1_);
        }
        if (ub2_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(7, ub2_);
        }
        if (cancel_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(8, cancel_);
        }
        if (fct_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(9, fct_);
        }
        if (acceptdef_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(10, acceptdef_);
        }
        if (checkmu_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(11, checkmu_);
        }
        if (mixed_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(12, mixed_);
        }
        if (balanced_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(13, balanced_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec)) {
          return super.equals(obj);
        }
        demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec other = (demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec) obj;

        if (getEnavled()
            != other.getEnavled()) return false;
        if (java.lang.Double.doubleToLongBits(getLjungbox())
            != java.lang.Double.doubleToLongBits(
                other.getLjungbox())) return false;
        if (java.lang.Double.doubleToLongBits(getTsig())
            != java.lang.Double.doubleToLongBits(
                other.getTsig())) return false;
        if (java.lang.Double.doubleToLongBits(getPredcv())
            != java.lang.Double.doubleToLongBits(
                other.getPredcv())) return false;
        if (java.lang.Double.doubleToLongBits(getUbfinal())
            != java.lang.Double.doubleToLongBits(
                other.getUbfinal())) return false;
        if (java.lang.Double.doubleToLongBits(getUb1())
            != java.lang.Double.doubleToLongBits(
                other.getUb1())) return false;
        if (java.lang.Double.doubleToLongBits(getUb2())
            != java.lang.Double.doubleToLongBits(
                other.getUb2())) return false;
        if (java.lang.Double.doubleToLongBits(getCancel())
            != java.lang.Double.doubleToLongBits(
                other.getCancel())) return false;
        if (java.lang.Double.doubleToLongBits(getFct())
            != java.lang.Double.doubleToLongBits(
                other.getFct())) return false;
        if (getAcceptdef()
            != other.getAcceptdef()) return false;
        if (getCheckmu()
            != other.getCheckmu()) return false;
        if (getMixed()
            != other.getMixed()) return false;
        if (getBalanced()
            != other.getBalanced()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ENAVLED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getEnavled());
        hash = (37 * hash) + LJUNGBOX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLjungbox()));
        hash = (37 * hash) + TSIG_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTsig()));
        hash = (37 * hash) + PREDCV_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPredcv()));
        hash = (37 * hash) + UBFINAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getUbfinal()));
        hash = (37 * hash) + UB1_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getUb1()));
        hash = (37 * hash) + UB2_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getUb2()));
        hash = (37 * hash) + CANCEL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCancel()));
        hash = (37 * hash) + FCT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFct()));
        hash = (37 * hash) + ACCEPTDEF_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAcceptdef());
        hash = (37 * hash) + CHECKMU_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getCheckmu());
        hash = (37 * hash) + MIXED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getMixed());
        hash = (37 * hash) + BALANCED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getBalanced());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code jd3.X13Spec.AutoModelSpec}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:jd3.X13Spec.AutoModelSpec)
          demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpecOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X13Spec_AutoModelSpec_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X13Spec_AutoModelSpec_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.class, demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.Builder.class);
        }

        // Construct using demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          enavled_ = false;

          ljungbox_ = 0D;

          tsig_ = 0D;

          predcv_ = 0D;

          ubfinal_ = 0D;

          ub1_ = 0D;

          ub2_ = 0D;

          cancel_ = 0D;

          fct_ = 0D;

          acceptdef_ = false;

          checkmu_ = false;

          mixed_ = false;

          balanced_ = false;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X13Spec_AutoModelSpec_descriptor;
        }

        @java.lang.Override
        public demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec getDefaultInstanceForType() {
          return demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.getDefaultInstance();
        }

        @java.lang.Override
        public demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec build() {
          demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec buildPartial() {
          demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec result = new demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec(this);
          result.enavled_ = enavled_;
          result.ljungbox_ = ljungbox_;
          result.tsig_ = tsig_;
          result.predcv_ = predcv_;
          result.ubfinal_ = ubfinal_;
          result.ub1_ = ub1_;
          result.ub2_ = ub2_;
          result.cancel_ = cancel_;
          result.fct_ = fct_;
          result.acceptdef_ = acceptdef_;
          result.checkmu_ = checkmu_;
          result.mixed_ = mixed_;
          result.balanced_ = balanced_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec) {
            return mergeFrom((demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec other) {
          if (other == demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.getDefaultInstance()) return this;
          if (other.getEnavled() != false) {
            setEnavled(other.getEnavled());
          }
          if (other.getLjungbox() != 0D) {
            setLjungbox(other.getLjungbox());
          }
          if (other.getTsig() != 0D) {
            setTsig(other.getTsig());
          }
          if (other.getPredcv() != 0D) {
            setPredcv(other.getPredcv());
          }
          if (other.getUbfinal() != 0D) {
            setUbfinal(other.getUbfinal());
          }
          if (other.getUb1() != 0D) {
            setUb1(other.getUb1());
          }
          if (other.getUb2() != 0D) {
            setUb2(other.getUb2());
          }
          if (other.getCancel() != 0D) {
            setCancel(other.getCancel());
          }
          if (other.getFct() != 0D) {
            setFct(other.getFct());
          }
          if (other.getAcceptdef() != false) {
            setAcceptdef(other.getAcceptdef());
          }
          if (other.getCheckmu() != false) {
            setCheckmu(other.getCheckmu());
          }
          if (other.getMixed() != false) {
            setMixed(other.getMixed());
          }
          if (other.getBalanced() != false) {
            setBalanced(other.getBalanced());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean enavled_ ;
        /**
         * <code>bool enavled = 1;</code>
         * @return The enavled.
         */
        @java.lang.Override
        public boolean getEnavled() {
          return enavled_;
        }
        /**
         * <code>bool enavled = 1;</code>
         * @param value The enavled to set.
         * @return This builder for chaining.
         */
        public Builder setEnavled(boolean value) {
          
          enavled_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool enavled = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearEnavled() {
          
          enavled_ = false;
          onChanged();
          return this;
        }

        private double ljungbox_ ;
        /**
         * <code>double ljungbox = 2;</code>
         * @return The ljungbox.
         */
        @java.lang.Override
        public double getLjungbox() {
          return ljungbox_;
        }
        /**
         * <code>double ljungbox = 2;</code>
         * @param value The ljungbox to set.
         * @return This builder for chaining.
         */
        public Builder setLjungbox(double value) {
          
          ljungbox_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double ljungbox = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearLjungbox() {
          
          ljungbox_ = 0D;
          onChanged();
          return this;
        }

        private double tsig_ ;
        /**
         * <code>double tsig = 3;</code>
         * @return The tsig.
         */
        @java.lang.Override
        public double getTsig() {
          return tsig_;
        }
        /**
         * <code>double tsig = 3;</code>
         * @param value The tsig to set.
         * @return This builder for chaining.
         */
        public Builder setTsig(double value) {
          
          tsig_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double tsig = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearTsig() {
          
          tsig_ = 0D;
          onChanged();
          return this;
        }

        private double predcv_ ;
        /**
         * <code>double predcv = 4;</code>
         * @return The predcv.
         */
        @java.lang.Override
        public double getPredcv() {
          return predcv_;
        }
        /**
         * <code>double predcv = 4;</code>
         * @param value The predcv to set.
         * @return This builder for chaining.
         */
        public Builder setPredcv(double value) {
          
          predcv_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double predcv = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearPredcv() {
          
          predcv_ = 0D;
          onChanged();
          return this;
        }

        private double ubfinal_ ;
        /**
         * <code>double ubfinal = 5;</code>
         * @return The ubfinal.
         */
        @java.lang.Override
        public double getUbfinal() {
          return ubfinal_;
        }
        /**
         * <code>double ubfinal = 5;</code>
         * @param value The ubfinal to set.
         * @return This builder for chaining.
         */
        public Builder setUbfinal(double value) {
          
          ubfinal_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double ubfinal = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearUbfinal() {
          
          ubfinal_ = 0D;
          onChanged();
          return this;
        }

        private double ub1_ ;
        /**
         * <code>double ub1 = 6;</code>
         * @return The ub1.
         */
        @java.lang.Override
        public double getUb1() {
          return ub1_;
        }
        /**
         * <code>double ub1 = 6;</code>
         * @param value The ub1 to set.
         * @return This builder for chaining.
         */
        public Builder setUb1(double value) {
          
          ub1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double ub1 = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearUb1() {
          
          ub1_ = 0D;
          onChanged();
          return this;
        }

        private double ub2_ ;
        /**
         * <code>double ub2 = 7;</code>
         * @return The ub2.
         */
        @java.lang.Override
        public double getUb2() {
          return ub2_;
        }
        /**
         * <code>double ub2 = 7;</code>
         * @param value The ub2 to set.
         * @return This builder for chaining.
         */
        public Builder setUb2(double value) {
          
          ub2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double ub2 = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearUb2() {
          
          ub2_ = 0D;
          onChanged();
          return this;
        }

        private double cancel_ ;
        /**
         * <code>double cancel = 8;</code>
         * @return The cancel.
         */
        @java.lang.Override
        public double getCancel() {
          return cancel_;
        }
        /**
         * <code>double cancel = 8;</code>
         * @param value The cancel to set.
         * @return This builder for chaining.
         */
        public Builder setCancel(double value) {
          
          cancel_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double cancel = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearCancel() {
          
          cancel_ = 0D;
          onChanged();
          return this;
        }

        private double fct_ ;
        /**
         * <code>double fct = 9;</code>
         * @return The fct.
         */
        @java.lang.Override
        public double getFct() {
          return fct_;
        }
        /**
         * <code>double fct = 9;</code>
         * @param value The fct to set.
         * @return This builder for chaining.
         */
        public Builder setFct(double value) {
          
          fct_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double fct = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearFct() {
          
          fct_ = 0D;
          onChanged();
          return this;
        }

        private boolean acceptdef_ ;
        /**
         * <code>bool acceptdef = 10;</code>
         * @return The acceptdef.
         */
        @java.lang.Override
        public boolean getAcceptdef() {
          return acceptdef_;
        }
        /**
         * <code>bool acceptdef = 10;</code>
         * @param value The acceptdef to set.
         * @return This builder for chaining.
         */
        public Builder setAcceptdef(boolean value) {
          
          acceptdef_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool acceptdef = 10;</code>
         * @return This builder for chaining.
         */
        public Builder clearAcceptdef() {
          
          acceptdef_ = false;
          onChanged();
          return this;
        }

        private boolean checkmu_ ;
        /**
         * <code>bool checkmu = 11;</code>
         * @return The checkmu.
         */
        @java.lang.Override
        public boolean getCheckmu() {
          return checkmu_;
        }
        /**
         * <code>bool checkmu = 11;</code>
         * @param value The checkmu to set.
         * @return This builder for chaining.
         */
        public Builder setCheckmu(boolean value) {
          
          checkmu_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool checkmu = 11;</code>
         * @return This builder for chaining.
         */
        public Builder clearCheckmu() {
          
          checkmu_ = false;
          onChanged();
          return this;
        }

        private boolean mixed_ ;
        /**
         * <code>bool mixed = 12;</code>
         * @return The mixed.
         */
        @java.lang.Override
        public boolean getMixed() {
          return mixed_;
        }
        /**
         * <code>bool mixed = 12;</code>
         * @param value The mixed to set.
         * @return This builder for chaining.
         */
        public Builder setMixed(boolean value) {
          
          mixed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool mixed = 12;</code>
         * @return This builder for chaining.
         */
        public Builder clearMixed() {
          
          mixed_ = false;
          onChanged();
          return this;
        }

        private boolean balanced_ ;
        /**
         * <code>bool balanced = 13;</code>
         * @return The balanced.
         */
        @java.lang.Override
        public boolean getBalanced() {
          return balanced_;
        }
        /**
         * <code>bool balanced = 13;</code>
         * @param value The balanced to set.
         * @return This builder for chaining.
         */
        public Builder setBalanced(boolean value) {
          
          balanced_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool balanced = 13;</code>
         * @return This builder for chaining.
         */
        public Builder clearBalanced() {
          
          balanced_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:jd3.X13Spec.AutoModelSpec)
      }

      // @@protoc_insertion_point(class_scope:jd3.X13Spec.AutoModelSpec)
      private static final demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec();
      }

      public static demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AutoModelSpec>
          PARSER = new com.google.protobuf.AbstractParser<AutoModelSpec>() {
        @java.lang.Override
        public AutoModelSpec parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AutoModelSpec(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AutoModelSpec> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AutoModelSpec> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int AUTOMODEL_FIELD_NUMBER = 2;
    private demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec automodel_;
    /**
     * <code>.jd3.X13Spec.AutoModelSpec automodel = 2;</code>
     * @return Whether the automodel field is set.
     */
    @java.lang.Override
    public boolean hasAutomodel() {
      return automodel_ != null;
    }
    /**
     * <code>.jd3.X13Spec.AutoModelSpec automodel = 2;</code>
     * @return The automodel.
     */
    @java.lang.Override
    public demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec getAutomodel() {
      return automodel_ == null ? demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.getDefaultInstance() : automodel_;
    }
    /**
     * <code>.jd3.X13Spec.AutoModelSpec automodel = 2;</code>
     */
    @java.lang.Override
    public demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpecOrBuilder getAutomodelOrBuilder() {
      return getAutomodel();
    }

    public static final int X11_FIELD_NUMBER = 6;
    private demetra.x13.io.protobuf.X13Protos.X11Spec x11_;
    /**
     * <code>.jd3.X11Spec x11 = 6;</code>
     * @return Whether the x11 field is set.
     */
    @java.lang.Override
    public boolean hasX11() {
      return x11_ != null;
    }
    /**
     * <code>.jd3.X11Spec x11 = 6;</code>
     * @return The x11.
     */
    @java.lang.Override
    public demetra.x13.io.protobuf.X13Protos.X11Spec getX11() {
      return x11_ == null ? demetra.x13.io.protobuf.X13Protos.X11Spec.getDefaultInstance() : x11_;
    }
    /**
     * <code>.jd3.X11Spec x11 = 6;</code>
     */
    @java.lang.Override
    public demetra.x13.io.protobuf.X13Protos.X11SpecOrBuilder getX11OrBuilder() {
      return getX11();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (automodel_ != null) {
        output.writeMessage(2, getAutomodel());
      }
      if (x11_ != null) {
        output.writeMessage(6, getX11());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (automodel_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAutomodel());
      }
      if (x11_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getX11());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof demetra.x13.io.protobuf.X13Protos.X13Spec)) {
        return super.equals(obj);
      }
      demetra.x13.io.protobuf.X13Protos.X13Spec other = (demetra.x13.io.protobuf.X13Protos.X13Spec) obj;

      if (hasAutomodel() != other.hasAutomodel()) return false;
      if (hasAutomodel()) {
        if (!getAutomodel()
            .equals(other.getAutomodel())) return false;
      }
      if (hasX11() != other.hasX11()) return false;
      if (hasX11()) {
        if (!getX11()
            .equals(other.getX11())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAutomodel()) {
        hash = (37 * hash) + AUTOMODEL_FIELD_NUMBER;
        hash = (53 * hash) + getAutomodel().hashCode();
      }
      if (hasX11()) {
        hash = (37 * hash) + X11_FIELD_NUMBER;
        hash = (53 * hash) + getX11().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static demetra.x13.io.protobuf.X13Protos.X13Spec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.x13.io.protobuf.X13Protos.X13Spec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.x13.io.protobuf.X13Protos.X13Spec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.x13.io.protobuf.X13Protos.X13Spec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.x13.io.protobuf.X13Protos.X13Spec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.x13.io.protobuf.X13Protos.X13Spec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.x13.io.protobuf.X13Protos.X13Spec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.x13.io.protobuf.X13Protos.X13Spec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.x13.io.protobuf.X13Protos.X13Spec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static demetra.x13.io.protobuf.X13Protos.X13Spec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.x13.io.protobuf.X13Protos.X13Spec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.x13.io.protobuf.X13Protos.X13Spec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(demetra.x13.io.protobuf.X13Protos.X13Spec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jd3.X13Spec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:jd3.X13Spec)
        demetra.x13.io.protobuf.X13Protos.X13SpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X13Spec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X13Spec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                demetra.x13.io.protobuf.X13Protos.X13Spec.class, demetra.x13.io.protobuf.X13Protos.X13Spec.Builder.class);
      }

      // Construct using demetra.x13.io.protobuf.X13Protos.X13Spec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (automodelBuilder_ == null) {
          automodel_ = null;
        } else {
          automodel_ = null;
          automodelBuilder_ = null;
        }
        if (x11Builder_ == null) {
          x11_ = null;
        } else {
          x11_ = null;
          x11Builder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return demetra.x13.io.protobuf.X13Protos.internal_static_jd3_X13Spec_descriptor;
      }

      @java.lang.Override
      public demetra.x13.io.protobuf.X13Protos.X13Spec getDefaultInstanceForType() {
        return demetra.x13.io.protobuf.X13Protos.X13Spec.getDefaultInstance();
      }

      @java.lang.Override
      public demetra.x13.io.protobuf.X13Protos.X13Spec build() {
        demetra.x13.io.protobuf.X13Protos.X13Spec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public demetra.x13.io.protobuf.X13Protos.X13Spec buildPartial() {
        demetra.x13.io.protobuf.X13Protos.X13Spec result = new demetra.x13.io.protobuf.X13Protos.X13Spec(this);
        if (automodelBuilder_ == null) {
          result.automodel_ = automodel_;
        } else {
          result.automodel_ = automodelBuilder_.build();
        }
        if (x11Builder_ == null) {
          result.x11_ = x11_;
        } else {
          result.x11_ = x11Builder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof demetra.x13.io.protobuf.X13Protos.X13Spec) {
          return mergeFrom((demetra.x13.io.protobuf.X13Protos.X13Spec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(demetra.x13.io.protobuf.X13Protos.X13Spec other) {
        if (other == demetra.x13.io.protobuf.X13Protos.X13Spec.getDefaultInstance()) return this;
        if (other.hasAutomodel()) {
          mergeAutomodel(other.getAutomodel());
        }
        if (other.hasX11()) {
          mergeX11(other.getX11());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        demetra.x13.io.protobuf.X13Protos.X13Spec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (demetra.x13.io.protobuf.X13Protos.X13Spec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec automodel_;
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec, demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.Builder, demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpecOrBuilder> automodelBuilder_;
      /**
       * <code>.jd3.X13Spec.AutoModelSpec automodel = 2;</code>
       * @return Whether the automodel field is set.
       */
      public boolean hasAutomodel() {
        return automodelBuilder_ != null || automodel_ != null;
      }
      /**
       * <code>.jd3.X13Spec.AutoModelSpec automodel = 2;</code>
       * @return The automodel.
       */
      public demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec getAutomodel() {
        if (automodelBuilder_ == null) {
          return automodel_ == null ? demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.getDefaultInstance() : automodel_;
        } else {
          return automodelBuilder_.getMessage();
        }
      }
      /**
       * <code>.jd3.X13Spec.AutoModelSpec automodel = 2;</code>
       */
      public Builder setAutomodel(demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec value) {
        if (automodelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          automodel_ = value;
          onChanged();
        } else {
          automodelBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.jd3.X13Spec.AutoModelSpec automodel = 2;</code>
       */
      public Builder setAutomodel(
          demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.Builder builderForValue) {
        if (automodelBuilder_ == null) {
          automodel_ = builderForValue.build();
          onChanged();
        } else {
          automodelBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.jd3.X13Spec.AutoModelSpec automodel = 2;</code>
       */
      public Builder mergeAutomodel(demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec value) {
        if (automodelBuilder_ == null) {
          if (automodel_ != null) {
            automodel_ =
              demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.newBuilder(automodel_).mergeFrom(value).buildPartial();
          } else {
            automodel_ = value;
          }
          onChanged();
        } else {
          automodelBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.jd3.X13Spec.AutoModelSpec automodel = 2;</code>
       */
      public Builder clearAutomodel() {
        if (automodelBuilder_ == null) {
          automodel_ = null;
          onChanged();
        } else {
          automodel_ = null;
          automodelBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.jd3.X13Spec.AutoModelSpec automodel = 2;</code>
       */
      public demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.Builder getAutomodelBuilder() {
        
        onChanged();
        return getAutomodelFieldBuilder().getBuilder();
      }
      /**
       * <code>.jd3.X13Spec.AutoModelSpec automodel = 2;</code>
       */
      public demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpecOrBuilder getAutomodelOrBuilder() {
        if (automodelBuilder_ != null) {
          return automodelBuilder_.getMessageOrBuilder();
        } else {
          return automodel_ == null ?
              demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.getDefaultInstance() : automodel_;
        }
      }
      /**
       * <code>.jd3.X13Spec.AutoModelSpec automodel = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec, demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.Builder, demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpecOrBuilder> 
          getAutomodelFieldBuilder() {
        if (automodelBuilder_ == null) {
          automodelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec, demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpec.Builder, demetra.x13.io.protobuf.X13Protos.X13Spec.AutoModelSpecOrBuilder>(
                  getAutomodel(),
                  getParentForChildren(),
                  isClean());
          automodel_ = null;
        }
        return automodelBuilder_;
      }

      private demetra.x13.io.protobuf.X13Protos.X11Spec x11_;
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.x13.io.protobuf.X13Protos.X11Spec, demetra.x13.io.protobuf.X13Protos.X11Spec.Builder, demetra.x13.io.protobuf.X13Protos.X11SpecOrBuilder> x11Builder_;
      /**
       * <code>.jd3.X11Spec x11 = 6;</code>
       * @return Whether the x11 field is set.
       */
      public boolean hasX11() {
        return x11Builder_ != null || x11_ != null;
      }
      /**
       * <code>.jd3.X11Spec x11 = 6;</code>
       * @return The x11.
       */
      public demetra.x13.io.protobuf.X13Protos.X11Spec getX11() {
        if (x11Builder_ == null) {
          return x11_ == null ? demetra.x13.io.protobuf.X13Protos.X11Spec.getDefaultInstance() : x11_;
        } else {
          return x11Builder_.getMessage();
        }
      }
      /**
       * <code>.jd3.X11Spec x11 = 6;</code>
       */
      public Builder setX11(demetra.x13.io.protobuf.X13Protos.X11Spec value) {
        if (x11Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          x11_ = value;
          onChanged();
        } else {
          x11Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.jd3.X11Spec x11 = 6;</code>
       */
      public Builder setX11(
          demetra.x13.io.protobuf.X13Protos.X11Spec.Builder builderForValue) {
        if (x11Builder_ == null) {
          x11_ = builderForValue.build();
          onChanged();
        } else {
          x11Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.jd3.X11Spec x11 = 6;</code>
       */
      public Builder mergeX11(demetra.x13.io.protobuf.X13Protos.X11Spec value) {
        if (x11Builder_ == null) {
          if (x11_ != null) {
            x11_ =
              demetra.x13.io.protobuf.X13Protos.X11Spec.newBuilder(x11_).mergeFrom(value).buildPartial();
          } else {
            x11_ = value;
          }
          onChanged();
        } else {
          x11Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.jd3.X11Spec x11 = 6;</code>
       */
      public Builder clearX11() {
        if (x11Builder_ == null) {
          x11_ = null;
          onChanged();
        } else {
          x11_ = null;
          x11Builder_ = null;
        }

        return this;
      }
      /**
       * <code>.jd3.X11Spec x11 = 6;</code>
       */
      public demetra.x13.io.protobuf.X13Protos.X11Spec.Builder getX11Builder() {
        
        onChanged();
        return getX11FieldBuilder().getBuilder();
      }
      /**
       * <code>.jd3.X11Spec x11 = 6;</code>
       */
      public demetra.x13.io.protobuf.X13Protos.X11SpecOrBuilder getX11OrBuilder() {
        if (x11Builder_ != null) {
          return x11Builder_.getMessageOrBuilder();
        } else {
          return x11_ == null ?
              demetra.x13.io.protobuf.X13Protos.X11Spec.getDefaultInstance() : x11_;
        }
      }
      /**
       * <code>.jd3.X11Spec x11 = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.x13.io.protobuf.X13Protos.X11Spec, demetra.x13.io.protobuf.X13Protos.X11Spec.Builder, demetra.x13.io.protobuf.X13Protos.X11SpecOrBuilder> 
          getX11FieldBuilder() {
        if (x11Builder_ == null) {
          x11Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              demetra.x13.io.protobuf.X13Protos.X11Spec, demetra.x13.io.protobuf.X13Protos.X11Spec.Builder, demetra.x13.io.protobuf.X13Protos.X11SpecOrBuilder>(
                  getX11(),
                  getParentForChildren(),
                  isClean());
          x11_ = null;
        }
        return x11Builder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:jd3.X13Spec)
    }

    // @@protoc_insertion_point(class_scope:jd3.X13Spec)
    private static final demetra.x13.io.protobuf.X13Protos.X13Spec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new demetra.x13.io.protobuf.X13Protos.X13Spec();
    }

    public static demetra.x13.io.protobuf.X13Protos.X13Spec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<X13Spec>
        PARSER = new com.google.protobuf.AbstractParser<X13Spec>() {
      @java.lang.Override
      public X13Spec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new X13Spec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<X13Spec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<X13Spec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public demetra.x13.io.protobuf.X13Protos.X13Spec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_jd3_X11Spec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_jd3_X11Spec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_jd3_X13Spec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_jd3_X13Spec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_jd3_X13Spec_BasicSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_jd3_X13Spec_BasicSpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_jd3_X13Spec_AutoModelSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_jd3_X13Spec_AutoModelSpec_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tx13.proto\022\003jd3\032\rtoolkit.proto\"\232\005\n\007X11S" +
      "pec\022,\n\004mode\030\001 \001(\0162\036.jd3.X11Spec.Decompos" +
      "itionMode\022\020\n\010seasonal\030\002 \001(\010\022\021\n\thenderson" +
      "\030\003 \001(\005\022,\n\007sfilter\030\004 \003(\0162\033.jd3.X11Spec.Se" +
      "asonalFilter\022\014\n\004lsig\030\005 \001(\001\022\014\n\004usig\030\006 \001(\001" +
      "\022\017\n\007nfcasts\030\007 \001(\005\022\017\n\007nbcasts\030\010 \001(\005\022)\n\005si" +
      "gma\030\t \001(\0162\032.jd3.X11Spec.CalendarSigma\022\016\n" +
      "\006vsigma\030\n \003(\005\022\024\n\014excudefcasts\030\013 \001(\010\022)\n\004b" +
      "ias\030\014 \001(\0162\033.jd3.X11Spec.BiasCorrection\"g" +
      "\n\021DecompositionMode\022\013\n\007UNKNOWN\020\000\022\014\n\010ADDI" +
      "TIVE\020\001\022\022\n\016MULTIPLICATIVE\020\002\022\017\n\013LOGADDITIV" +
      "E\020\003\022\022\n\016PSEUDOADDITIVE\020\004\"h\n\016SeasonalFilte" +
      "r\022\007\n\003MSR\020\000\022\n\n\006STABLE\020\001\022\010\n\004S3X1\020\002\022\010\n\004S3X3" +
      "\020\003\022\010\n\004S3X5\020\004\022\010\n\004S3X9\020\005\022\t\n\005S3X15\020\006\022\016\n\nX11" +
      "DEFAULT\020\007\":\n\rCalendarSigma\022\010\n\004NONE\020\000\022\n\n\006" +
      "SIGNIF\020\001\022\007\n\003ALL\020\002\022\n\n\006SELECT\020\003\"E\n\016BiasCor" +
      "rection\022\020\n\014NOCORRECTION\020\000\022\n\n\006LEGACY\020\001\022\n\n" +
      "\006SMOOTH\020\002\022\t\n\005RATIO\020\003\"\223\003\n\007X13Spec\022-\n\tauto" +
      "model\030\002 \001(\0132\032.jd3.X13Spec.AutoModelSpec\022" +
      "\031\n\003x11\030\006 \001(\0132\014.jd3.X11Spec\032^\n\tBasicSpec\022" +
      "\037\n\004span\030\001 \001(\0132\021.jd3.TimeSelector\022\025\n\rprep" +
      "rocessing\030\002 \001(\010\022\031\n\021preliminary_check\030\003 \001" +
      "(\010\032\335\001\n\rAutoModelSpec\022\017\n\007enavled\030\001 \001(\010\022\020\n" +
      "\010ljungbox\030\002 \001(\001\022\014\n\004tsig\030\003 \001(\001\022\016\n\006predcv\030" +
      "\004 \001(\001\022\017\n\007ubfinal\030\005 \001(\001\022\013\n\003ub1\030\006 \001(\001\022\013\n\003u" +
      "b2\030\007 \001(\001\022\016\n\006cancel\030\010 \001(\001\022\013\n\003fct\030\t \001(\001\022\021\n" +
      "\tacceptdef\030\n \001(\010\022\017\n\007checkmu\030\013 \001(\010\022\r\n\005mix" +
      "ed\030\014 \001(\010\022\020\n\010balanced\030\r \001(\010B$\n\027demetra.x1" +
      "3.io.protobufB\tX13ProtosP\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          demetra.toolkit.io.protobuf.ToolkitProtos.getDescriptor(),
        });
    internal_static_jd3_X11Spec_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_jd3_X11Spec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_jd3_X11Spec_descriptor,
        new java.lang.String[] { "Mode", "Seasonal", "Henderson", "Sfilter", "Lsig", "Usig", "Nfcasts", "Nbcasts", "Sigma", "Vsigma", "Excudefcasts", "Bias", });
    internal_static_jd3_X13Spec_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_jd3_X13Spec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_jd3_X13Spec_descriptor,
        new java.lang.String[] { "Automodel", "X11", });
    internal_static_jd3_X13Spec_BasicSpec_descriptor =
      internal_static_jd3_X13Spec_descriptor.getNestedTypes().get(0);
    internal_static_jd3_X13Spec_BasicSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_jd3_X13Spec_BasicSpec_descriptor,
        new java.lang.String[] { "Span", "Preprocessing", "PreliminaryCheck", });
    internal_static_jd3_X13Spec_AutoModelSpec_descriptor =
      internal_static_jd3_X13Spec_descriptor.getNestedTypes().get(1);
    internal_static_jd3_X13Spec_AutoModelSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_jd3_X13Spec_AutoModelSpec_descriptor,
        new java.lang.String[] { "Enavled", "Ljungbox", "Tsig", "Predcv", "Ubfinal", "Ub1", "Ub2", "Cancel", "Fct", "Acceptdef", "Checkmu", "Mixed", "Balanced", });
    demetra.toolkit.io.protobuf.ToolkitProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
