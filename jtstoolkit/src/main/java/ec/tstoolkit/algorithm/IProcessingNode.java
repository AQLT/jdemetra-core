/*
* Copyright 2013 National Bank of Belgium
*
* Licensed under the EUPL, Version 1.1 or â€“ as soon they will be approved 
* by the European Commission - subsequent versions of the EUPL (the "Licence");
* You may not use this work except in compliance with the Licence.
* You may obtain a copy of the Licence at:
*
* http://ec.europa.eu/idabc/eupl
*
* Unless required by applicable law or agreed to in writing, software 
* distributed under the Licence is distributed on an "AS IS" basis,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the Licence for the specific language governing permissions and 
* limitations under the Licence.
*/

package ec.tstoolkit.algorithm;

import ec.tstoolkit.information.InformationSet;
import java.util.Map;

/**
 * Processing node of sequential or parallel processing generating composite results
 * 
 * @author Jean Palate
 */
public interface IProcessingNode<I>{
    
    /**
     * Name of the processing
     * @return 
     */
    String getName();
    /**
     * Prefix of the processing. The prefix will be used in the composite results
     * (for prefixing the names of the output generated by this node
     * @return 
     */
    String getPrefix();
    
    /**
     * 
     * @param input General input of the complete processing that contains the current node
     * Typically, in some steps, that information will be unused
     * @param results
     * @param info
     * @return 
     */
    IProcessing.Status process(I input, Map<String, IProcResults> results);
    
}
