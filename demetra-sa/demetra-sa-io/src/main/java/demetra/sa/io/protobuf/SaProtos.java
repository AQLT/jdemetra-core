// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sa.proto

package demetra.sa.io.protobuf;

public final class SaProtos {
  private SaProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code sa.BenchmarkingTarget}
   */
  public enum BenchmarkingTarget
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BENCH_TARGET_UNSPECIFIED = 0;</code>
     */
    BENCH_TARGET_UNSPECIFIED(0),
    /**
     * <code>BENCH_TARGET_ORIGINAL = 1;</code>
     */
    BENCH_TARGET_ORIGINAL(1),
    /**
     * <code>BENCH_TARGET_CALENDARADJUSTED = 2;</code>
     */
    BENCH_TARGET_CALENDARADJUSTED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>BENCH_TARGET_UNSPECIFIED = 0;</code>
     */
    public static final int BENCH_TARGET_UNSPECIFIED_VALUE = 0;
    /**
     * <code>BENCH_TARGET_ORIGINAL = 1;</code>
     */
    public static final int BENCH_TARGET_ORIGINAL_VALUE = 1;
    /**
     * <code>BENCH_TARGET_CALENDARADJUSTED = 2;</code>
     */
    public static final int BENCH_TARGET_CALENDARADJUSTED_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BenchmarkingTarget valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BenchmarkingTarget forNumber(int value) {
      switch (value) {
        case 0: return BENCH_TARGET_UNSPECIFIED;
        case 1: return BENCH_TARGET_ORIGINAL;
        case 2: return BENCH_TARGET_CALENDARADJUSTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BenchmarkingTarget>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BenchmarkingTarget> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BenchmarkingTarget>() {
            public BenchmarkingTarget findValueByNumber(int number) {
              return BenchmarkingTarget.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return demetra.sa.io.protobuf.SaProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final BenchmarkingTarget[] VALUES = values();

    public static BenchmarkingTarget valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BenchmarkingTarget(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sa.BenchmarkingTarget)
  }

  /**
   * Protobuf enum {@code sa.BenchmarkingBias}
   */
  public enum BenchmarkingBias
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BENCH_BIAS_UNSPECIFIED = 0;</code>
     */
    BENCH_BIAS_UNSPECIFIED(0),
    /**
     * <code>BENCH_BIAS_NONE = 1;</code>
     */
    BENCH_BIAS_NONE(1),
    /**
     * <code>BENCH_BIAS_ADDITIVE = 2;</code>
     */
    BENCH_BIAS_ADDITIVE(2),
    /**
     * <code>BENCH_BIAS_MULTIPLICATIVE = 3;</code>
     */
    BENCH_BIAS_MULTIPLICATIVE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>BENCH_BIAS_UNSPECIFIED = 0;</code>
     */
    public static final int BENCH_BIAS_UNSPECIFIED_VALUE = 0;
    /**
     * <code>BENCH_BIAS_NONE = 1;</code>
     */
    public static final int BENCH_BIAS_NONE_VALUE = 1;
    /**
     * <code>BENCH_BIAS_ADDITIVE = 2;</code>
     */
    public static final int BENCH_BIAS_ADDITIVE_VALUE = 2;
    /**
     * <code>BENCH_BIAS_MULTIPLICATIVE = 3;</code>
     */
    public static final int BENCH_BIAS_MULTIPLICATIVE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BenchmarkingBias valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BenchmarkingBias forNumber(int value) {
      switch (value) {
        case 0: return BENCH_BIAS_UNSPECIFIED;
        case 1: return BENCH_BIAS_NONE;
        case 2: return BENCH_BIAS_ADDITIVE;
        case 3: return BENCH_BIAS_MULTIPLICATIVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BenchmarkingBias>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BenchmarkingBias> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BenchmarkingBias>() {
            public BenchmarkingBias findValueByNumber(int number) {
              return BenchmarkingBias.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return demetra.sa.io.protobuf.SaProtos.getDescriptor().getEnumTypes().get(1);
    }

    private static final BenchmarkingBias[] VALUES = values();

    public static BenchmarkingBias valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BenchmarkingBias(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sa.BenchmarkingBias)
  }

  public interface BenchmarkingSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sa.BenchmarkingSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool enabled = 1;</code>
     * @return The enabled.
     */
    boolean getEnabled();

    /**
     * <code>.sa.BenchmarkingTarget target = 2;</code>
     * @return The enum numeric value on the wire for target.
     */
    int getTargetValue();
    /**
     * <code>.sa.BenchmarkingTarget target = 2;</code>
     * @return The target.
     */
    demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget getTarget();

    /**
     * <code>double lambda = 3;</code>
     * @return The lambda.
     */
    double getLambda();

    /**
     * <code>double rho = 4;</code>
     * @return The rho.
     */
    double getRho();

    /**
     * <code>.sa.BenchmarkingBias bias = 5;</code>
     * @return The enum numeric value on the wire for bias.
     */
    int getBiasValue();
    /**
     * <code>.sa.BenchmarkingBias bias = 5;</code>
     * @return The bias.
     */
    demetra.sa.io.protobuf.SaProtos.BenchmarkingBias getBias();

    /**
     * <code>bool forecast = 6;</code>
     * @return The forecast.
     */
    boolean getForecast();
  }
  /**
   * Protobuf type {@code sa.BenchmarkingSpec}
   */
  public static final class BenchmarkingSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sa.BenchmarkingSpec)
      BenchmarkingSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BenchmarkingSpec.newBuilder() to construct.
    private BenchmarkingSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BenchmarkingSpec() {
      target_ = 0;
      bias_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BenchmarkingSpec();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BenchmarkingSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              enabled_ = input.readBool();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              target_ = rawValue;
              break;
            }
            case 25: {

              lambda_ = input.readDouble();
              break;
            }
            case 33: {

              rho_ = input.readDouble();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              bias_ = rawValue;
              break;
            }
            case 48: {

              forecast_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return demetra.sa.io.protobuf.SaProtos.internal_static_sa_BenchmarkingSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return demetra.sa.io.protobuf.SaProtos.internal_static_sa_BenchmarkingSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec.class, demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec.Builder.class);
    }

    public static final int ENABLED_FIELD_NUMBER = 1;
    private boolean enabled_;
    /**
     * <code>bool enabled = 1;</code>
     * @return The enabled.
     */
    @java.lang.Override
    public boolean getEnabled() {
      return enabled_;
    }

    public static final int TARGET_FIELD_NUMBER = 2;
    private int target_;
    /**
     * <code>.sa.BenchmarkingTarget target = 2;</code>
     * @return The enum numeric value on the wire for target.
     */
    @java.lang.Override public int getTargetValue() {
      return target_;
    }
    /**
     * <code>.sa.BenchmarkingTarget target = 2;</code>
     * @return The target.
     */
    @java.lang.Override public demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget getTarget() {
      @SuppressWarnings("deprecation")
      demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget result = demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget.valueOf(target_);
      return result == null ? demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget.UNRECOGNIZED : result;
    }

    public static final int LAMBDA_FIELD_NUMBER = 3;
    private double lambda_;
    /**
     * <code>double lambda = 3;</code>
     * @return The lambda.
     */
    @java.lang.Override
    public double getLambda() {
      return lambda_;
    }

    public static final int RHO_FIELD_NUMBER = 4;
    private double rho_;
    /**
     * <code>double rho = 4;</code>
     * @return The rho.
     */
    @java.lang.Override
    public double getRho() {
      return rho_;
    }

    public static final int BIAS_FIELD_NUMBER = 5;
    private int bias_;
    /**
     * <code>.sa.BenchmarkingBias bias = 5;</code>
     * @return The enum numeric value on the wire for bias.
     */
    @java.lang.Override public int getBiasValue() {
      return bias_;
    }
    /**
     * <code>.sa.BenchmarkingBias bias = 5;</code>
     * @return The bias.
     */
    @java.lang.Override public demetra.sa.io.protobuf.SaProtos.BenchmarkingBias getBias() {
      @SuppressWarnings("deprecation")
      demetra.sa.io.protobuf.SaProtos.BenchmarkingBias result = demetra.sa.io.protobuf.SaProtos.BenchmarkingBias.valueOf(bias_);
      return result == null ? demetra.sa.io.protobuf.SaProtos.BenchmarkingBias.UNRECOGNIZED : result;
    }

    public static final int FORECAST_FIELD_NUMBER = 6;
    private boolean forecast_;
    /**
     * <code>bool forecast = 6;</code>
     * @return The forecast.
     */
    @java.lang.Override
    public boolean getForecast() {
      return forecast_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (enabled_ != false) {
        output.writeBool(1, enabled_);
      }
      if (target_ != demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget.BENCH_TARGET_UNSPECIFIED.getNumber()) {
        output.writeEnum(2, target_);
      }
      if (lambda_ != 0D) {
        output.writeDouble(3, lambda_);
      }
      if (rho_ != 0D) {
        output.writeDouble(4, rho_);
      }
      if (bias_ != demetra.sa.io.protobuf.SaProtos.BenchmarkingBias.BENCH_BIAS_UNSPECIFIED.getNumber()) {
        output.writeEnum(5, bias_);
      }
      if (forecast_ != false) {
        output.writeBool(6, forecast_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (enabled_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, enabled_);
      }
      if (target_ != demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget.BENCH_TARGET_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, target_);
      }
      if (lambda_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, lambda_);
      }
      if (rho_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, rho_);
      }
      if (bias_ != demetra.sa.io.protobuf.SaProtos.BenchmarkingBias.BENCH_BIAS_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, bias_);
      }
      if (forecast_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, forecast_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec)) {
        return super.equals(obj);
      }
      demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec other = (demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec) obj;

      if (getEnabled()
          != other.getEnabled()) return false;
      if (target_ != other.target_) return false;
      if (java.lang.Double.doubleToLongBits(getLambda())
          != java.lang.Double.doubleToLongBits(
              other.getLambda())) return false;
      if (java.lang.Double.doubleToLongBits(getRho())
          != java.lang.Double.doubleToLongBits(
              other.getRho())) return false;
      if (bias_ != other.bias_) return false;
      if (getForecast()
          != other.getForecast()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnabled());
      hash = (37 * hash) + TARGET_FIELD_NUMBER;
      hash = (53 * hash) + target_;
      hash = (37 * hash) + LAMBDA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLambda()));
      hash = (37 * hash) + RHO_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getRho()));
      hash = (37 * hash) + BIAS_FIELD_NUMBER;
      hash = (53 * hash) + bias_;
      hash = (37 * hash) + FORECAST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getForecast());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sa.BenchmarkingSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sa.BenchmarkingSpec)
        demetra.sa.io.protobuf.SaProtos.BenchmarkingSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_BenchmarkingSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_BenchmarkingSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec.class, demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec.Builder.class);
      }

      // Construct using demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        enabled_ = false;

        target_ = 0;

        lambda_ = 0D;

        rho_ = 0D;

        bias_ = 0;

        forecast_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_BenchmarkingSpec_descriptor;
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec getDefaultInstanceForType() {
        return demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec.getDefaultInstance();
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec build() {
        demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec buildPartial() {
        demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec result = new demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec(this);
        result.enabled_ = enabled_;
        result.target_ = target_;
        result.lambda_ = lambda_;
        result.rho_ = rho_;
        result.bias_ = bias_;
        result.forecast_ = forecast_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec) {
          return mergeFrom((demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec other) {
        if (other == demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec.getDefaultInstance()) return this;
        if (other.getEnabled() != false) {
          setEnabled(other.getEnabled());
        }
        if (other.target_ != 0) {
          setTargetValue(other.getTargetValue());
        }
        if (other.getLambda() != 0D) {
          setLambda(other.getLambda());
        }
        if (other.getRho() != 0D) {
          setRho(other.getRho());
        }
        if (other.bias_ != 0) {
          setBiasValue(other.getBiasValue());
        }
        if (other.getForecast() != false) {
          setForecast(other.getForecast());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean enabled_ ;
      /**
       * <code>bool enabled = 1;</code>
       * @return The enabled.
       */
      @java.lang.Override
      public boolean getEnabled() {
        return enabled_;
      }
      /**
       * <code>bool enabled = 1;</code>
       * @param value The enabled to set.
       * @return This builder for chaining.
       */
      public Builder setEnabled(boolean value) {
        
        enabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool enabled = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnabled() {
        
        enabled_ = false;
        onChanged();
        return this;
      }

      private int target_ = 0;
      /**
       * <code>.sa.BenchmarkingTarget target = 2;</code>
       * @return The enum numeric value on the wire for target.
       */
      @java.lang.Override public int getTargetValue() {
        return target_;
      }
      /**
       * <code>.sa.BenchmarkingTarget target = 2;</code>
       * @param value The enum numeric value on the wire for target to set.
       * @return This builder for chaining.
       */
      public Builder setTargetValue(int value) {
        
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.sa.BenchmarkingTarget target = 2;</code>
       * @return The target.
       */
      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget getTarget() {
        @SuppressWarnings("deprecation")
        demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget result = demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget.valueOf(target_);
        return result == null ? demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget.UNRECOGNIZED : result;
      }
      /**
       * <code>.sa.BenchmarkingTarget target = 2;</code>
       * @param value The target to set.
       * @return This builder for chaining.
       */
      public Builder setTarget(demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        target_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.sa.BenchmarkingTarget target = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTarget() {
        
        target_ = 0;
        onChanged();
        return this;
      }

      private double lambda_ ;
      /**
       * <code>double lambda = 3;</code>
       * @return The lambda.
       */
      @java.lang.Override
      public double getLambda() {
        return lambda_;
      }
      /**
       * <code>double lambda = 3;</code>
       * @param value The lambda to set.
       * @return This builder for chaining.
       */
      public Builder setLambda(double value) {
        
        lambda_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double lambda = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLambda() {
        
        lambda_ = 0D;
        onChanged();
        return this;
      }

      private double rho_ ;
      /**
       * <code>double rho = 4;</code>
       * @return The rho.
       */
      @java.lang.Override
      public double getRho() {
        return rho_;
      }
      /**
       * <code>double rho = 4;</code>
       * @param value The rho to set.
       * @return This builder for chaining.
       */
      public Builder setRho(double value) {
        
        rho_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double rho = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRho() {
        
        rho_ = 0D;
        onChanged();
        return this;
      }

      private int bias_ = 0;
      /**
       * <code>.sa.BenchmarkingBias bias = 5;</code>
       * @return The enum numeric value on the wire for bias.
       */
      @java.lang.Override public int getBiasValue() {
        return bias_;
      }
      /**
       * <code>.sa.BenchmarkingBias bias = 5;</code>
       * @param value The enum numeric value on the wire for bias to set.
       * @return This builder for chaining.
       */
      public Builder setBiasValue(int value) {
        
        bias_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.sa.BenchmarkingBias bias = 5;</code>
       * @return The bias.
       */
      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.BenchmarkingBias getBias() {
        @SuppressWarnings("deprecation")
        demetra.sa.io.protobuf.SaProtos.BenchmarkingBias result = demetra.sa.io.protobuf.SaProtos.BenchmarkingBias.valueOf(bias_);
        return result == null ? demetra.sa.io.protobuf.SaProtos.BenchmarkingBias.UNRECOGNIZED : result;
      }
      /**
       * <code>.sa.BenchmarkingBias bias = 5;</code>
       * @param value The bias to set.
       * @return This builder for chaining.
       */
      public Builder setBias(demetra.sa.io.protobuf.SaProtos.BenchmarkingBias value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        bias_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.sa.BenchmarkingBias bias = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBias() {
        
        bias_ = 0;
        onChanged();
        return this;
      }

      private boolean forecast_ ;
      /**
       * <code>bool forecast = 6;</code>
       * @return The forecast.
       */
      @java.lang.Override
      public boolean getForecast() {
        return forecast_;
      }
      /**
       * <code>bool forecast = 6;</code>
       * @param value The forecast to set.
       * @return This builder for chaining.
       */
      public Builder setForecast(boolean value) {
        
        forecast_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool forecast = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearForecast() {
        
        forecast_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sa.BenchmarkingSpec)
    }

    // @@protoc_insertion_point(class_scope:sa.BenchmarkingSpec)
    private static final demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec();
    }

    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BenchmarkingSpec>
        PARSER = new com.google.protobuf.AbstractParser<BenchmarkingSpec>() {
      @java.lang.Override
      public BenchmarkingSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BenchmarkingSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BenchmarkingSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BenchmarkingSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sa_BenchmarkingSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sa_BenchmarkingSpec_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\010sa.proto\022\002sa\"\236\001\n\020BenchmarkingSpec\022\017\n\007e" +
      "nabled\030\001 \001(\010\022&\n\006target\030\002 \001(\0162\026.sa.Benchm" +
      "arkingTarget\022\016\n\006lambda\030\003 \001(\001\022\013\n\003rho\030\004 \001(" +
      "\001\022\"\n\004bias\030\005 \001(\0162\024.sa.BenchmarkingBias\022\020\n" +
      "\010forecast\030\006 \001(\010*p\n\022BenchmarkingTarget\022\034\n" +
      "\030BENCH_TARGET_UNSPECIFIED\020\000\022\031\n\025BENCH_TAR" +
      "GET_ORIGINAL\020\001\022!\n\035BENCH_TARGET_CALENDARA" +
      "DJUSTED\020\002*{\n\020BenchmarkingBias\022\032\n\026BENCH_B" +
      "IAS_UNSPECIFIED\020\000\022\023\n\017BENCH_BIAS_NONE\020\001\022\027" +
      "\n\023BENCH_BIAS_ADDITIVE\020\002\022\035\n\031BENCH_BIAS_MU" +
      "LTIPLICATIVE\020\003B\"\n\026demetra.sa.io.protobuf" +
      "B\010SaProtosb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_sa_BenchmarkingSpec_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_sa_BenchmarkingSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sa_BenchmarkingSpec_descriptor,
        new java.lang.String[] { "Enabled", "Target", "Lambda", "Rho", "Bias", "Forecast", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
