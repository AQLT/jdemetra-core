// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sa.proto

package demetra.sa.io.protobuf;

public final class SaProtos {
  private SaProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code sa.ComponentType}
   */
  public enum ComponentType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNDEFINED = 0;</code>
     */
    UNDEFINED(0),
    /**
     * <code>SERIES = 1;</code>
     */
    SERIES(1),
    /**
     * <code>TREND = 2;</code>
     */
    TREND(2),
    /**
     * <code>SEASONAL = 3;</code>
     */
    SEASONAL(3),
    /**
     * <code>SEASONALLYADJUSTED = 4;</code>
     */
    SEASONALLYADJUSTED(4),
    /**
     * <code>IRREGULAR = 5;</code>
     */
    IRREGULAR(5),
    /**
     * <code>CALENDAR = 6;</code>
     */
    CALENDAR(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNDEFINED = 0;</code>
     */
    public static final int UNDEFINED_VALUE = 0;
    /**
     * <code>SERIES = 1;</code>
     */
    public static final int SERIES_VALUE = 1;
    /**
     * <code>TREND = 2;</code>
     */
    public static final int TREND_VALUE = 2;
    /**
     * <code>SEASONAL = 3;</code>
     */
    public static final int SEASONAL_VALUE = 3;
    /**
     * <code>SEASONALLYADJUSTED = 4;</code>
     */
    public static final int SEASONALLYADJUSTED_VALUE = 4;
    /**
     * <code>IRREGULAR = 5;</code>
     */
    public static final int IRREGULAR_VALUE = 5;
    /**
     * <code>CALENDAR = 6;</code>
     */
    public static final int CALENDAR_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ComponentType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ComponentType forNumber(int value) {
      switch (value) {
        case 0: return UNDEFINED;
        case 1: return SERIES;
        case 2: return TREND;
        case 3: return SEASONAL;
        case 4: return SEASONALLYADJUSTED;
        case 5: return IRREGULAR;
        case 6: return CALENDAR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ComponentType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ComponentType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ComponentType>() {
            public ComponentType findValueByNumber(int number) {
              return ComponentType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return demetra.sa.io.protobuf.SaProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final ComponentType[] VALUES = values();

    public static ComponentType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ComponentType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sa.ComponentType)
  }

  /**
   * Protobuf enum {@code sa.DecompositionMode}
   */
  public enum DecompositionMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <pre>
     * Y = T + S + I) 
     * </pre>
     *
     * <code>ADDITIVE = 1;</code>
     */
    ADDITIVE(1),
    /**
     * <pre>
     * Y = T * S * I) 
     * </pre>
     *
     * <code>MULTIPLICATIVE = 2;</code>
     */
    MULTIPLICATIVE(2),
    /**
     * <pre>
     * Y = T * (S + I - 1) 
     * </pre>
     *
     * <code>PSEUDOADDITIVE = 3;</code>
     */
    PSEUDOADDITIVE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * Y = T + S + I) 
     * </pre>
     *
     * <code>ADDITIVE = 1;</code>
     */
    public static final int ADDITIVE_VALUE = 1;
    /**
     * <pre>
     * Y = T * S * I) 
     * </pre>
     *
     * <code>MULTIPLICATIVE = 2;</code>
     */
    public static final int MULTIPLICATIVE_VALUE = 2;
    /**
     * <pre>
     * Y = T * (S + I - 1) 
     * </pre>
     *
     * <code>PSEUDOADDITIVE = 3;</code>
     */
    public static final int PSEUDOADDITIVE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DecompositionMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DecompositionMode forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return ADDITIVE;
        case 2: return MULTIPLICATIVE;
        case 3: return PSEUDOADDITIVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DecompositionMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DecompositionMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DecompositionMode>() {
            public DecompositionMode findValueByNumber(int number) {
              return DecompositionMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return demetra.sa.io.protobuf.SaProtos.getDescriptor().getEnumTypes().get(1);
    }

    private static final DecompositionMode[] VALUES = values();

    public static DecompositionMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DecompositionMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sa.DecompositionMode)
  }

  /**
   * Protobuf enum {@code sa.BenchmarkingTarget}
   */
  public enum BenchmarkingTarget
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BENCH_TARGET_UNSPECIFIED = 0;</code>
     */
    BENCH_TARGET_UNSPECIFIED(0),
    /**
     * <code>BENCH_TARGET_ORIGINAL = 1;</code>
     */
    BENCH_TARGET_ORIGINAL(1),
    /**
     * <code>BENCH_TARGET_CALENDARADJUSTED = 2;</code>
     */
    BENCH_TARGET_CALENDARADJUSTED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>BENCH_TARGET_UNSPECIFIED = 0;</code>
     */
    public static final int BENCH_TARGET_UNSPECIFIED_VALUE = 0;
    /**
     * <code>BENCH_TARGET_ORIGINAL = 1;</code>
     */
    public static final int BENCH_TARGET_ORIGINAL_VALUE = 1;
    /**
     * <code>BENCH_TARGET_CALENDARADJUSTED = 2;</code>
     */
    public static final int BENCH_TARGET_CALENDARADJUSTED_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BenchmarkingTarget valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BenchmarkingTarget forNumber(int value) {
      switch (value) {
        case 0: return BENCH_TARGET_UNSPECIFIED;
        case 1: return BENCH_TARGET_ORIGINAL;
        case 2: return BENCH_TARGET_CALENDARADJUSTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BenchmarkingTarget>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BenchmarkingTarget> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BenchmarkingTarget>() {
            public BenchmarkingTarget findValueByNumber(int number) {
              return BenchmarkingTarget.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return demetra.sa.io.protobuf.SaProtos.getDescriptor().getEnumTypes().get(2);
    }

    private static final BenchmarkingTarget[] VALUES = values();

    public static BenchmarkingTarget valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BenchmarkingTarget(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sa.BenchmarkingTarget)
  }

  /**
   * Protobuf enum {@code sa.BenchmarkingBias}
   */
  public enum BenchmarkingBias
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BENCH_BIAS_UNSPECIFIED = 0;</code>
     */
    BENCH_BIAS_UNSPECIFIED(0),
    /**
     * <code>BENCH_BIAS_NONE = 1;</code>
     */
    BENCH_BIAS_NONE(1),
    /**
     * <code>BENCH_BIAS_ADDITIVE = 2;</code>
     */
    BENCH_BIAS_ADDITIVE(2),
    /**
     * <code>BENCH_BIAS_MULTIPLICATIVE = 3;</code>
     */
    BENCH_BIAS_MULTIPLICATIVE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>BENCH_BIAS_UNSPECIFIED = 0;</code>
     */
    public static final int BENCH_BIAS_UNSPECIFIED_VALUE = 0;
    /**
     * <code>BENCH_BIAS_NONE = 1;</code>
     */
    public static final int BENCH_BIAS_NONE_VALUE = 1;
    /**
     * <code>BENCH_BIAS_ADDITIVE = 2;</code>
     */
    public static final int BENCH_BIAS_ADDITIVE_VALUE = 2;
    /**
     * <code>BENCH_BIAS_MULTIPLICATIVE = 3;</code>
     */
    public static final int BENCH_BIAS_MULTIPLICATIVE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BenchmarkingBias valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BenchmarkingBias forNumber(int value) {
      switch (value) {
        case 0: return BENCH_BIAS_UNSPECIFIED;
        case 1: return BENCH_BIAS_NONE;
        case 2: return BENCH_BIAS_ADDITIVE;
        case 3: return BENCH_BIAS_MULTIPLICATIVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BenchmarkingBias>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BenchmarkingBias> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BenchmarkingBias>() {
            public BenchmarkingBias findValueByNumber(int number) {
              return BenchmarkingBias.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return demetra.sa.io.protobuf.SaProtos.getDescriptor().getEnumTypes().get(3);
    }

    private static final BenchmarkingBias[] VALUES = values();

    public static BenchmarkingBias valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BenchmarkingBias(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sa.BenchmarkingBias)
  }

  public interface ComponentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sa.Component)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.jd3.TsData data = 1;</code>
     * @return Whether the data field is set.
     */
    boolean hasData();
    /**
     * <code>.jd3.TsData data = 1;</code>
     * @return The data.
     */
    demetra.toolkit.io.protobuf.ToolkitProtos.TsData getData();
    /**
     * <code>.jd3.TsData data = 1;</code>
     */
    demetra.toolkit.io.protobuf.ToolkitProtos.TsDataOrBuilder getDataOrBuilder();

    /**
     * <pre>
     * The length of stde should be the same as the length of data 
     * </pre>
     *
     * <code>repeated double stde = 2;</code>
     * @return A list containing the stde.
     */
    java.util.List<java.lang.Double> getStdeList();
    /**
     * <pre>
     * The length of stde should be the same as the length of data 
     * </pre>
     *
     * <code>repeated double stde = 2;</code>
     * @return The count of stde.
     */
    int getStdeCount();
    /**
     * <pre>
     * The length of stde should be the same as the length of data 
     * </pre>
     *
     * <code>repeated double stde = 2;</code>
     * @param index The index of the element to return.
     * @return The stde at the given index.
     */
    double getStde(int index);

    /**
     * <code>int32 nbcasts = 3;</code>
     * @return The nbcasts.
     */
    int getNbcasts();

    /**
     * <code>int32 nfcasts = 4;</code>
     * @return The nfcasts.
     */
    int getNfcasts();
  }
  /**
   * Protobuf type {@code sa.Component}
   */
  public static final class Component extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sa.Component)
      ComponentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Component.newBuilder() to construct.
    private Component(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Component() {
      stde_ = emptyDoubleList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Component();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Component(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              demetra.toolkit.io.protobuf.ToolkitProtos.TsData.Builder subBuilder = null;
              if (data_ != null) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(demetra.toolkit.io.protobuf.ToolkitProtos.TsData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }

              break;
            }
            case 17: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                stde_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              stde_.addDouble(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                stde_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                stde_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {

              nbcasts_ = input.readInt32();
              break;
            }
            case 32: {

              nfcasts_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          stde_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return demetra.sa.io.protobuf.SaProtos.internal_static_sa_Component_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return demetra.sa.io.protobuf.SaProtos.internal_static_sa_Component_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              demetra.sa.io.protobuf.SaProtos.Component.class, demetra.sa.io.protobuf.SaProtos.Component.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private demetra.toolkit.io.protobuf.ToolkitProtos.TsData data_;
    /**
     * <code>.jd3.TsData data = 1;</code>
     * @return Whether the data field is set.
     */
    @java.lang.Override
    public boolean hasData() {
      return data_ != null;
    }
    /**
     * <code>.jd3.TsData data = 1;</code>
     * @return The data.
     */
    @java.lang.Override
    public demetra.toolkit.io.protobuf.ToolkitProtos.TsData getData() {
      return data_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.TsData.getDefaultInstance() : data_;
    }
    /**
     * <code>.jd3.TsData data = 1;</code>
     */
    @java.lang.Override
    public demetra.toolkit.io.protobuf.ToolkitProtos.TsDataOrBuilder getDataOrBuilder() {
      return getData();
    }

    public static final int STDE_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.DoubleList stde_;
    /**
     * <pre>
     * The length of stde should be the same as the length of data 
     * </pre>
     *
     * <code>repeated double stde = 2;</code>
     * @return A list containing the stde.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getStdeList() {
      return stde_;
    }
    /**
     * <pre>
     * The length of stde should be the same as the length of data 
     * </pre>
     *
     * <code>repeated double stde = 2;</code>
     * @return The count of stde.
     */
    public int getStdeCount() {
      return stde_.size();
    }
    /**
     * <pre>
     * The length of stde should be the same as the length of data 
     * </pre>
     *
     * <code>repeated double stde = 2;</code>
     * @param index The index of the element to return.
     * @return The stde at the given index.
     */
    public double getStde(int index) {
      return stde_.getDouble(index);
    }
    private int stdeMemoizedSerializedSize = -1;

    public static final int NBCASTS_FIELD_NUMBER = 3;
    private int nbcasts_;
    /**
     * <code>int32 nbcasts = 3;</code>
     * @return The nbcasts.
     */
    @java.lang.Override
    public int getNbcasts() {
      return nbcasts_;
    }

    public static final int NFCASTS_FIELD_NUMBER = 4;
    private int nfcasts_;
    /**
     * <code>int32 nfcasts = 4;</code>
     * @return The nfcasts.
     */
    @java.lang.Override
    public int getNfcasts() {
      return nfcasts_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (data_ != null) {
        output.writeMessage(1, getData());
      }
      if (getStdeList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(stdeMemoizedSerializedSize);
      }
      for (int i = 0; i < stde_.size(); i++) {
        output.writeDoubleNoTag(stde_.getDouble(i));
      }
      if (nbcasts_ != 0) {
        output.writeInt32(3, nbcasts_);
      }
      if (nfcasts_ != 0) {
        output.writeInt32(4, nfcasts_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (data_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getData());
      }
      {
        int dataSize = 0;
        dataSize = 8 * getStdeList().size();
        size += dataSize;
        if (!getStdeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        stdeMemoizedSerializedSize = dataSize;
      }
      if (nbcasts_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, nbcasts_);
      }
      if (nfcasts_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, nfcasts_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof demetra.sa.io.protobuf.SaProtos.Component)) {
        return super.equals(obj);
      }
      demetra.sa.io.protobuf.SaProtos.Component other = (demetra.sa.io.protobuf.SaProtos.Component) obj;

      if (hasData() != other.hasData()) return false;
      if (hasData()) {
        if (!getData()
            .equals(other.getData())) return false;
      }
      if (!getStdeList()
          .equals(other.getStdeList())) return false;
      if (getNbcasts()
          != other.getNbcasts()) return false;
      if (getNfcasts()
          != other.getNfcasts()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      if (getStdeCount() > 0) {
        hash = (37 * hash) + STDE_FIELD_NUMBER;
        hash = (53 * hash) + getStdeList().hashCode();
      }
      hash = (37 * hash) + NBCASTS_FIELD_NUMBER;
      hash = (53 * hash) + getNbcasts();
      hash = (37 * hash) + NFCASTS_FIELD_NUMBER;
      hash = (53 * hash) + getNfcasts();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static demetra.sa.io.protobuf.SaProtos.Component parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.Component parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.Component parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.Component parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.Component parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.Component parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.Component parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.Component parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.Component parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.Component parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.Component parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.Component parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(demetra.sa.io.protobuf.SaProtos.Component prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sa.Component}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sa.Component)
        demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_Component_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_Component_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                demetra.sa.io.protobuf.SaProtos.Component.class, demetra.sa.io.protobuf.SaProtos.Component.Builder.class);
      }

      // Construct using demetra.sa.io.protobuf.SaProtos.Component.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (dataBuilder_ == null) {
          data_ = null;
        } else {
          data_ = null;
          dataBuilder_ = null;
        }
        stde_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        nbcasts_ = 0;

        nfcasts_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_Component_descriptor;
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.Component getDefaultInstanceForType() {
        return demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance();
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.Component build() {
        demetra.sa.io.protobuf.SaProtos.Component result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.Component buildPartial() {
        demetra.sa.io.protobuf.SaProtos.Component result = new demetra.sa.io.protobuf.SaProtos.Component(this);
        int from_bitField0_ = bitField0_;
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          stde_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.stde_ = stde_;
        result.nbcasts_ = nbcasts_;
        result.nfcasts_ = nfcasts_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof demetra.sa.io.protobuf.SaProtos.Component) {
          return mergeFrom((demetra.sa.io.protobuf.SaProtos.Component)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(demetra.sa.io.protobuf.SaProtos.Component other) {
        if (other == demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance()) return this;
        if (other.hasData()) {
          mergeData(other.getData());
        }
        if (!other.stde_.isEmpty()) {
          if (stde_.isEmpty()) {
            stde_ = other.stde_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureStdeIsMutable();
            stde_.addAll(other.stde_);
          }
          onChanged();
        }
        if (other.getNbcasts() != 0) {
          setNbcasts(other.getNbcasts());
        }
        if (other.getNfcasts() != 0) {
          setNfcasts(other.getNfcasts());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        demetra.sa.io.protobuf.SaProtos.Component parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (demetra.sa.io.protobuf.SaProtos.Component) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private demetra.toolkit.io.protobuf.ToolkitProtos.TsData data_;
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.toolkit.io.protobuf.ToolkitProtos.TsData, demetra.toolkit.io.protobuf.ToolkitProtos.TsData.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.TsDataOrBuilder> dataBuilder_;
      /**
       * <code>.jd3.TsData data = 1;</code>
       * @return Whether the data field is set.
       */
      public boolean hasData() {
        return dataBuilder_ != null || data_ != null;
      }
      /**
       * <code>.jd3.TsData data = 1;</code>
       * @return The data.
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.TsData getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.TsData.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>.jd3.TsData data = 1;</code>
       */
      public Builder setData(demetra.toolkit.io.protobuf.ToolkitProtos.TsData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.jd3.TsData data = 1;</code>
       */
      public Builder setData(
          demetra.toolkit.io.protobuf.ToolkitProtos.TsData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.jd3.TsData data = 1;</code>
       */
      public Builder mergeData(demetra.toolkit.io.protobuf.ToolkitProtos.TsData value) {
        if (dataBuilder_ == null) {
          if (data_ != null) {
            data_ =
              demetra.toolkit.io.protobuf.ToolkitProtos.TsData.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.jd3.TsData data = 1;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = null;
          onChanged();
        } else {
          data_ = null;
          dataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.jd3.TsData data = 1;</code>
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.TsData.Builder getDataBuilder() {
        
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.jd3.TsData data = 1;</code>
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.TsDataOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              demetra.toolkit.io.protobuf.ToolkitProtos.TsData.getDefaultInstance() : data_;
        }
      }
      /**
       * <code>.jd3.TsData data = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.toolkit.io.protobuf.ToolkitProtos.TsData, demetra.toolkit.io.protobuf.ToolkitProtos.TsData.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.TsDataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              demetra.toolkit.io.protobuf.ToolkitProtos.TsData, demetra.toolkit.io.protobuf.ToolkitProtos.TsData.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.TsDataOrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      private com.google.protobuf.Internal.DoubleList stde_ = emptyDoubleList();
      private void ensureStdeIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          stde_ = mutableCopy(stde_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * The length of stde should be the same as the length of data 
       * </pre>
       *
       * <code>repeated double stde = 2;</code>
       * @return A list containing the stde.
       */
      public java.util.List<java.lang.Double>
          getStdeList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(stde_) : stde_;
      }
      /**
       * <pre>
       * The length of stde should be the same as the length of data 
       * </pre>
       *
       * <code>repeated double stde = 2;</code>
       * @return The count of stde.
       */
      public int getStdeCount() {
        return stde_.size();
      }
      /**
       * <pre>
       * The length of stde should be the same as the length of data 
       * </pre>
       *
       * <code>repeated double stde = 2;</code>
       * @param index The index of the element to return.
       * @return The stde at the given index.
       */
      public double getStde(int index) {
        return stde_.getDouble(index);
      }
      /**
       * <pre>
       * The length of stde should be the same as the length of data 
       * </pre>
       *
       * <code>repeated double stde = 2;</code>
       * @param index The index to set the value at.
       * @param value The stde to set.
       * @return This builder for chaining.
       */
      public Builder setStde(
          int index, double value) {
        ensureStdeIsMutable();
        stde_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The length of stde should be the same as the length of data 
       * </pre>
       *
       * <code>repeated double stde = 2;</code>
       * @param value The stde to add.
       * @return This builder for chaining.
       */
      public Builder addStde(double value) {
        ensureStdeIsMutable();
        stde_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The length of stde should be the same as the length of data 
       * </pre>
       *
       * <code>repeated double stde = 2;</code>
       * @param values The stde to add.
       * @return This builder for chaining.
       */
      public Builder addAllStde(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureStdeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stde_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The length of stde should be the same as the length of data 
       * </pre>
       *
       * <code>repeated double stde = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStde() {
        stde_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int nbcasts_ ;
      /**
       * <code>int32 nbcasts = 3;</code>
       * @return The nbcasts.
       */
      @java.lang.Override
      public int getNbcasts() {
        return nbcasts_;
      }
      /**
       * <code>int32 nbcasts = 3;</code>
       * @param value The nbcasts to set.
       * @return This builder for chaining.
       */
      public Builder setNbcasts(int value) {
        
        nbcasts_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 nbcasts = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearNbcasts() {
        
        nbcasts_ = 0;
        onChanged();
        return this;
      }

      private int nfcasts_ ;
      /**
       * <code>int32 nfcasts = 4;</code>
       * @return The nfcasts.
       */
      @java.lang.Override
      public int getNfcasts() {
        return nfcasts_;
      }
      /**
       * <code>int32 nfcasts = 4;</code>
       * @param value The nfcasts to set.
       * @return This builder for chaining.
       */
      public Builder setNfcasts(int value) {
        
        nfcasts_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 nfcasts = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearNfcasts() {
        
        nfcasts_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sa.Component)
    }

    // @@protoc_insertion_point(class_scope:sa.Component)
    private static final demetra.sa.io.protobuf.SaProtos.Component DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new demetra.sa.io.protobuf.SaProtos.Component();
    }

    public static demetra.sa.io.protobuf.SaProtos.Component getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Component>
        PARSER = new com.google.protobuf.AbstractParser<Component>() {
      @java.lang.Override
      public Component parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Component(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Component> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Component> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.Component getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SaDecompositionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sa.SaDecomposition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.sa.DecompositionMode mode = 1;</code>
     * @return The enum numeric value on the wire for mode.
     */
    int getModeValue();
    /**
     * <code>.sa.DecompositionMode mode = 1;</code>
     * @return The mode.
     */
    demetra.sa.io.protobuf.SaProtos.DecompositionMode getMode();

    /**
     * <code>.sa.Component series = 2;</code>
     * @return Whether the series field is set.
     */
    boolean hasSeries();
    /**
     * <code>.sa.Component series = 2;</code>
     * @return The series.
     */
    demetra.sa.io.protobuf.SaProtos.Component getSeries();
    /**
     * <code>.sa.Component series = 2;</code>
     */
    demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder getSeriesOrBuilder();

    /**
     * <code>.sa.Component seasonally_adjusted = 3;</code>
     * @return Whether the seasonallyAdjusted field is set.
     */
    boolean hasSeasonallyAdjusted();
    /**
     * <code>.sa.Component seasonally_adjusted = 3;</code>
     * @return The seasonallyAdjusted.
     */
    demetra.sa.io.protobuf.SaProtos.Component getSeasonallyAdjusted();
    /**
     * <code>.sa.Component seasonally_adjusted = 3;</code>
     */
    demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder getSeasonallyAdjustedOrBuilder();

    /**
     * <code>.sa.Component trend = 4;</code>
     * @return Whether the trend field is set.
     */
    boolean hasTrend();
    /**
     * <code>.sa.Component trend = 4;</code>
     * @return The trend.
     */
    demetra.sa.io.protobuf.SaProtos.Component getTrend();
    /**
     * <code>.sa.Component trend = 4;</code>
     */
    demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder getTrendOrBuilder();

    /**
     * <code>.sa.Component seasonal = 5;</code>
     * @return Whether the seasonal field is set.
     */
    boolean hasSeasonal();
    /**
     * <code>.sa.Component seasonal = 5;</code>
     * @return The seasonal.
     */
    demetra.sa.io.protobuf.SaProtos.Component getSeasonal();
    /**
     * <code>.sa.Component seasonal = 5;</code>
     */
    demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder getSeasonalOrBuilder();

    /**
     * <code>.sa.Component irregular = 6;</code>
     * @return Whether the irregular field is set.
     */
    boolean hasIrregular();
    /**
     * <code>.sa.Component irregular = 6;</code>
     * @return The irregular.
     */
    demetra.sa.io.protobuf.SaProtos.Component getIrregular();
    /**
     * <code>.sa.Component irregular = 6;</code>
     */
    demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder getIrregularOrBuilder();
  }
  /**
   * Protobuf type {@code sa.SaDecomposition}
   */
  public static final class SaDecomposition extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sa.SaDecomposition)
      SaDecompositionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SaDecomposition.newBuilder() to construct.
    private SaDecomposition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SaDecomposition() {
      mode_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SaDecomposition();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SaDecomposition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              mode_ = rawValue;
              break;
            }
            case 18: {
              demetra.sa.io.protobuf.SaProtos.Component.Builder subBuilder = null;
              if (series_ != null) {
                subBuilder = series_.toBuilder();
              }
              series_ = input.readMessage(demetra.sa.io.protobuf.SaProtos.Component.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(series_);
                series_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              demetra.sa.io.protobuf.SaProtos.Component.Builder subBuilder = null;
              if (seasonallyAdjusted_ != null) {
                subBuilder = seasonallyAdjusted_.toBuilder();
              }
              seasonallyAdjusted_ = input.readMessage(demetra.sa.io.protobuf.SaProtos.Component.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(seasonallyAdjusted_);
                seasonallyAdjusted_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              demetra.sa.io.protobuf.SaProtos.Component.Builder subBuilder = null;
              if (trend_ != null) {
                subBuilder = trend_.toBuilder();
              }
              trend_ = input.readMessage(demetra.sa.io.protobuf.SaProtos.Component.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trend_);
                trend_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              demetra.sa.io.protobuf.SaProtos.Component.Builder subBuilder = null;
              if (seasonal_ != null) {
                subBuilder = seasonal_.toBuilder();
              }
              seasonal_ = input.readMessage(demetra.sa.io.protobuf.SaProtos.Component.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(seasonal_);
                seasonal_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              demetra.sa.io.protobuf.SaProtos.Component.Builder subBuilder = null;
              if (irregular_ != null) {
                subBuilder = irregular_.toBuilder();
              }
              irregular_ = input.readMessage(demetra.sa.io.protobuf.SaProtos.Component.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(irregular_);
                irregular_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return demetra.sa.io.protobuf.SaProtos.internal_static_sa_SaDecomposition_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return demetra.sa.io.protobuf.SaProtos.internal_static_sa_SaDecomposition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              demetra.sa.io.protobuf.SaProtos.SaDecomposition.class, demetra.sa.io.protobuf.SaProtos.SaDecomposition.Builder.class);
    }

    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_;
    /**
     * <code>.sa.DecompositionMode mode = 1;</code>
     * @return The enum numeric value on the wire for mode.
     */
    @java.lang.Override public int getModeValue() {
      return mode_;
    }
    /**
     * <code>.sa.DecompositionMode mode = 1;</code>
     * @return The mode.
     */
    @java.lang.Override public demetra.sa.io.protobuf.SaProtos.DecompositionMode getMode() {
      @SuppressWarnings("deprecation")
      demetra.sa.io.protobuf.SaProtos.DecompositionMode result = demetra.sa.io.protobuf.SaProtos.DecompositionMode.valueOf(mode_);
      return result == null ? demetra.sa.io.protobuf.SaProtos.DecompositionMode.UNRECOGNIZED : result;
    }

    public static final int SERIES_FIELD_NUMBER = 2;
    private demetra.sa.io.protobuf.SaProtos.Component series_;
    /**
     * <code>.sa.Component series = 2;</code>
     * @return Whether the series field is set.
     */
    @java.lang.Override
    public boolean hasSeries() {
      return series_ != null;
    }
    /**
     * <code>.sa.Component series = 2;</code>
     * @return The series.
     */
    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.Component getSeries() {
      return series_ == null ? demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance() : series_;
    }
    /**
     * <code>.sa.Component series = 2;</code>
     */
    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder getSeriesOrBuilder() {
      return getSeries();
    }

    public static final int SEASONALLY_ADJUSTED_FIELD_NUMBER = 3;
    private demetra.sa.io.protobuf.SaProtos.Component seasonallyAdjusted_;
    /**
     * <code>.sa.Component seasonally_adjusted = 3;</code>
     * @return Whether the seasonallyAdjusted field is set.
     */
    @java.lang.Override
    public boolean hasSeasonallyAdjusted() {
      return seasonallyAdjusted_ != null;
    }
    /**
     * <code>.sa.Component seasonally_adjusted = 3;</code>
     * @return The seasonallyAdjusted.
     */
    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.Component getSeasonallyAdjusted() {
      return seasonallyAdjusted_ == null ? demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance() : seasonallyAdjusted_;
    }
    /**
     * <code>.sa.Component seasonally_adjusted = 3;</code>
     */
    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder getSeasonallyAdjustedOrBuilder() {
      return getSeasonallyAdjusted();
    }

    public static final int TREND_FIELD_NUMBER = 4;
    private demetra.sa.io.protobuf.SaProtos.Component trend_;
    /**
     * <code>.sa.Component trend = 4;</code>
     * @return Whether the trend field is set.
     */
    @java.lang.Override
    public boolean hasTrend() {
      return trend_ != null;
    }
    /**
     * <code>.sa.Component trend = 4;</code>
     * @return The trend.
     */
    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.Component getTrend() {
      return trend_ == null ? demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance() : trend_;
    }
    /**
     * <code>.sa.Component trend = 4;</code>
     */
    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder getTrendOrBuilder() {
      return getTrend();
    }

    public static final int SEASONAL_FIELD_NUMBER = 5;
    private demetra.sa.io.protobuf.SaProtos.Component seasonal_;
    /**
     * <code>.sa.Component seasonal = 5;</code>
     * @return Whether the seasonal field is set.
     */
    @java.lang.Override
    public boolean hasSeasonal() {
      return seasonal_ != null;
    }
    /**
     * <code>.sa.Component seasonal = 5;</code>
     * @return The seasonal.
     */
    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.Component getSeasonal() {
      return seasonal_ == null ? demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance() : seasonal_;
    }
    /**
     * <code>.sa.Component seasonal = 5;</code>
     */
    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder getSeasonalOrBuilder() {
      return getSeasonal();
    }

    public static final int IRREGULAR_FIELD_NUMBER = 6;
    private demetra.sa.io.protobuf.SaProtos.Component irregular_;
    /**
     * <code>.sa.Component irregular = 6;</code>
     * @return Whether the irregular field is set.
     */
    @java.lang.Override
    public boolean hasIrregular() {
      return irregular_ != null;
    }
    /**
     * <code>.sa.Component irregular = 6;</code>
     * @return The irregular.
     */
    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.Component getIrregular() {
      return irregular_ == null ? demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance() : irregular_;
    }
    /**
     * <code>.sa.Component irregular = 6;</code>
     */
    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder getIrregularOrBuilder() {
      return getIrregular();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mode_ != demetra.sa.io.protobuf.SaProtos.DecompositionMode.UNKNOWN.getNumber()) {
        output.writeEnum(1, mode_);
      }
      if (series_ != null) {
        output.writeMessage(2, getSeries());
      }
      if (seasonallyAdjusted_ != null) {
        output.writeMessage(3, getSeasonallyAdjusted());
      }
      if (trend_ != null) {
        output.writeMessage(4, getTrend());
      }
      if (seasonal_ != null) {
        output.writeMessage(5, getSeasonal());
      }
      if (irregular_ != null) {
        output.writeMessage(6, getIrregular());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mode_ != demetra.sa.io.protobuf.SaProtos.DecompositionMode.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mode_);
      }
      if (series_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSeries());
      }
      if (seasonallyAdjusted_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSeasonallyAdjusted());
      }
      if (trend_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTrend());
      }
      if (seasonal_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSeasonal());
      }
      if (irregular_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getIrregular());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof demetra.sa.io.protobuf.SaProtos.SaDecomposition)) {
        return super.equals(obj);
      }
      demetra.sa.io.protobuf.SaProtos.SaDecomposition other = (demetra.sa.io.protobuf.SaProtos.SaDecomposition) obj;

      if (mode_ != other.mode_) return false;
      if (hasSeries() != other.hasSeries()) return false;
      if (hasSeries()) {
        if (!getSeries()
            .equals(other.getSeries())) return false;
      }
      if (hasSeasonallyAdjusted() != other.hasSeasonallyAdjusted()) return false;
      if (hasSeasonallyAdjusted()) {
        if (!getSeasonallyAdjusted()
            .equals(other.getSeasonallyAdjusted())) return false;
      }
      if (hasTrend() != other.hasTrend()) return false;
      if (hasTrend()) {
        if (!getTrend()
            .equals(other.getTrend())) return false;
      }
      if (hasSeasonal() != other.hasSeasonal()) return false;
      if (hasSeasonal()) {
        if (!getSeasonal()
            .equals(other.getSeasonal())) return false;
      }
      if (hasIrregular() != other.hasIrregular()) return false;
      if (hasIrregular()) {
        if (!getIrregular()
            .equals(other.getIrregular())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + mode_;
      if (hasSeries()) {
        hash = (37 * hash) + SERIES_FIELD_NUMBER;
        hash = (53 * hash) + getSeries().hashCode();
      }
      if (hasSeasonallyAdjusted()) {
        hash = (37 * hash) + SEASONALLY_ADJUSTED_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonallyAdjusted().hashCode();
      }
      if (hasTrend()) {
        hash = (37 * hash) + TREND_FIELD_NUMBER;
        hash = (53 * hash) + getTrend().hashCode();
      }
      if (hasSeasonal()) {
        hash = (37 * hash) + SEASONAL_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonal().hashCode();
      }
      if (hasIrregular()) {
        hash = (37 * hash) + IRREGULAR_FIELD_NUMBER;
        hash = (53 * hash) + getIrregular().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static demetra.sa.io.protobuf.SaProtos.SaDecomposition parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.SaDecomposition parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.SaDecomposition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.SaDecomposition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.SaDecomposition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.SaDecomposition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.SaDecomposition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.SaDecomposition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.SaDecomposition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.SaDecomposition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.SaDecomposition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.SaDecomposition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(demetra.sa.io.protobuf.SaProtos.SaDecomposition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sa.SaDecomposition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sa.SaDecomposition)
        demetra.sa.io.protobuf.SaProtos.SaDecompositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_SaDecomposition_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_SaDecomposition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                demetra.sa.io.protobuf.SaProtos.SaDecomposition.class, demetra.sa.io.protobuf.SaProtos.SaDecomposition.Builder.class);
      }

      // Construct using demetra.sa.io.protobuf.SaProtos.SaDecomposition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        mode_ = 0;

        if (seriesBuilder_ == null) {
          series_ = null;
        } else {
          series_ = null;
          seriesBuilder_ = null;
        }
        if (seasonallyAdjustedBuilder_ == null) {
          seasonallyAdjusted_ = null;
        } else {
          seasonallyAdjusted_ = null;
          seasonallyAdjustedBuilder_ = null;
        }
        if (trendBuilder_ == null) {
          trend_ = null;
        } else {
          trend_ = null;
          trendBuilder_ = null;
        }
        if (seasonalBuilder_ == null) {
          seasonal_ = null;
        } else {
          seasonal_ = null;
          seasonalBuilder_ = null;
        }
        if (irregularBuilder_ == null) {
          irregular_ = null;
        } else {
          irregular_ = null;
          irregularBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_SaDecomposition_descriptor;
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.SaDecomposition getDefaultInstanceForType() {
        return demetra.sa.io.protobuf.SaProtos.SaDecomposition.getDefaultInstance();
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.SaDecomposition build() {
        demetra.sa.io.protobuf.SaProtos.SaDecomposition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.SaDecomposition buildPartial() {
        demetra.sa.io.protobuf.SaProtos.SaDecomposition result = new demetra.sa.io.protobuf.SaProtos.SaDecomposition(this);
        result.mode_ = mode_;
        if (seriesBuilder_ == null) {
          result.series_ = series_;
        } else {
          result.series_ = seriesBuilder_.build();
        }
        if (seasonallyAdjustedBuilder_ == null) {
          result.seasonallyAdjusted_ = seasonallyAdjusted_;
        } else {
          result.seasonallyAdjusted_ = seasonallyAdjustedBuilder_.build();
        }
        if (trendBuilder_ == null) {
          result.trend_ = trend_;
        } else {
          result.trend_ = trendBuilder_.build();
        }
        if (seasonalBuilder_ == null) {
          result.seasonal_ = seasonal_;
        } else {
          result.seasonal_ = seasonalBuilder_.build();
        }
        if (irregularBuilder_ == null) {
          result.irregular_ = irregular_;
        } else {
          result.irregular_ = irregularBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof demetra.sa.io.protobuf.SaProtos.SaDecomposition) {
          return mergeFrom((demetra.sa.io.protobuf.SaProtos.SaDecomposition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(demetra.sa.io.protobuf.SaProtos.SaDecomposition other) {
        if (other == demetra.sa.io.protobuf.SaProtos.SaDecomposition.getDefaultInstance()) return this;
        if (other.mode_ != 0) {
          setModeValue(other.getModeValue());
        }
        if (other.hasSeries()) {
          mergeSeries(other.getSeries());
        }
        if (other.hasSeasonallyAdjusted()) {
          mergeSeasonallyAdjusted(other.getSeasonallyAdjusted());
        }
        if (other.hasTrend()) {
          mergeTrend(other.getTrend());
        }
        if (other.hasSeasonal()) {
          mergeSeasonal(other.getSeasonal());
        }
        if (other.hasIrregular()) {
          mergeIrregular(other.getIrregular());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        demetra.sa.io.protobuf.SaProtos.SaDecomposition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (demetra.sa.io.protobuf.SaProtos.SaDecomposition) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int mode_ = 0;
      /**
       * <code>.sa.DecompositionMode mode = 1;</code>
       * @return The enum numeric value on the wire for mode.
       */
      @java.lang.Override public int getModeValue() {
        return mode_;
      }
      /**
       * <code>.sa.DecompositionMode mode = 1;</code>
       * @param value The enum numeric value on the wire for mode to set.
       * @return This builder for chaining.
       */
      public Builder setModeValue(int value) {
        
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.sa.DecompositionMode mode = 1;</code>
       * @return The mode.
       */
      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.DecompositionMode getMode() {
        @SuppressWarnings("deprecation")
        demetra.sa.io.protobuf.SaProtos.DecompositionMode result = demetra.sa.io.protobuf.SaProtos.DecompositionMode.valueOf(mode_);
        return result == null ? demetra.sa.io.protobuf.SaProtos.DecompositionMode.UNRECOGNIZED : result;
      }
      /**
       * <code>.sa.DecompositionMode mode = 1;</code>
       * @param value The mode to set.
       * @return This builder for chaining.
       */
      public Builder setMode(demetra.sa.io.protobuf.SaProtos.DecompositionMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        mode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.sa.DecompositionMode mode = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMode() {
        
        mode_ = 0;
        onChanged();
        return this;
      }

      private demetra.sa.io.protobuf.SaProtos.Component series_;
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.sa.io.protobuf.SaProtos.Component, demetra.sa.io.protobuf.SaProtos.Component.Builder, demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder> seriesBuilder_;
      /**
       * <code>.sa.Component series = 2;</code>
       * @return Whether the series field is set.
       */
      public boolean hasSeries() {
        return seriesBuilder_ != null || series_ != null;
      }
      /**
       * <code>.sa.Component series = 2;</code>
       * @return The series.
       */
      public demetra.sa.io.protobuf.SaProtos.Component getSeries() {
        if (seriesBuilder_ == null) {
          return series_ == null ? demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance() : series_;
        } else {
          return seriesBuilder_.getMessage();
        }
      }
      /**
       * <code>.sa.Component series = 2;</code>
       */
      public Builder setSeries(demetra.sa.io.protobuf.SaProtos.Component value) {
        if (seriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          series_ = value;
          onChanged();
        } else {
          seriesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.sa.Component series = 2;</code>
       */
      public Builder setSeries(
          demetra.sa.io.protobuf.SaProtos.Component.Builder builderForValue) {
        if (seriesBuilder_ == null) {
          series_ = builderForValue.build();
          onChanged();
        } else {
          seriesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.sa.Component series = 2;</code>
       */
      public Builder mergeSeries(demetra.sa.io.protobuf.SaProtos.Component value) {
        if (seriesBuilder_ == null) {
          if (series_ != null) {
            series_ =
              demetra.sa.io.protobuf.SaProtos.Component.newBuilder(series_).mergeFrom(value).buildPartial();
          } else {
            series_ = value;
          }
          onChanged();
        } else {
          seriesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.sa.Component series = 2;</code>
       */
      public Builder clearSeries() {
        if (seriesBuilder_ == null) {
          series_ = null;
          onChanged();
        } else {
          series_ = null;
          seriesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.sa.Component series = 2;</code>
       */
      public demetra.sa.io.protobuf.SaProtos.Component.Builder getSeriesBuilder() {
        
        onChanged();
        return getSeriesFieldBuilder().getBuilder();
      }
      /**
       * <code>.sa.Component series = 2;</code>
       */
      public demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder getSeriesOrBuilder() {
        if (seriesBuilder_ != null) {
          return seriesBuilder_.getMessageOrBuilder();
        } else {
          return series_ == null ?
              demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance() : series_;
        }
      }
      /**
       * <code>.sa.Component series = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.sa.io.protobuf.SaProtos.Component, demetra.sa.io.protobuf.SaProtos.Component.Builder, demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder> 
          getSeriesFieldBuilder() {
        if (seriesBuilder_ == null) {
          seriesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              demetra.sa.io.protobuf.SaProtos.Component, demetra.sa.io.protobuf.SaProtos.Component.Builder, demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder>(
                  getSeries(),
                  getParentForChildren(),
                  isClean());
          series_ = null;
        }
        return seriesBuilder_;
      }

      private demetra.sa.io.protobuf.SaProtos.Component seasonallyAdjusted_;
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.sa.io.protobuf.SaProtos.Component, demetra.sa.io.protobuf.SaProtos.Component.Builder, demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder> seasonallyAdjustedBuilder_;
      /**
       * <code>.sa.Component seasonally_adjusted = 3;</code>
       * @return Whether the seasonallyAdjusted field is set.
       */
      public boolean hasSeasonallyAdjusted() {
        return seasonallyAdjustedBuilder_ != null || seasonallyAdjusted_ != null;
      }
      /**
       * <code>.sa.Component seasonally_adjusted = 3;</code>
       * @return The seasonallyAdjusted.
       */
      public demetra.sa.io.protobuf.SaProtos.Component getSeasonallyAdjusted() {
        if (seasonallyAdjustedBuilder_ == null) {
          return seasonallyAdjusted_ == null ? demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance() : seasonallyAdjusted_;
        } else {
          return seasonallyAdjustedBuilder_.getMessage();
        }
      }
      /**
       * <code>.sa.Component seasonally_adjusted = 3;</code>
       */
      public Builder setSeasonallyAdjusted(demetra.sa.io.protobuf.SaProtos.Component value) {
        if (seasonallyAdjustedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          seasonallyAdjusted_ = value;
          onChanged();
        } else {
          seasonallyAdjustedBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.sa.Component seasonally_adjusted = 3;</code>
       */
      public Builder setSeasonallyAdjusted(
          demetra.sa.io.protobuf.SaProtos.Component.Builder builderForValue) {
        if (seasonallyAdjustedBuilder_ == null) {
          seasonallyAdjusted_ = builderForValue.build();
          onChanged();
        } else {
          seasonallyAdjustedBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.sa.Component seasonally_adjusted = 3;</code>
       */
      public Builder mergeSeasonallyAdjusted(demetra.sa.io.protobuf.SaProtos.Component value) {
        if (seasonallyAdjustedBuilder_ == null) {
          if (seasonallyAdjusted_ != null) {
            seasonallyAdjusted_ =
              demetra.sa.io.protobuf.SaProtos.Component.newBuilder(seasonallyAdjusted_).mergeFrom(value).buildPartial();
          } else {
            seasonallyAdjusted_ = value;
          }
          onChanged();
        } else {
          seasonallyAdjustedBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.sa.Component seasonally_adjusted = 3;</code>
       */
      public Builder clearSeasonallyAdjusted() {
        if (seasonallyAdjustedBuilder_ == null) {
          seasonallyAdjusted_ = null;
          onChanged();
        } else {
          seasonallyAdjusted_ = null;
          seasonallyAdjustedBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.sa.Component seasonally_adjusted = 3;</code>
       */
      public demetra.sa.io.protobuf.SaProtos.Component.Builder getSeasonallyAdjustedBuilder() {
        
        onChanged();
        return getSeasonallyAdjustedFieldBuilder().getBuilder();
      }
      /**
       * <code>.sa.Component seasonally_adjusted = 3;</code>
       */
      public demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder getSeasonallyAdjustedOrBuilder() {
        if (seasonallyAdjustedBuilder_ != null) {
          return seasonallyAdjustedBuilder_.getMessageOrBuilder();
        } else {
          return seasonallyAdjusted_ == null ?
              demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance() : seasonallyAdjusted_;
        }
      }
      /**
       * <code>.sa.Component seasonally_adjusted = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.sa.io.protobuf.SaProtos.Component, demetra.sa.io.protobuf.SaProtos.Component.Builder, demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder> 
          getSeasonallyAdjustedFieldBuilder() {
        if (seasonallyAdjustedBuilder_ == null) {
          seasonallyAdjustedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              demetra.sa.io.protobuf.SaProtos.Component, demetra.sa.io.protobuf.SaProtos.Component.Builder, demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder>(
                  getSeasonallyAdjusted(),
                  getParentForChildren(),
                  isClean());
          seasonallyAdjusted_ = null;
        }
        return seasonallyAdjustedBuilder_;
      }

      private demetra.sa.io.protobuf.SaProtos.Component trend_;
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.sa.io.protobuf.SaProtos.Component, demetra.sa.io.protobuf.SaProtos.Component.Builder, demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder> trendBuilder_;
      /**
       * <code>.sa.Component trend = 4;</code>
       * @return Whether the trend field is set.
       */
      public boolean hasTrend() {
        return trendBuilder_ != null || trend_ != null;
      }
      /**
       * <code>.sa.Component trend = 4;</code>
       * @return The trend.
       */
      public demetra.sa.io.protobuf.SaProtos.Component getTrend() {
        if (trendBuilder_ == null) {
          return trend_ == null ? demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance() : trend_;
        } else {
          return trendBuilder_.getMessage();
        }
      }
      /**
       * <code>.sa.Component trend = 4;</code>
       */
      public Builder setTrend(demetra.sa.io.protobuf.SaProtos.Component value) {
        if (trendBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trend_ = value;
          onChanged();
        } else {
          trendBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.sa.Component trend = 4;</code>
       */
      public Builder setTrend(
          demetra.sa.io.protobuf.SaProtos.Component.Builder builderForValue) {
        if (trendBuilder_ == null) {
          trend_ = builderForValue.build();
          onChanged();
        } else {
          trendBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.sa.Component trend = 4;</code>
       */
      public Builder mergeTrend(demetra.sa.io.protobuf.SaProtos.Component value) {
        if (trendBuilder_ == null) {
          if (trend_ != null) {
            trend_ =
              demetra.sa.io.protobuf.SaProtos.Component.newBuilder(trend_).mergeFrom(value).buildPartial();
          } else {
            trend_ = value;
          }
          onChanged();
        } else {
          trendBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.sa.Component trend = 4;</code>
       */
      public Builder clearTrend() {
        if (trendBuilder_ == null) {
          trend_ = null;
          onChanged();
        } else {
          trend_ = null;
          trendBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.sa.Component trend = 4;</code>
       */
      public demetra.sa.io.protobuf.SaProtos.Component.Builder getTrendBuilder() {
        
        onChanged();
        return getTrendFieldBuilder().getBuilder();
      }
      /**
       * <code>.sa.Component trend = 4;</code>
       */
      public demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder getTrendOrBuilder() {
        if (trendBuilder_ != null) {
          return trendBuilder_.getMessageOrBuilder();
        } else {
          return trend_ == null ?
              demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance() : trend_;
        }
      }
      /**
       * <code>.sa.Component trend = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.sa.io.protobuf.SaProtos.Component, demetra.sa.io.protobuf.SaProtos.Component.Builder, demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder> 
          getTrendFieldBuilder() {
        if (trendBuilder_ == null) {
          trendBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              demetra.sa.io.protobuf.SaProtos.Component, demetra.sa.io.protobuf.SaProtos.Component.Builder, demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder>(
                  getTrend(),
                  getParentForChildren(),
                  isClean());
          trend_ = null;
        }
        return trendBuilder_;
      }

      private demetra.sa.io.protobuf.SaProtos.Component seasonal_;
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.sa.io.protobuf.SaProtos.Component, demetra.sa.io.protobuf.SaProtos.Component.Builder, demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder> seasonalBuilder_;
      /**
       * <code>.sa.Component seasonal = 5;</code>
       * @return Whether the seasonal field is set.
       */
      public boolean hasSeasonal() {
        return seasonalBuilder_ != null || seasonal_ != null;
      }
      /**
       * <code>.sa.Component seasonal = 5;</code>
       * @return The seasonal.
       */
      public demetra.sa.io.protobuf.SaProtos.Component getSeasonal() {
        if (seasonalBuilder_ == null) {
          return seasonal_ == null ? demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance() : seasonal_;
        } else {
          return seasonalBuilder_.getMessage();
        }
      }
      /**
       * <code>.sa.Component seasonal = 5;</code>
       */
      public Builder setSeasonal(demetra.sa.io.protobuf.SaProtos.Component value) {
        if (seasonalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          seasonal_ = value;
          onChanged();
        } else {
          seasonalBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.sa.Component seasonal = 5;</code>
       */
      public Builder setSeasonal(
          demetra.sa.io.protobuf.SaProtos.Component.Builder builderForValue) {
        if (seasonalBuilder_ == null) {
          seasonal_ = builderForValue.build();
          onChanged();
        } else {
          seasonalBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.sa.Component seasonal = 5;</code>
       */
      public Builder mergeSeasonal(demetra.sa.io.protobuf.SaProtos.Component value) {
        if (seasonalBuilder_ == null) {
          if (seasonal_ != null) {
            seasonal_ =
              demetra.sa.io.protobuf.SaProtos.Component.newBuilder(seasonal_).mergeFrom(value).buildPartial();
          } else {
            seasonal_ = value;
          }
          onChanged();
        } else {
          seasonalBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.sa.Component seasonal = 5;</code>
       */
      public Builder clearSeasonal() {
        if (seasonalBuilder_ == null) {
          seasonal_ = null;
          onChanged();
        } else {
          seasonal_ = null;
          seasonalBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.sa.Component seasonal = 5;</code>
       */
      public demetra.sa.io.protobuf.SaProtos.Component.Builder getSeasonalBuilder() {
        
        onChanged();
        return getSeasonalFieldBuilder().getBuilder();
      }
      /**
       * <code>.sa.Component seasonal = 5;</code>
       */
      public demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder getSeasonalOrBuilder() {
        if (seasonalBuilder_ != null) {
          return seasonalBuilder_.getMessageOrBuilder();
        } else {
          return seasonal_ == null ?
              demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance() : seasonal_;
        }
      }
      /**
       * <code>.sa.Component seasonal = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.sa.io.protobuf.SaProtos.Component, demetra.sa.io.protobuf.SaProtos.Component.Builder, demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder> 
          getSeasonalFieldBuilder() {
        if (seasonalBuilder_ == null) {
          seasonalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              demetra.sa.io.protobuf.SaProtos.Component, demetra.sa.io.protobuf.SaProtos.Component.Builder, demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder>(
                  getSeasonal(),
                  getParentForChildren(),
                  isClean());
          seasonal_ = null;
        }
        return seasonalBuilder_;
      }

      private demetra.sa.io.protobuf.SaProtos.Component irregular_;
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.sa.io.protobuf.SaProtos.Component, demetra.sa.io.protobuf.SaProtos.Component.Builder, demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder> irregularBuilder_;
      /**
       * <code>.sa.Component irregular = 6;</code>
       * @return Whether the irregular field is set.
       */
      public boolean hasIrregular() {
        return irregularBuilder_ != null || irregular_ != null;
      }
      /**
       * <code>.sa.Component irregular = 6;</code>
       * @return The irregular.
       */
      public demetra.sa.io.protobuf.SaProtos.Component getIrregular() {
        if (irregularBuilder_ == null) {
          return irregular_ == null ? demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance() : irregular_;
        } else {
          return irregularBuilder_.getMessage();
        }
      }
      /**
       * <code>.sa.Component irregular = 6;</code>
       */
      public Builder setIrregular(demetra.sa.io.protobuf.SaProtos.Component value) {
        if (irregularBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          irregular_ = value;
          onChanged();
        } else {
          irregularBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.sa.Component irregular = 6;</code>
       */
      public Builder setIrregular(
          demetra.sa.io.protobuf.SaProtos.Component.Builder builderForValue) {
        if (irregularBuilder_ == null) {
          irregular_ = builderForValue.build();
          onChanged();
        } else {
          irregularBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.sa.Component irregular = 6;</code>
       */
      public Builder mergeIrregular(demetra.sa.io.protobuf.SaProtos.Component value) {
        if (irregularBuilder_ == null) {
          if (irregular_ != null) {
            irregular_ =
              demetra.sa.io.protobuf.SaProtos.Component.newBuilder(irregular_).mergeFrom(value).buildPartial();
          } else {
            irregular_ = value;
          }
          onChanged();
        } else {
          irregularBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.sa.Component irregular = 6;</code>
       */
      public Builder clearIrregular() {
        if (irregularBuilder_ == null) {
          irregular_ = null;
          onChanged();
        } else {
          irregular_ = null;
          irregularBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.sa.Component irregular = 6;</code>
       */
      public demetra.sa.io.protobuf.SaProtos.Component.Builder getIrregularBuilder() {
        
        onChanged();
        return getIrregularFieldBuilder().getBuilder();
      }
      /**
       * <code>.sa.Component irregular = 6;</code>
       */
      public demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder getIrregularOrBuilder() {
        if (irregularBuilder_ != null) {
          return irregularBuilder_.getMessageOrBuilder();
        } else {
          return irregular_ == null ?
              demetra.sa.io.protobuf.SaProtos.Component.getDefaultInstance() : irregular_;
        }
      }
      /**
       * <code>.sa.Component irregular = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.sa.io.protobuf.SaProtos.Component, demetra.sa.io.protobuf.SaProtos.Component.Builder, demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder> 
          getIrregularFieldBuilder() {
        if (irregularBuilder_ == null) {
          irregularBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              demetra.sa.io.protobuf.SaProtos.Component, demetra.sa.io.protobuf.SaProtos.Component.Builder, demetra.sa.io.protobuf.SaProtos.ComponentOrBuilder>(
                  getIrregular(),
                  getParentForChildren(),
                  isClean());
          irregular_ = null;
        }
        return irregularBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sa.SaDecomposition)
    }

    // @@protoc_insertion_point(class_scope:sa.SaDecomposition)
    private static final demetra.sa.io.protobuf.SaProtos.SaDecomposition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new demetra.sa.io.protobuf.SaProtos.SaDecomposition();
    }

    public static demetra.sa.io.protobuf.SaProtos.SaDecomposition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SaDecomposition>
        PARSER = new com.google.protobuf.AbstractParser<SaDecomposition>() {
      @java.lang.Override
      public SaDecomposition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SaDecomposition(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SaDecomposition> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SaDecomposition> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.SaDecomposition getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BenchmarkingSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sa.BenchmarkingSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool enabled = 1;</code>
     * @return The enabled.
     */
    boolean getEnabled();

    /**
     * <code>.sa.BenchmarkingTarget target = 2;</code>
     * @return The enum numeric value on the wire for target.
     */
    int getTargetValue();
    /**
     * <code>.sa.BenchmarkingTarget target = 2;</code>
     * @return The target.
     */
    demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget getTarget();

    /**
     * <code>double lambda = 3;</code>
     * @return The lambda.
     */
    double getLambda();

    /**
     * <code>double rho = 4;</code>
     * @return The rho.
     */
    double getRho();

    /**
     * <code>.sa.BenchmarkingBias bias = 5;</code>
     * @return The enum numeric value on the wire for bias.
     */
    int getBiasValue();
    /**
     * <code>.sa.BenchmarkingBias bias = 5;</code>
     * @return The bias.
     */
    demetra.sa.io.protobuf.SaProtos.BenchmarkingBias getBias();

    /**
     * <code>bool forecast = 6;</code>
     * @return The forecast.
     */
    boolean getForecast();
  }
  /**
   * Protobuf type {@code sa.BenchmarkingSpec}
   */
  public static final class BenchmarkingSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sa.BenchmarkingSpec)
      BenchmarkingSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BenchmarkingSpec.newBuilder() to construct.
    private BenchmarkingSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BenchmarkingSpec() {
      target_ = 0;
      bias_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BenchmarkingSpec();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BenchmarkingSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              enabled_ = input.readBool();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              target_ = rawValue;
              break;
            }
            case 25: {

              lambda_ = input.readDouble();
              break;
            }
            case 33: {

              rho_ = input.readDouble();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              bias_ = rawValue;
              break;
            }
            case 48: {

              forecast_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return demetra.sa.io.protobuf.SaProtos.internal_static_sa_BenchmarkingSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return demetra.sa.io.protobuf.SaProtos.internal_static_sa_BenchmarkingSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec.class, demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec.Builder.class);
    }

    public static final int ENABLED_FIELD_NUMBER = 1;
    private boolean enabled_;
    /**
     * <code>bool enabled = 1;</code>
     * @return The enabled.
     */
    @java.lang.Override
    public boolean getEnabled() {
      return enabled_;
    }

    public static final int TARGET_FIELD_NUMBER = 2;
    private int target_;
    /**
     * <code>.sa.BenchmarkingTarget target = 2;</code>
     * @return The enum numeric value on the wire for target.
     */
    @java.lang.Override public int getTargetValue() {
      return target_;
    }
    /**
     * <code>.sa.BenchmarkingTarget target = 2;</code>
     * @return The target.
     */
    @java.lang.Override public demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget getTarget() {
      @SuppressWarnings("deprecation")
      demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget result = demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget.valueOf(target_);
      return result == null ? demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget.UNRECOGNIZED : result;
    }

    public static final int LAMBDA_FIELD_NUMBER = 3;
    private double lambda_;
    /**
     * <code>double lambda = 3;</code>
     * @return The lambda.
     */
    @java.lang.Override
    public double getLambda() {
      return lambda_;
    }

    public static final int RHO_FIELD_NUMBER = 4;
    private double rho_;
    /**
     * <code>double rho = 4;</code>
     * @return The rho.
     */
    @java.lang.Override
    public double getRho() {
      return rho_;
    }

    public static final int BIAS_FIELD_NUMBER = 5;
    private int bias_;
    /**
     * <code>.sa.BenchmarkingBias bias = 5;</code>
     * @return The enum numeric value on the wire for bias.
     */
    @java.lang.Override public int getBiasValue() {
      return bias_;
    }
    /**
     * <code>.sa.BenchmarkingBias bias = 5;</code>
     * @return The bias.
     */
    @java.lang.Override public demetra.sa.io.protobuf.SaProtos.BenchmarkingBias getBias() {
      @SuppressWarnings("deprecation")
      demetra.sa.io.protobuf.SaProtos.BenchmarkingBias result = demetra.sa.io.protobuf.SaProtos.BenchmarkingBias.valueOf(bias_);
      return result == null ? demetra.sa.io.protobuf.SaProtos.BenchmarkingBias.UNRECOGNIZED : result;
    }

    public static final int FORECAST_FIELD_NUMBER = 6;
    private boolean forecast_;
    /**
     * <code>bool forecast = 6;</code>
     * @return The forecast.
     */
    @java.lang.Override
    public boolean getForecast() {
      return forecast_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (enabled_ != false) {
        output.writeBool(1, enabled_);
      }
      if (target_ != demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget.BENCH_TARGET_UNSPECIFIED.getNumber()) {
        output.writeEnum(2, target_);
      }
      if (lambda_ != 0D) {
        output.writeDouble(3, lambda_);
      }
      if (rho_ != 0D) {
        output.writeDouble(4, rho_);
      }
      if (bias_ != demetra.sa.io.protobuf.SaProtos.BenchmarkingBias.BENCH_BIAS_UNSPECIFIED.getNumber()) {
        output.writeEnum(5, bias_);
      }
      if (forecast_ != false) {
        output.writeBool(6, forecast_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (enabled_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, enabled_);
      }
      if (target_ != demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget.BENCH_TARGET_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, target_);
      }
      if (lambda_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, lambda_);
      }
      if (rho_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, rho_);
      }
      if (bias_ != demetra.sa.io.protobuf.SaProtos.BenchmarkingBias.BENCH_BIAS_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, bias_);
      }
      if (forecast_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, forecast_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec)) {
        return super.equals(obj);
      }
      demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec other = (demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec) obj;

      if (getEnabled()
          != other.getEnabled()) return false;
      if (target_ != other.target_) return false;
      if (java.lang.Double.doubleToLongBits(getLambda())
          != java.lang.Double.doubleToLongBits(
              other.getLambda())) return false;
      if (java.lang.Double.doubleToLongBits(getRho())
          != java.lang.Double.doubleToLongBits(
              other.getRho())) return false;
      if (bias_ != other.bias_) return false;
      if (getForecast()
          != other.getForecast()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnabled());
      hash = (37 * hash) + TARGET_FIELD_NUMBER;
      hash = (53 * hash) + target_;
      hash = (37 * hash) + LAMBDA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLambda()));
      hash = (37 * hash) + RHO_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getRho()));
      hash = (37 * hash) + BIAS_FIELD_NUMBER;
      hash = (53 * hash) + bias_;
      hash = (37 * hash) + FORECAST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getForecast());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sa.BenchmarkingSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sa.BenchmarkingSpec)
        demetra.sa.io.protobuf.SaProtos.BenchmarkingSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_BenchmarkingSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_BenchmarkingSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec.class, demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec.Builder.class);
      }

      // Construct using demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        enabled_ = false;

        target_ = 0;

        lambda_ = 0D;

        rho_ = 0D;

        bias_ = 0;

        forecast_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_BenchmarkingSpec_descriptor;
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec getDefaultInstanceForType() {
        return demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec.getDefaultInstance();
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec build() {
        demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec buildPartial() {
        demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec result = new demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec(this);
        result.enabled_ = enabled_;
        result.target_ = target_;
        result.lambda_ = lambda_;
        result.rho_ = rho_;
        result.bias_ = bias_;
        result.forecast_ = forecast_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec) {
          return mergeFrom((demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec other) {
        if (other == demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec.getDefaultInstance()) return this;
        if (other.getEnabled() != false) {
          setEnabled(other.getEnabled());
        }
        if (other.target_ != 0) {
          setTargetValue(other.getTargetValue());
        }
        if (other.getLambda() != 0D) {
          setLambda(other.getLambda());
        }
        if (other.getRho() != 0D) {
          setRho(other.getRho());
        }
        if (other.bias_ != 0) {
          setBiasValue(other.getBiasValue());
        }
        if (other.getForecast() != false) {
          setForecast(other.getForecast());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean enabled_ ;
      /**
       * <code>bool enabled = 1;</code>
       * @return The enabled.
       */
      @java.lang.Override
      public boolean getEnabled() {
        return enabled_;
      }
      /**
       * <code>bool enabled = 1;</code>
       * @param value The enabled to set.
       * @return This builder for chaining.
       */
      public Builder setEnabled(boolean value) {
        
        enabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool enabled = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnabled() {
        
        enabled_ = false;
        onChanged();
        return this;
      }

      private int target_ = 0;
      /**
       * <code>.sa.BenchmarkingTarget target = 2;</code>
       * @return The enum numeric value on the wire for target.
       */
      @java.lang.Override public int getTargetValue() {
        return target_;
      }
      /**
       * <code>.sa.BenchmarkingTarget target = 2;</code>
       * @param value The enum numeric value on the wire for target to set.
       * @return This builder for chaining.
       */
      public Builder setTargetValue(int value) {
        
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.sa.BenchmarkingTarget target = 2;</code>
       * @return The target.
       */
      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget getTarget() {
        @SuppressWarnings("deprecation")
        demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget result = demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget.valueOf(target_);
        return result == null ? demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget.UNRECOGNIZED : result;
      }
      /**
       * <code>.sa.BenchmarkingTarget target = 2;</code>
       * @param value The target to set.
       * @return This builder for chaining.
       */
      public Builder setTarget(demetra.sa.io.protobuf.SaProtos.BenchmarkingTarget value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        target_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.sa.BenchmarkingTarget target = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTarget() {
        
        target_ = 0;
        onChanged();
        return this;
      }

      private double lambda_ ;
      /**
       * <code>double lambda = 3;</code>
       * @return The lambda.
       */
      @java.lang.Override
      public double getLambda() {
        return lambda_;
      }
      /**
       * <code>double lambda = 3;</code>
       * @param value The lambda to set.
       * @return This builder for chaining.
       */
      public Builder setLambda(double value) {
        
        lambda_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double lambda = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLambda() {
        
        lambda_ = 0D;
        onChanged();
        return this;
      }

      private double rho_ ;
      /**
       * <code>double rho = 4;</code>
       * @return The rho.
       */
      @java.lang.Override
      public double getRho() {
        return rho_;
      }
      /**
       * <code>double rho = 4;</code>
       * @param value The rho to set.
       * @return This builder for chaining.
       */
      public Builder setRho(double value) {
        
        rho_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double rho = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRho() {
        
        rho_ = 0D;
        onChanged();
        return this;
      }

      private int bias_ = 0;
      /**
       * <code>.sa.BenchmarkingBias bias = 5;</code>
       * @return The enum numeric value on the wire for bias.
       */
      @java.lang.Override public int getBiasValue() {
        return bias_;
      }
      /**
       * <code>.sa.BenchmarkingBias bias = 5;</code>
       * @param value The enum numeric value on the wire for bias to set.
       * @return This builder for chaining.
       */
      public Builder setBiasValue(int value) {
        
        bias_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.sa.BenchmarkingBias bias = 5;</code>
       * @return The bias.
       */
      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.BenchmarkingBias getBias() {
        @SuppressWarnings("deprecation")
        demetra.sa.io.protobuf.SaProtos.BenchmarkingBias result = demetra.sa.io.protobuf.SaProtos.BenchmarkingBias.valueOf(bias_);
        return result == null ? demetra.sa.io.protobuf.SaProtos.BenchmarkingBias.UNRECOGNIZED : result;
      }
      /**
       * <code>.sa.BenchmarkingBias bias = 5;</code>
       * @param value The bias to set.
       * @return This builder for chaining.
       */
      public Builder setBias(demetra.sa.io.protobuf.SaProtos.BenchmarkingBias value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        bias_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.sa.BenchmarkingBias bias = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBias() {
        
        bias_ = 0;
        onChanged();
        return this;
      }

      private boolean forecast_ ;
      /**
       * <code>bool forecast = 6;</code>
       * @return The forecast.
       */
      @java.lang.Override
      public boolean getForecast() {
        return forecast_;
      }
      /**
       * <code>bool forecast = 6;</code>
       * @param value The forecast to set.
       * @return This builder for chaining.
       */
      public Builder setForecast(boolean value) {
        
        forecast_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool forecast = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearForecast() {
        
        forecast_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sa.BenchmarkingSpec)
    }

    // @@protoc_insertion_point(class_scope:sa.BenchmarkingSpec)
    private static final demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec();
    }

    public static demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BenchmarkingSpec>
        PARSER = new com.google.protobuf.AbstractParser<BenchmarkingSpec>() {
      @java.lang.Override
      public BenchmarkingSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BenchmarkingSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BenchmarkingSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BenchmarkingSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.BenchmarkingSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VarianceDecompositionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sa.VarianceDecomposition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double cycle = 1;</code>
     * @return The cycle.
     */
    double getCycle();

    /**
     * <code>double seasonal = 2;</code>
     * @return The seasonal.
     */
    double getSeasonal();

    /**
     * <code>double irregular = 3;</code>
     * @return The irregular.
     */
    double getIrregular();

    /**
     * <code>double calendar = 4;</code>
     * @return The calendar.
     */
    double getCalendar();

    /**
     * <code>double others = 5;</code>
     * @return The others.
     */
    double getOthers();

    /**
     * <code>double total = 6;</code>
     * @return The total.
     */
    double getTotal();
  }
  /**
   * Protobuf type {@code sa.VarianceDecomposition}
   */
  public static final class VarianceDecomposition extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sa.VarianceDecomposition)
      VarianceDecompositionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VarianceDecomposition.newBuilder() to construct.
    private VarianceDecomposition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VarianceDecomposition() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VarianceDecomposition();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VarianceDecomposition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              cycle_ = input.readDouble();
              break;
            }
            case 17: {

              seasonal_ = input.readDouble();
              break;
            }
            case 25: {

              irregular_ = input.readDouble();
              break;
            }
            case 33: {

              calendar_ = input.readDouble();
              break;
            }
            case 41: {

              others_ = input.readDouble();
              break;
            }
            case 49: {

              total_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return demetra.sa.io.protobuf.SaProtos.internal_static_sa_VarianceDecomposition_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return demetra.sa.io.protobuf.SaProtos.internal_static_sa_VarianceDecomposition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.class, demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.Builder.class);
    }

    public static final int CYCLE_FIELD_NUMBER = 1;
    private double cycle_;
    /**
     * <code>double cycle = 1;</code>
     * @return The cycle.
     */
    @java.lang.Override
    public double getCycle() {
      return cycle_;
    }

    public static final int SEASONAL_FIELD_NUMBER = 2;
    private double seasonal_;
    /**
     * <code>double seasonal = 2;</code>
     * @return The seasonal.
     */
    @java.lang.Override
    public double getSeasonal() {
      return seasonal_;
    }

    public static final int IRREGULAR_FIELD_NUMBER = 3;
    private double irregular_;
    /**
     * <code>double irregular = 3;</code>
     * @return The irregular.
     */
    @java.lang.Override
    public double getIrregular() {
      return irregular_;
    }

    public static final int CALENDAR_FIELD_NUMBER = 4;
    private double calendar_;
    /**
     * <code>double calendar = 4;</code>
     * @return The calendar.
     */
    @java.lang.Override
    public double getCalendar() {
      return calendar_;
    }

    public static final int OTHERS_FIELD_NUMBER = 5;
    private double others_;
    /**
     * <code>double others = 5;</code>
     * @return The others.
     */
    @java.lang.Override
    public double getOthers() {
      return others_;
    }

    public static final int TOTAL_FIELD_NUMBER = 6;
    private double total_;
    /**
     * <code>double total = 6;</code>
     * @return The total.
     */
    @java.lang.Override
    public double getTotal() {
      return total_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (cycle_ != 0D) {
        output.writeDouble(1, cycle_);
      }
      if (seasonal_ != 0D) {
        output.writeDouble(2, seasonal_);
      }
      if (irregular_ != 0D) {
        output.writeDouble(3, irregular_);
      }
      if (calendar_ != 0D) {
        output.writeDouble(4, calendar_);
      }
      if (others_ != 0D) {
        output.writeDouble(5, others_);
      }
      if (total_ != 0D) {
        output.writeDouble(6, total_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (cycle_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, cycle_);
      }
      if (seasonal_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, seasonal_);
      }
      if (irregular_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, irregular_);
      }
      if (calendar_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, calendar_);
      }
      if (others_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, others_);
      }
      if (total_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, total_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof demetra.sa.io.protobuf.SaProtos.VarianceDecomposition)) {
        return super.equals(obj);
      }
      demetra.sa.io.protobuf.SaProtos.VarianceDecomposition other = (demetra.sa.io.protobuf.SaProtos.VarianceDecomposition) obj;

      if (java.lang.Double.doubleToLongBits(getCycle())
          != java.lang.Double.doubleToLongBits(
              other.getCycle())) return false;
      if (java.lang.Double.doubleToLongBits(getSeasonal())
          != java.lang.Double.doubleToLongBits(
              other.getSeasonal())) return false;
      if (java.lang.Double.doubleToLongBits(getIrregular())
          != java.lang.Double.doubleToLongBits(
              other.getIrregular())) return false;
      if (java.lang.Double.doubleToLongBits(getCalendar())
          != java.lang.Double.doubleToLongBits(
              other.getCalendar())) return false;
      if (java.lang.Double.doubleToLongBits(getOthers())
          != java.lang.Double.doubleToLongBits(
              other.getOthers())) return false;
      if (java.lang.Double.doubleToLongBits(getTotal())
          != java.lang.Double.doubleToLongBits(
              other.getTotal())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CYCLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCycle()));
      hash = (37 * hash) + SEASONAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSeasonal()));
      hash = (37 * hash) + IRREGULAR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getIrregular()));
      hash = (37 * hash) + CALENDAR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCalendar()));
      hash = (37 * hash) + OTHERS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getOthers()));
      hash = (37 * hash) + TOTAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTotal()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static demetra.sa.io.protobuf.SaProtos.VarianceDecomposition parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.VarianceDecomposition parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.VarianceDecomposition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.VarianceDecomposition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.VarianceDecomposition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.VarianceDecomposition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.VarianceDecomposition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.VarianceDecomposition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.VarianceDecomposition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.VarianceDecomposition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.VarianceDecomposition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.VarianceDecomposition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(demetra.sa.io.protobuf.SaProtos.VarianceDecomposition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sa.VarianceDecomposition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sa.VarianceDecomposition)
        demetra.sa.io.protobuf.SaProtos.VarianceDecompositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_VarianceDecomposition_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_VarianceDecomposition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.class, demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.Builder.class);
      }

      // Construct using demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        cycle_ = 0D;

        seasonal_ = 0D;

        irregular_ = 0D;

        calendar_ = 0D;

        others_ = 0D;

        total_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_VarianceDecomposition_descriptor;
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.VarianceDecomposition getDefaultInstanceForType() {
        return demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.getDefaultInstance();
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.VarianceDecomposition build() {
        demetra.sa.io.protobuf.SaProtos.VarianceDecomposition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.VarianceDecomposition buildPartial() {
        demetra.sa.io.protobuf.SaProtos.VarianceDecomposition result = new demetra.sa.io.protobuf.SaProtos.VarianceDecomposition(this);
        result.cycle_ = cycle_;
        result.seasonal_ = seasonal_;
        result.irregular_ = irregular_;
        result.calendar_ = calendar_;
        result.others_ = others_;
        result.total_ = total_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof demetra.sa.io.protobuf.SaProtos.VarianceDecomposition) {
          return mergeFrom((demetra.sa.io.protobuf.SaProtos.VarianceDecomposition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(demetra.sa.io.protobuf.SaProtos.VarianceDecomposition other) {
        if (other == demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.getDefaultInstance()) return this;
        if (other.getCycle() != 0D) {
          setCycle(other.getCycle());
        }
        if (other.getSeasonal() != 0D) {
          setSeasonal(other.getSeasonal());
        }
        if (other.getIrregular() != 0D) {
          setIrregular(other.getIrregular());
        }
        if (other.getCalendar() != 0D) {
          setCalendar(other.getCalendar());
        }
        if (other.getOthers() != 0D) {
          setOthers(other.getOthers());
        }
        if (other.getTotal() != 0D) {
          setTotal(other.getTotal());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        demetra.sa.io.protobuf.SaProtos.VarianceDecomposition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (demetra.sa.io.protobuf.SaProtos.VarianceDecomposition) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double cycle_ ;
      /**
       * <code>double cycle = 1;</code>
       * @return The cycle.
       */
      @java.lang.Override
      public double getCycle() {
        return cycle_;
      }
      /**
       * <code>double cycle = 1;</code>
       * @param value The cycle to set.
       * @return This builder for chaining.
       */
      public Builder setCycle(double value) {
        
        cycle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double cycle = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCycle() {
        
        cycle_ = 0D;
        onChanged();
        return this;
      }

      private double seasonal_ ;
      /**
       * <code>double seasonal = 2;</code>
       * @return The seasonal.
       */
      @java.lang.Override
      public double getSeasonal() {
        return seasonal_;
      }
      /**
       * <code>double seasonal = 2;</code>
       * @param value The seasonal to set.
       * @return This builder for chaining.
       */
      public Builder setSeasonal(double value) {
        
        seasonal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double seasonal = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeasonal() {
        
        seasonal_ = 0D;
        onChanged();
        return this;
      }

      private double irregular_ ;
      /**
       * <code>double irregular = 3;</code>
       * @return The irregular.
       */
      @java.lang.Override
      public double getIrregular() {
        return irregular_;
      }
      /**
       * <code>double irregular = 3;</code>
       * @param value The irregular to set.
       * @return This builder for chaining.
       */
      public Builder setIrregular(double value) {
        
        irregular_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double irregular = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIrregular() {
        
        irregular_ = 0D;
        onChanged();
        return this;
      }

      private double calendar_ ;
      /**
       * <code>double calendar = 4;</code>
       * @return The calendar.
       */
      @java.lang.Override
      public double getCalendar() {
        return calendar_;
      }
      /**
       * <code>double calendar = 4;</code>
       * @param value The calendar to set.
       * @return This builder for chaining.
       */
      public Builder setCalendar(double value) {
        
        calendar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double calendar = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCalendar() {
        
        calendar_ = 0D;
        onChanged();
        return this;
      }

      private double others_ ;
      /**
       * <code>double others = 5;</code>
       * @return The others.
       */
      @java.lang.Override
      public double getOthers() {
        return others_;
      }
      /**
       * <code>double others = 5;</code>
       * @param value The others to set.
       * @return This builder for chaining.
       */
      public Builder setOthers(double value) {
        
        others_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double others = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearOthers() {
        
        others_ = 0D;
        onChanged();
        return this;
      }

      private double total_ ;
      /**
       * <code>double total = 6;</code>
       * @return The total.
       */
      @java.lang.Override
      public double getTotal() {
        return total_;
      }
      /**
       * <code>double total = 6;</code>
       * @param value The total to set.
       * @return This builder for chaining.
       */
      public Builder setTotal(double value) {
        
        total_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double total = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotal() {
        
        total_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sa.VarianceDecomposition)
    }

    // @@protoc_insertion_point(class_scope:sa.VarianceDecomposition)
    private static final demetra.sa.io.protobuf.SaProtos.VarianceDecomposition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new demetra.sa.io.protobuf.SaProtos.VarianceDecomposition();
    }

    public static demetra.sa.io.protobuf.SaProtos.VarianceDecomposition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VarianceDecomposition>
        PARSER = new com.google.protobuf.AbstractParser<VarianceDecomposition>() {
      @java.lang.Override
      public VarianceDecomposition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VarianceDecomposition(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VarianceDecomposition> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VarianceDecomposition> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.VarianceDecomposition getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DiagnosticsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sa.Diagnostics)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.sa.VarianceDecomposition variance_decomposition = 1;</code>
     * @return Whether the varianceDecomposition field is set.
     */
    boolean hasVarianceDecomposition();
    /**
     * <code>.sa.VarianceDecomposition variance_decomposition = 1;</code>
     * @return The varianceDecomposition.
     */
    demetra.sa.io.protobuf.SaProtos.VarianceDecomposition getVarianceDecomposition();
    /**
     * <code>.sa.VarianceDecomposition variance_decomposition = 1;</code>
     */
    demetra.sa.io.protobuf.SaProtos.VarianceDecompositionOrBuilder getVarianceDecompositionOrBuilder();

    /**
     * <code>.jd3.StatisticalTest seasonal_ftest_on_irregular = 2;</code>
     * @return Whether the seasonalFtestOnIrregular field is set.
     */
    boolean hasSeasonalFtestOnIrregular();
    /**
     * <code>.jd3.StatisticalTest seasonal_ftest_on_irregular = 2;</code>
     * @return The seasonalFtestOnIrregular.
     */
    demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getSeasonalFtestOnIrregular();
    /**
     * <code>.jd3.StatisticalTest seasonal_ftest_on_irregular = 2;</code>
     */
    demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getSeasonalFtestOnIrregularOrBuilder();

    /**
     * <code>.jd3.StatisticalTest seasonal_ftest_on_sa = 3;</code>
     * @return Whether the seasonalFtestOnSa field is set.
     */
    boolean hasSeasonalFtestOnSa();
    /**
     * <code>.jd3.StatisticalTest seasonal_ftest_on_sa = 3;</code>
     * @return The seasonalFtestOnSa.
     */
    demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getSeasonalFtestOnSa();
    /**
     * <code>.jd3.StatisticalTest seasonal_ftest_on_sa = 3;</code>
     */
    demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getSeasonalFtestOnSaOrBuilder();

    /**
     * <code>.jd3.StatisticalTest seasonal_qtest_on_irregular = 4;</code>
     * @return Whether the seasonalQtestOnIrregular field is set.
     */
    boolean hasSeasonalQtestOnIrregular();
    /**
     * <code>.jd3.StatisticalTest seasonal_qtest_on_irregular = 4;</code>
     * @return The seasonalQtestOnIrregular.
     */
    demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getSeasonalQtestOnIrregular();
    /**
     * <code>.jd3.StatisticalTest seasonal_qtest_on_irregular = 4;</code>
     */
    demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getSeasonalQtestOnIrregularOrBuilder();

    /**
     * <code>.jd3.StatisticalTest seasonal_qtest_on_sa = 5;</code>
     * @return Whether the seasonalQtestOnSa field is set.
     */
    boolean hasSeasonalQtestOnSa();
    /**
     * <code>.jd3.StatisticalTest seasonal_qtest_on_sa = 5;</code>
     * @return The seasonalQtestOnSa.
     */
    demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getSeasonalQtestOnSa();
    /**
     * <code>.jd3.StatisticalTest seasonal_qtest_on_sa = 5;</code>
     */
    demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getSeasonalQtestOnSaOrBuilder();

    /**
     * <code>.jd3.StatisticalTest td_ftest_on_irregular = 6;</code>
     * @return Whether the tdFtestOnIrregular field is set.
     */
    boolean hasTdFtestOnIrregular();
    /**
     * <code>.jd3.StatisticalTest td_ftest_on_irregular = 6;</code>
     * @return The tdFtestOnIrregular.
     */
    demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getTdFtestOnIrregular();
    /**
     * <code>.jd3.StatisticalTest td_ftest_on_irregular = 6;</code>
     */
    demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getTdFtestOnIrregularOrBuilder();

    /**
     * <code>.jd3.StatisticalTest td_ftest_on_sa = 7;</code>
     * @return Whether the tdFtestOnSa field is set.
     */
    boolean hasTdFtestOnSa();
    /**
     * <code>.jd3.StatisticalTest td_ftest_on_sa = 7;</code>
     * @return The tdFtestOnSa.
     */
    demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getTdFtestOnSa();
    /**
     * <code>.jd3.StatisticalTest td_ftest_on_sa = 7;</code>
     */
    demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getTdFtestOnSaOrBuilder();
  }
  /**
   * Protobuf type {@code sa.Diagnostics}
   */
  public static final class Diagnostics extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sa.Diagnostics)
      DiagnosticsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Diagnostics.newBuilder() to construct.
    private Diagnostics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Diagnostics() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Diagnostics();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Diagnostics(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.Builder subBuilder = null;
              if (varianceDecomposition_ != null) {
                subBuilder = varianceDecomposition_.toBuilder();
              }
              varianceDecomposition_ = input.readMessage(demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(varianceDecomposition_);
                varianceDecomposition_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder subBuilder = null;
              if (seasonalFtestOnIrregular_ != null) {
                subBuilder = seasonalFtestOnIrregular_.toBuilder();
              }
              seasonalFtestOnIrregular_ = input.readMessage(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(seasonalFtestOnIrregular_);
                seasonalFtestOnIrregular_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder subBuilder = null;
              if (seasonalFtestOnSa_ != null) {
                subBuilder = seasonalFtestOnSa_.toBuilder();
              }
              seasonalFtestOnSa_ = input.readMessage(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(seasonalFtestOnSa_);
                seasonalFtestOnSa_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder subBuilder = null;
              if (seasonalQtestOnIrregular_ != null) {
                subBuilder = seasonalQtestOnIrregular_.toBuilder();
              }
              seasonalQtestOnIrregular_ = input.readMessage(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(seasonalQtestOnIrregular_);
                seasonalQtestOnIrregular_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder subBuilder = null;
              if (seasonalQtestOnSa_ != null) {
                subBuilder = seasonalQtestOnSa_.toBuilder();
              }
              seasonalQtestOnSa_ = input.readMessage(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(seasonalQtestOnSa_);
                seasonalQtestOnSa_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder subBuilder = null;
              if (tdFtestOnIrregular_ != null) {
                subBuilder = tdFtestOnIrregular_.toBuilder();
              }
              tdFtestOnIrregular_ = input.readMessage(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tdFtestOnIrregular_);
                tdFtestOnIrregular_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder subBuilder = null;
              if (tdFtestOnSa_ != null) {
                subBuilder = tdFtestOnSa_.toBuilder();
              }
              tdFtestOnSa_ = input.readMessage(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tdFtestOnSa_);
                tdFtestOnSa_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return demetra.sa.io.protobuf.SaProtos.internal_static_sa_Diagnostics_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return demetra.sa.io.protobuf.SaProtos.internal_static_sa_Diagnostics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              demetra.sa.io.protobuf.SaProtos.Diagnostics.class, demetra.sa.io.protobuf.SaProtos.Diagnostics.Builder.class);
    }

    public static final int VARIANCE_DECOMPOSITION_FIELD_NUMBER = 1;
    private demetra.sa.io.protobuf.SaProtos.VarianceDecomposition varianceDecomposition_;
    /**
     * <code>.sa.VarianceDecomposition variance_decomposition = 1;</code>
     * @return Whether the varianceDecomposition field is set.
     */
    @java.lang.Override
    public boolean hasVarianceDecomposition() {
      return varianceDecomposition_ != null;
    }
    /**
     * <code>.sa.VarianceDecomposition variance_decomposition = 1;</code>
     * @return The varianceDecomposition.
     */
    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.VarianceDecomposition getVarianceDecomposition() {
      return varianceDecomposition_ == null ? demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.getDefaultInstance() : varianceDecomposition_;
    }
    /**
     * <code>.sa.VarianceDecomposition variance_decomposition = 1;</code>
     */
    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.VarianceDecompositionOrBuilder getVarianceDecompositionOrBuilder() {
      return getVarianceDecomposition();
    }

    public static final int SEASONAL_FTEST_ON_IRREGULAR_FIELD_NUMBER = 2;
    private demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest seasonalFtestOnIrregular_;
    /**
     * <code>.jd3.StatisticalTest seasonal_ftest_on_irregular = 2;</code>
     * @return Whether the seasonalFtestOnIrregular field is set.
     */
    @java.lang.Override
    public boolean hasSeasonalFtestOnIrregular() {
      return seasonalFtestOnIrregular_ != null;
    }
    /**
     * <code>.jd3.StatisticalTest seasonal_ftest_on_irregular = 2;</code>
     * @return The seasonalFtestOnIrregular.
     */
    @java.lang.Override
    public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getSeasonalFtestOnIrregular() {
      return seasonalFtestOnIrregular_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : seasonalFtestOnIrregular_;
    }
    /**
     * <code>.jd3.StatisticalTest seasonal_ftest_on_irregular = 2;</code>
     */
    @java.lang.Override
    public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getSeasonalFtestOnIrregularOrBuilder() {
      return getSeasonalFtestOnIrregular();
    }

    public static final int SEASONAL_FTEST_ON_SA_FIELD_NUMBER = 3;
    private demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest seasonalFtestOnSa_;
    /**
     * <code>.jd3.StatisticalTest seasonal_ftest_on_sa = 3;</code>
     * @return Whether the seasonalFtestOnSa field is set.
     */
    @java.lang.Override
    public boolean hasSeasonalFtestOnSa() {
      return seasonalFtestOnSa_ != null;
    }
    /**
     * <code>.jd3.StatisticalTest seasonal_ftest_on_sa = 3;</code>
     * @return The seasonalFtestOnSa.
     */
    @java.lang.Override
    public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getSeasonalFtestOnSa() {
      return seasonalFtestOnSa_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : seasonalFtestOnSa_;
    }
    /**
     * <code>.jd3.StatisticalTest seasonal_ftest_on_sa = 3;</code>
     */
    @java.lang.Override
    public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getSeasonalFtestOnSaOrBuilder() {
      return getSeasonalFtestOnSa();
    }

    public static final int SEASONAL_QTEST_ON_IRREGULAR_FIELD_NUMBER = 4;
    private demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest seasonalQtestOnIrregular_;
    /**
     * <code>.jd3.StatisticalTest seasonal_qtest_on_irregular = 4;</code>
     * @return Whether the seasonalQtestOnIrregular field is set.
     */
    @java.lang.Override
    public boolean hasSeasonalQtestOnIrregular() {
      return seasonalQtestOnIrregular_ != null;
    }
    /**
     * <code>.jd3.StatisticalTest seasonal_qtest_on_irregular = 4;</code>
     * @return The seasonalQtestOnIrregular.
     */
    @java.lang.Override
    public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getSeasonalQtestOnIrregular() {
      return seasonalQtestOnIrregular_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : seasonalQtestOnIrregular_;
    }
    /**
     * <code>.jd3.StatisticalTest seasonal_qtest_on_irregular = 4;</code>
     */
    @java.lang.Override
    public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getSeasonalQtestOnIrregularOrBuilder() {
      return getSeasonalQtestOnIrregular();
    }

    public static final int SEASONAL_QTEST_ON_SA_FIELD_NUMBER = 5;
    private demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest seasonalQtestOnSa_;
    /**
     * <code>.jd3.StatisticalTest seasonal_qtest_on_sa = 5;</code>
     * @return Whether the seasonalQtestOnSa field is set.
     */
    @java.lang.Override
    public boolean hasSeasonalQtestOnSa() {
      return seasonalQtestOnSa_ != null;
    }
    /**
     * <code>.jd3.StatisticalTest seasonal_qtest_on_sa = 5;</code>
     * @return The seasonalQtestOnSa.
     */
    @java.lang.Override
    public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getSeasonalQtestOnSa() {
      return seasonalQtestOnSa_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : seasonalQtestOnSa_;
    }
    /**
     * <code>.jd3.StatisticalTest seasonal_qtest_on_sa = 5;</code>
     */
    @java.lang.Override
    public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getSeasonalQtestOnSaOrBuilder() {
      return getSeasonalQtestOnSa();
    }

    public static final int TD_FTEST_ON_IRREGULAR_FIELD_NUMBER = 6;
    private demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest tdFtestOnIrregular_;
    /**
     * <code>.jd3.StatisticalTest td_ftest_on_irregular = 6;</code>
     * @return Whether the tdFtestOnIrregular field is set.
     */
    @java.lang.Override
    public boolean hasTdFtestOnIrregular() {
      return tdFtestOnIrregular_ != null;
    }
    /**
     * <code>.jd3.StatisticalTest td_ftest_on_irregular = 6;</code>
     * @return The tdFtestOnIrregular.
     */
    @java.lang.Override
    public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getTdFtestOnIrregular() {
      return tdFtestOnIrregular_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : tdFtestOnIrregular_;
    }
    /**
     * <code>.jd3.StatisticalTest td_ftest_on_irregular = 6;</code>
     */
    @java.lang.Override
    public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getTdFtestOnIrregularOrBuilder() {
      return getTdFtestOnIrregular();
    }

    public static final int TD_FTEST_ON_SA_FIELD_NUMBER = 7;
    private demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest tdFtestOnSa_;
    /**
     * <code>.jd3.StatisticalTest td_ftest_on_sa = 7;</code>
     * @return Whether the tdFtestOnSa field is set.
     */
    @java.lang.Override
    public boolean hasTdFtestOnSa() {
      return tdFtestOnSa_ != null;
    }
    /**
     * <code>.jd3.StatisticalTest td_ftest_on_sa = 7;</code>
     * @return The tdFtestOnSa.
     */
    @java.lang.Override
    public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getTdFtestOnSa() {
      return tdFtestOnSa_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : tdFtestOnSa_;
    }
    /**
     * <code>.jd3.StatisticalTest td_ftest_on_sa = 7;</code>
     */
    @java.lang.Override
    public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getTdFtestOnSaOrBuilder() {
      return getTdFtestOnSa();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (varianceDecomposition_ != null) {
        output.writeMessage(1, getVarianceDecomposition());
      }
      if (seasonalFtestOnIrregular_ != null) {
        output.writeMessage(2, getSeasonalFtestOnIrregular());
      }
      if (seasonalFtestOnSa_ != null) {
        output.writeMessage(3, getSeasonalFtestOnSa());
      }
      if (seasonalQtestOnIrregular_ != null) {
        output.writeMessage(4, getSeasonalQtestOnIrregular());
      }
      if (seasonalQtestOnSa_ != null) {
        output.writeMessage(5, getSeasonalQtestOnSa());
      }
      if (tdFtestOnIrregular_ != null) {
        output.writeMessage(6, getTdFtestOnIrregular());
      }
      if (tdFtestOnSa_ != null) {
        output.writeMessage(7, getTdFtestOnSa());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (varianceDecomposition_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getVarianceDecomposition());
      }
      if (seasonalFtestOnIrregular_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSeasonalFtestOnIrregular());
      }
      if (seasonalFtestOnSa_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSeasonalFtestOnSa());
      }
      if (seasonalQtestOnIrregular_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getSeasonalQtestOnIrregular());
      }
      if (seasonalQtestOnSa_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSeasonalQtestOnSa());
      }
      if (tdFtestOnIrregular_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getTdFtestOnIrregular());
      }
      if (tdFtestOnSa_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getTdFtestOnSa());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof demetra.sa.io.protobuf.SaProtos.Diagnostics)) {
        return super.equals(obj);
      }
      demetra.sa.io.protobuf.SaProtos.Diagnostics other = (demetra.sa.io.protobuf.SaProtos.Diagnostics) obj;

      if (hasVarianceDecomposition() != other.hasVarianceDecomposition()) return false;
      if (hasVarianceDecomposition()) {
        if (!getVarianceDecomposition()
            .equals(other.getVarianceDecomposition())) return false;
      }
      if (hasSeasonalFtestOnIrregular() != other.hasSeasonalFtestOnIrregular()) return false;
      if (hasSeasonalFtestOnIrregular()) {
        if (!getSeasonalFtestOnIrregular()
            .equals(other.getSeasonalFtestOnIrregular())) return false;
      }
      if (hasSeasonalFtestOnSa() != other.hasSeasonalFtestOnSa()) return false;
      if (hasSeasonalFtestOnSa()) {
        if (!getSeasonalFtestOnSa()
            .equals(other.getSeasonalFtestOnSa())) return false;
      }
      if (hasSeasonalQtestOnIrregular() != other.hasSeasonalQtestOnIrregular()) return false;
      if (hasSeasonalQtestOnIrregular()) {
        if (!getSeasonalQtestOnIrregular()
            .equals(other.getSeasonalQtestOnIrregular())) return false;
      }
      if (hasSeasonalQtestOnSa() != other.hasSeasonalQtestOnSa()) return false;
      if (hasSeasonalQtestOnSa()) {
        if (!getSeasonalQtestOnSa()
            .equals(other.getSeasonalQtestOnSa())) return false;
      }
      if (hasTdFtestOnIrregular() != other.hasTdFtestOnIrregular()) return false;
      if (hasTdFtestOnIrregular()) {
        if (!getTdFtestOnIrregular()
            .equals(other.getTdFtestOnIrregular())) return false;
      }
      if (hasTdFtestOnSa() != other.hasTdFtestOnSa()) return false;
      if (hasTdFtestOnSa()) {
        if (!getTdFtestOnSa()
            .equals(other.getTdFtestOnSa())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasVarianceDecomposition()) {
        hash = (37 * hash) + VARIANCE_DECOMPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getVarianceDecomposition().hashCode();
      }
      if (hasSeasonalFtestOnIrregular()) {
        hash = (37 * hash) + SEASONAL_FTEST_ON_IRREGULAR_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonalFtestOnIrregular().hashCode();
      }
      if (hasSeasonalFtestOnSa()) {
        hash = (37 * hash) + SEASONAL_FTEST_ON_SA_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonalFtestOnSa().hashCode();
      }
      if (hasSeasonalQtestOnIrregular()) {
        hash = (37 * hash) + SEASONAL_QTEST_ON_IRREGULAR_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonalQtestOnIrregular().hashCode();
      }
      if (hasSeasonalQtestOnSa()) {
        hash = (37 * hash) + SEASONAL_QTEST_ON_SA_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonalQtestOnSa().hashCode();
      }
      if (hasTdFtestOnIrregular()) {
        hash = (37 * hash) + TD_FTEST_ON_IRREGULAR_FIELD_NUMBER;
        hash = (53 * hash) + getTdFtestOnIrregular().hashCode();
      }
      if (hasTdFtestOnSa()) {
        hash = (37 * hash) + TD_FTEST_ON_SA_FIELD_NUMBER;
        hash = (53 * hash) + getTdFtestOnSa().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static demetra.sa.io.protobuf.SaProtos.Diagnostics parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.Diagnostics parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.Diagnostics parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.Diagnostics parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.Diagnostics parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static demetra.sa.io.protobuf.SaProtos.Diagnostics parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.Diagnostics parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.Diagnostics parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.Diagnostics parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.Diagnostics parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static demetra.sa.io.protobuf.SaProtos.Diagnostics parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static demetra.sa.io.protobuf.SaProtos.Diagnostics parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(demetra.sa.io.protobuf.SaProtos.Diagnostics prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sa.Diagnostics}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sa.Diagnostics)
        demetra.sa.io.protobuf.SaProtos.DiagnosticsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_Diagnostics_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_Diagnostics_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                demetra.sa.io.protobuf.SaProtos.Diagnostics.class, demetra.sa.io.protobuf.SaProtos.Diagnostics.Builder.class);
      }

      // Construct using demetra.sa.io.protobuf.SaProtos.Diagnostics.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (varianceDecompositionBuilder_ == null) {
          varianceDecomposition_ = null;
        } else {
          varianceDecomposition_ = null;
          varianceDecompositionBuilder_ = null;
        }
        if (seasonalFtestOnIrregularBuilder_ == null) {
          seasonalFtestOnIrregular_ = null;
        } else {
          seasonalFtestOnIrregular_ = null;
          seasonalFtestOnIrregularBuilder_ = null;
        }
        if (seasonalFtestOnSaBuilder_ == null) {
          seasonalFtestOnSa_ = null;
        } else {
          seasonalFtestOnSa_ = null;
          seasonalFtestOnSaBuilder_ = null;
        }
        if (seasonalQtestOnIrregularBuilder_ == null) {
          seasonalQtestOnIrregular_ = null;
        } else {
          seasonalQtestOnIrregular_ = null;
          seasonalQtestOnIrregularBuilder_ = null;
        }
        if (seasonalQtestOnSaBuilder_ == null) {
          seasonalQtestOnSa_ = null;
        } else {
          seasonalQtestOnSa_ = null;
          seasonalQtestOnSaBuilder_ = null;
        }
        if (tdFtestOnIrregularBuilder_ == null) {
          tdFtestOnIrregular_ = null;
        } else {
          tdFtestOnIrregular_ = null;
          tdFtestOnIrregularBuilder_ = null;
        }
        if (tdFtestOnSaBuilder_ == null) {
          tdFtestOnSa_ = null;
        } else {
          tdFtestOnSa_ = null;
          tdFtestOnSaBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return demetra.sa.io.protobuf.SaProtos.internal_static_sa_Diagnostics_descriptor;
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.Diagnostics getDefaultInstanceForType() {
        return demetra.sa.io.protobuf.SaProtos.Diagnostics.getDefaultInstance();
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.Diagnostics build() {
        demetra.sa.io.protobuf.SaProtos.Diagnostics result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public demetra.sa.io.protobuf.SaProtos.Diagnostics buildPartial() {
        demetra.sa.io.protobuf.SaProtos.Diagnostics result = new demetra.sa.io.protobuf.SaProtos.Diagnostics(this);
        if (varianceDecompositionBuilder_ == null) {
          result.varianceDecomposition_ = varianceDecomposition_;
        } else {
          result.varianceDecomposition_ = varianceDecompositionBuilder_.build();
        }
        if (seasonalFtestOnIrregularBuilder_ == null) {
          result.seasonalFtestOnIrregular_ = seasonalFtestOnIrregular_;
        } else {
          result.seasonalFtestOnIrregular_ = seasonalFtestOnIrregularBuilder_.build();
        }
        if (seasonalFtestOnSaBuilder_ == null) {
          result.seasonalFtestOnSa_ = seasonalFtestOnSa_;
        } else {
          result.seasonalFtestOnSa_ = seasonalFtestOnSaBuilder_.build();
        }
        if (seasonalQtestOnIrregularBuilder_ == null) {
          result.seasonalQtestOnIrregular_ = seasonalQtestOnIrregular_;
        } else {
          result.seasonalQtestOnIrregular_ = seasonalQtestOnIrregularBuilder_.build();
        }
        if (seasonalQtestOnSaBuilder_ == null) {
          result.seasonalQtestOnSa_ = seasonalQtestOnSa_;
        } else {
          result.seasonalQtestOnSa_ = seasonalQtestOnSaBuilder_.build();
        }
        if (tdFtestOnIrregularBuilder_ == null) {
          result.tdFtestOnIrregular_ = tdFtestOnIrregular_;
        } else {
          result.tdFtestOnIrregular_ = tdFtestOnIrregularBuilder_.build();
        }
        if (tdFtestOnSaBuilder_ == null) {
          result.tdFtestOnSa_ = tdFtestOnSa_;
        } else {
          result.tdFtestOnSa_ = tdFtestOnSaBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof demetra.sa.io.protobuf.SaProtos.Diagnostics) {
          return mergeFrom((demetra.sa.io.protobuf.SaProtos.Diagnostics)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(demetra.sa.io.protobuf.SaProtos.Diagnostics other) {
        if (other == demetra.sa.io.protobuf.SaProtos.Diagnostics.getDefaultInstance()) return this;
        if (other.hasVarianceDecomposition()) {
          mergeVarianceDecomposition(other.getVarianceDecomposition());
        }
        if (other.hasSeasonalFtestOnIrregular()) {
          mergeSeasonalFtestOnIrregular(other.getSeasonalFtestOnIrregular());
        }
        if (other.hasSeasonalFtestOnSa()) {
          mergeSeasonalFtestOnSa(other.getSeasonalFtestOnSa());
        }
        if (other.hasSeasonalQtestOnIrregular()) {
          mergeSeasonalQtestOnIrregular(other.getSeasonalQtestOnIrregular());
        }
        if (other.hasSeasonalQtestOnSa()) {
          mergeSeasonalQtestOnSa(other.getSeasonalQtestOnSa());
        }
        if (other.hasTdFtestOnIrregular()) {
          mergeTdFtestOnIrregular(other.getTdFtestOnIrregular());
        }
        if (other.hasTdFtestOnSa()) {
          mergeTdFtestOnSa(other.getTdFtestOnSa());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        demetra.sa.io.protobuf.SaProtos.Diagnostics parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (demetra.sa.io.protobuf.SaProtos.Diagnostics) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private demetra.sa.io.protobuf.SaProtos.VarianceDecomposition varianceDecomposition_;
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.sa.io.protobuf.SaProtos.VarianceDecomposition, demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.Builder, demetra.sa.io.protobuf.SaProtos.VarianceDecompositionOrBuilder> varianceDecompositionBuilder_;
      /**
       * <code>.sa.VarianceDecomposition variance_decomposition = 1;</code>
       * @return Whether the varianceDecomposition field is set.
       */
      public boolean hasVarianceDecomposition() {
        return varianceDecompositionBuilder_ != null || varianceDecomposition_ != null;
      }
      /**
       * <code>.sa.VarianceDecomposition variance_decomposition = 1;</code>
       * @return The varianceDecomposition.
       */
      public demetra.sa.io.protobuf.SaProtos.VarianceDecomposition getVarianceDecomposition() {
        if (varianceDecompositionBuilder_ == null) {
          return varianceDecomposition_ == null ? demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.getDefaultInstance() : varianceDecomposition_;
        } else {
          return varianceDecompositionBuilder_.getMessage();
        }
      }
      /**
       * <code>.sa.VarianceDecomposition variance_decomposition = 1;</code>
       */
      public Builder setVarianceDecomposition(demetra.sa.io.protobuf.SaProtos.VarianceDecomposition value) {
        if (varianceDecompositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          varianceDecomposition_ = value;
          onChanged();
        } else {
          varianceDecompositionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.sa.VarianceDecomposition variance_decomposition = 1;</code>
       */
      public Builder setVarianceDecomposition(
          demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.Builder builderForValue) {
        if (varianceDecompositionBuilder_ == null) {
          varianceDecomposition_ = builderForValue.build();
          onChanged();
        } else {
          varianceDecompositionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.sa.VarianceDecomposition variance_decomposition = 1;</code>
       */
      public Builder mergeVarianceDecomposition(demetra.sa.io.protobuf.SaProtos.VarianceDecomposition value) {
        if (varianceDecompositionBuilder_ == null) {
          if (varianceDecomposition_ != null) {
            varianceDecomposition_ =
              demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.newBuilder(varianceDecomposition_).mergeFrom(value).buildPartial();
          } else {
            varianceDecomposition_ = value;
          }
          onChanged();
        } else {
          varianceDecompositionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.sa.VarianceDecomposition variance_decomposition = 1;</code>
       */
      public Builder clearVarianceDecomposition() {
        if (varianceDecompositionBuilder_ == null) {
          varianceDecomposition_ = null;
          onChanged();
        } else {
          varianceDecomposition_ = null;
          varianceDecompositionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.sa.VarianceDecomposition variance_decomposition = 1;</code>
       */
      public demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.Builder getVarianceDecompositionBuilder() {
        
        onChanged();
        return getVarianceDecompositionFieldBuilder().getBuilder();
      }
      /**
       * <code>.sa.VarianceDecomposition variance_decomposition = 1;</code>
       */
      public demetra.sa.io.protobuf.SaProtos.VarianceDecompositionOrBuilder getVarianceDecompositionOrBuilder() {
        if (varianceDecompositionBuilder_ != null) {
          return varianceDecompositionBuilder_.getMessageOrBuilder();
        } else {
          return varianceDecomposition_ == null ?
              demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.getDefaultInstance() : varianceDecomposition_;
        }
      }
      /**
       * <code>.sa.VarianceDecomposition variance_decomposition = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.sa.io.protobuf.SaProtos.VarianceDecomposition, demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.Builder, demetra.sa.io.protobuf.SaProtos.VarianceDecompositionOrBuilder> 
          getVarianceDecompositionFieldBuilder() {
        if (varianceDecompositionBuilder_ == null) {
          varianceDecompositionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              demetra.sa.io.protobuf.SaProtos.VarianceDecomposition, demetra.sa.io.protobuf.SaProtos.VarianceDecomposition.Builder, demetra.sa.io.protobuf.SaProtos.VarianceDecompositionOrBuilder>(
                  getVarianceDecomposition(),
                  getParentForChildren(),
                  isClean());
          varianceDecomposition_ = null;
        }
        return varianceDecompositionBuilder_;
      }

      private demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest seasonalFtestOnIrregular_;
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder> seasonalFtestOnIrregularBuilder_;
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_irregular = 2;</code>
       * @return Whether the seasonalFtestOnIrregular field is set.
       */
      public boolean hasSeasonalFtestOnIrregular() {
        return seasonalFtestOnIrregularBuilder_ != null || seasonalFtestOnIrregular_ != null;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_irregular = 2;</code>
       * @return The seasonalFtestOnIrregular.
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getSeasonalFtestOnIrregular() {
        if (seasonalFtestOnIrregularBuilder_ == null) {
          return seasonalFtestOnIrregular_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : seasonalFtestOnIrregular_;
        } else {
          return seasonalFtestOnIrregularBuilder_.getMessage();
        }
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_irregular = 2;</code>
       */
      public Builder setSeasonalFtestOnIrregular(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest value) {
        if (seasonalFtestOnIrregularBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          seasonalFtestOnIrregular_ = value;
          onChanged();
        } else {
          seasonalFtestOnIrregularBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_irregular = 2;</code>
       */
      public Builder setSeasonalFtestOnIrregular(
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder builderForValue) {
        if (seasonalFtestOnIrregularBuilder_ == null) {
          seasonalFtestOnIrregular_ = builderForValue.build();
          onChanged();
        } else {
          seasonalFtestOnIrregularBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_irregular = 2;</code>
       */
      public Builder mergeSeasonalFtestOnIrregular(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest value) {
        if (seasonalFtestOnIrregularBuilder_ == null) {
          if (seasonalFtestOnIrregular_ != null) {
            seasonalFtestOnIrregular_ =
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.newBuilder(seasonalFtestOnIrregular_).mergeFrom(value).buildPartial();
          } else {
            seasonalFtestOnIrregular_ = value;
          }
          onChanged();
        } else {
          seasonalFtestOnIrregularBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_irregular = 2;</code>
       */
      public Builder clearSeasonalFtestOnIrregular() {
        if (seasonalFtestOnIrregularBuilder_ == null) {
          seasonalFtestOnIrregular_ = null;
          onChanged();
        } else {
          seasonalFtestOnIrregular_ = null;
          seasonalFtestOnIrregularBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_irregular = 2;</code>
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder getSeasonalFtestOnIrregularBuilder() {
        
        onChanged();
        return getSeasonalFtestOnIrregularFieldBuilder().getBuilder();
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_irregular = 2;</code>
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getSeasonalFtestOnIrregularOrBuilder() {
        if (seasonalFtestOnIrregularBuilder_ != null) {
          return seasonalFtestOnIrregularBuilder_.getMessageOrBuilder();
        } else {
          return seasonalFtestOnIrregular_ == null ?
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : seasonalFtestOnIrregular_;
        }
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_irregular = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder> 
          getSeasonalFtestOnIrregularFieldBuilder() {
        if (seasonalFtestOnIrregularBuilder_ == null) {
          seasonalFtestOnIrregularBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder>(
                  getSeasonalFtestOnIrregular(),
                  getParentForChildren(),
                  isClean());
          seasonalFtestOnIrregular_ = null;
        }
        return seasonalFtestOnIrregularBuilder_;
      }

      private demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest seasonalFtestOnSa_;
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder> seasonalFtestOnSaBuilder_;
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_sa = 3;</code>
       * @return Whether the seasonalFtestOnSa field is set.
       */
      public boolean hasSeasonalFtestOnSa() {
        return seasonalFtestOnSaBuilder_ != null || seasonalFtestOnSa_ != null;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_sa = 3;</code>
       * @return The seasonalFtestOnSa.
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getSeasonalFtestOnSa() {
        if (seasonalFtestOnSaBuilder_ == null) {
          return seasonalFtestOnSa_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : seasonalFtestOnSa_;
        } else {
          return seasonalFtestOnSaBuilder_.getMessage();
        }
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_sa = 3;</code>
       */
      public Builder setSeasonalFtestOnSa(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest value) {
        if (seasonalFtestOnSaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          seasonalFtestOnSa_ = value;
          onChanged();
        } else {
          seasonalFtestOnSaBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_sa = 3;</code>
       */
      public Builder setSeasonalFtestOnSa(
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder builderForValue) {
        if (seasonalFtestOnSaBuilder_ == null) {
          seasonalFtestOnSa_ = builderForValue.build();
          onChanged();
        } else {
          seasonalFtestOnSaBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_sa = 3;</code>
       */
      public Builder mergeSeasonalFtestOnSa(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest value) {
        if (seasonalFtestOnSaBuilder_ == null) {
          if (seasonalFtestOnSa_ != null) {
            seasonalFtestOnSa_ =
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.newBuilder(seasonalFtestOnSa_).mergeFrom(value).buildPartial();
          } else {
            seasonalFtestOnSa_ = value;
          }
          onChanged();
        } else {
          seasonalFtestOnSaBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_sa = 3;</code>
       */
      public Builder clearSeasonalFtestOnSa() {
        if (seasonalFtestOnSaBuilder_ == null) {
          seasonalFtestOnSa_ = null;
          onChanged();
        } else {
          seasonalFtestOnSa_ = null;
          seasonalFtestOnSaBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_sa = 3;</code>
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder getSeasonalFtestOnSaBuilder() {
        
        onChanged();
        return getSeasonalFtestOnSaFieldBuilder().getBuilder();
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_sa = 3;</code>
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getSeasonalFtestOnSaOrBuilder() {
        if (seasonalFtestOnSaBuilder_ != null) {
          return seasonalFtestOnSaBuilder_.getMessageOrBuilder();
        } else {
          return seasonalFtestOnSa_ == null ?
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : seasonalFtestOnSa_;
        }
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_ftest_on_sa = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder> 
          getSeasonalFtestOnSaFieldBuilder() {
        if (seasonalFtestOnSaBuilder_ == null) {
          seasonalFtestOnSaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder>(
                  getSeasonalFtestOnSa(),
                  getParentForChildren(),
                  isClean());
          seasonalFtestOnSa_ = null;
        }
        return seasonalFtestOnSaBuilder_;
      }

      private demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest seasonalQtestOnIrregular_;
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder> seasonalQtestOnIrregularBuilder_;
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_irregular = 4;</code>
       * @return Whether the seasonalQtestOnIrregular field is set.
       */
      public boolean hasSeasonalQtestOnIrregular() {
        return seasonalQtestOnIrregularBuilder_ != null || seasonalQtestOnIrregular_ != null;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_irregular = 4;</code>
       * @return The seasonalQtestOnIrregular.
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getSeasonalQtestOnIrregular() {
        if (seasonalQtestOnIrregularBuilder_ == null) {
          return seasonalQtestOnIrregular_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : seasonalQtestOnIrregular_;
        } else {
          return seasonalQtestOnIrregularBuilder_.getMessage();
        }
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_irregular = 4;</code>
       */
      public Builder setSeasonalQtestOnIrregular(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest value) {
        if (seasonalQtestOnIrregularBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          seasonalQtestOnIrregular_ = value;
          onChanged();
        } else {
          seasonalQtestOnIrregularBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_irregular = 4;</code>
       */
      public Builder setSeasonalQtestOnIrregular(
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder builderForValue) {
        if (seasonalQtestOnIrregularBuilder_ == null) {
          seasonalQtestOnIrregular_ = builderForValue.build();
          onChanged();
        } else {
          seasonalQtestOnIrregularBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_irregular = 4;</code>
       */
      public Builder mergeSeasonalQtestOnIrregular(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest value) {
        if (seasonalQtestOnIrregularBuilder_ == null) {
          if (seasonalQtestOnIrregular_ != null) {
            seasonalQtestOnIrregular_ =
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.newBuilder(seasonalQtestOnIrregular_).mergeFrom(value).buildPartial();
          } else {
            seasonalQtestOnIrregular_ = value;
          }
          onChanged();
        } else {
          seasonalQtestOnIrregularBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_irregular = 4;</code>
       */
      public Builder clearSeasonalQtestOnIrregular() {
        if (seasonalQtestOnIrregularBuilder_ == null) {
          seasonalQtestOnIrregular_ = null;
          onChanged();
        } else {
          seasonalQtestOnIrregular_ = null;
          seasonalQtestOnIrregularBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_irregular = 4;</code>
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder getSeasonalQtestOnIrregularBuilder() {
        
        onChanged();
        return getSeasonalQtestOnIrregularFieldBuilder().getBuilder();
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_irregular = 4;</code>
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getSeasonalQtestOnIrregularOrBuilder() {
        if (seasonalQtestOnIrregularBuilder_ != null) {
          return seasonalQtestOnIrregularBuilder_.getMessageOrBuilder();
        } else {
          return seasonalQtestOnIrregular_ == null ?
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : seasonalQtestOnIrregular_;
        }
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_irregular = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder> 
          getSeasonalQtestOnIrregularFieldBuilder() {
        if (seasonalQtestOnIrregularBuilder_ == null) {
          seasonalQtestOnIrregularBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder>(
                  getSeasonalQtestOnIrregular(),
                  getParentForChildren(),
                  isClean());
          seasonalQtestOnIrregular_ = null;
        }
        return seasonalQtestOnIrregularBuilder_;
      }

      private demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest seasonalQtestOnSa_;
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder> seasonalQtestOnSaBuilder_;
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_sa = 5;</code>
       * @return Whether the seasonalQtestOnSa field is set.
       */
      public boolean hasSeasonalQtestOnSa() {
        return seasonalQtestOnSaBuilder_ != null || seasonalQtestOnSa_ != null;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_sa = 5;</code>
       * @return The seasonalQtestOnSa.
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getSeasonalQtestOnSa() {
        if (seasonalQtestOnSaBuilder_ == null) {
          return seasonalQtestOnSa_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : seasonalQtestOnSa_;
        } else {
          return seasonalQtestOnSaBuilder_.getMessage();
        }
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_sa = 5;</code>
       */
      public Builder setSeasonalQtestOnSa(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest value) {
        if (seasonalQtestOnSaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          seasonalQtestOnSa_ = value;
          onChanged();
        } else {
          seasonalQtestOnSaBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_sa = 5;</code>
       */
      public Builder setSeasonalQtestOnSa(
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder builderForValue) {
        if (seasonalQtestOnSaBuilder_ == null) {
          seasonalQtestOnSa_ = builderForValue.build();
          onChanged();
        } else {
          seasonalQtestOnSaBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_sa = 5;</code>
       */
      public Builder mergeSeasonalQtestOnSa(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest value) {
        if (seasonalQtestOnSaBuilder_ == null) {
          if (seasonalQtestOnSa_ != null) {
            seasonalQtestOnSa_ =
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.newBuilder(seasonalQtestOnSa_).mergeFrom(value).buildPartial();
          } else {
            seasonalQtestOnSa_ = value;
          }
          onChanged();
        } else {
          seasonalQtestOnSaBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_sa = 5;</code>
       */
      public Builder clearSeasonalQtestOnSa() {
        if (seasonalQtestOnSaBuilder_ == null) {
          seasonalQtestOnSa_ = null;
          onChanged();
        } else {
          seasonalQtestOnSa_ = null;
          seasonalQtestOnSaBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_sa = 5;</code>
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder getSeasonalQtestOnSaBuilder() {
        
        onChanged();
        return getSeasonalQtestOnSaFieldBuilder().getBuilder();
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_sa = 5;</code>
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getSeasonalQtestOnSaOrBuilder() {
        if (seasonalQtestOnSaBuilder_ != null) {
          return seasonalQtestOnSaBuilder_.getMessageOrBuilder();
        } else {
          return seasonalQtestOnSa_ == null ?
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : seasonalQtestOnSa_;
        }
      }
      /**
       * <code>.jd3.StatisticalTest seasonal_qtest_on_sa = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder> 
          getSeasonalQtestOnSaFieldBuilder() {
        if (seasonalQtestOnSaBuilder_ == null) {
          seasonalQtestOnSaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder>(
                  getSeasonalQtestOnSa(),
                  getParentForChildren(),
                  isClean());
          seasonalQtestOnSa_ = null;
        }
        return seasonalQtestOnSaBuilder_;
      }

      private demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest tdFtestOnIrregular_;
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder> tdFtestOnIrregularBuilder_;
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_irregular = 6;</code>
       * @return Whether the tdFtestOnIrregular field is set.
       */
      public boolean hasTdFtestOnIrregular() {
        return tdFtestOnIrregularBuilder_ != null || tdFtestOnIrregular_ != null;
      }
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_irregular = 6;</code>
       * @return The tdFtestOnIrregular.
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getTdFtestOnIrregular() {
        if (tdFtestOnIrregularBuilder_ == null) {
          return tdFtestOnIrregular_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : tdFtestOnIrregular_;
        } else {
          return tdFtestOnIrregularBuilder_.getMessage();
        }
      }
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_irregular = 6;</code>
       */
      public Builder setTdFtestOnIrregular(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest value) {
        if (tdFtestOnIrregularBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tdFtestOnIrregular_ = value;
          onChanged();
        } else {
          tdFtestOnIrregularBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_irregular = 6;</code>
       */
      public Builder setTdFtestOnIrregular(
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder builderForValue) {
        if (tdFtestOnIrregularBuilder_ == null) {
          tdFtestOnIrregular_ = builderForValue.build();
          onChanged();
        } else {
          tdFtestOnIrregularBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_irregular = 6;</code>
       */
      public Builder mergeTdFtestOnIrregular(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest value) {
        if (tdFtestOnIrregularBuilder_ == null) {
          if (tdFtestOnIrregular_ != null) {
            tdFtestOnIrregular_ =
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.newBuilder(tdFtestOnIrregular_).mergeFrom(value).buildPartial();
          } else {
            tdFtestOnIrregular_ = value;
          }
          onChanged();
        } else {
          tdFtestOnIrregularBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_irregular = 6;</code>
       */
      public Builder clearTdFtestOnIrregular() {
        if (tdFtestOnIrregularBuilder_ == null) {
          tdFtestOnIrregular_ = null;
          onChanged();
        } else {
          tdFtestOnIrregular_ = null;
          tdFtestOnIrregularBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_irregular = 6;</code>
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder getTdFtestOnIrregularBuilder() {
        
        onChanged();
        return getTdFtestOnIrregularFieldBuilder().getBuilder();
      }
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_irregular = 6;</code>
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getTdFtestOnIrregularOrBuilder() {
        if (tdFtestOnIrregularBuilder_ != null) {
          return tdFtestOnIrregularBuilder_.getMessageOrBuilder();
        } else {
          return tdFtestOnIrregular_ == null ?
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : tdFtestOnIrregular_;
        }
      }
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_irregular = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder> 
          getTdFtestOnIrregularFieldBuilder() {
        if (tdFtestOnIrregularBuilder_ == null) {
          tdFtestOnIrregularBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder>(
                  getTdFtestOnIrregular(),
                  getParentForChildren(),
                  isClean());
          tdFtestOnIrregular_ = null;
        }
        return tdFtestOnIrregularBuilder_;
      }

      private demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest tdFtestOnSa_;
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder> tdFtestOnSaBuilder_;
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_sa = 7;</code>
       * @return Whether the tdFtestOnSa field is set.
       */
      public boolean hasTdFtestOnSa() {
        return tdFtestOnSaBuilder_ != null || tdFtestOnSa_ != null;
      }
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_sa = 7;</code>
       * @return The tdFtestOnSa.
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest getTdFtestOnSa() {
        if (tdFtestOnSaBuilder_ == null) {
          return tdFtestOnSa_ == null ? demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : tdFtestOnSa_;
        } else {
          return tdFtestOnSaBuilder_.getMessage();
        }
      }
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_sa = 7;</code>
       */
      public Builder setTdFtestOnSa(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest value) {
        if (tdFtestOnSaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tdFtestOnSa_ = value;
          onChanged();
        } else {
          tdFtestOnSaBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_sa = 7;</code>
       */
      public Builder setTdFtestOnSa(
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder builderForValue) {
        if (tdFtestOnSaBuilder_ == null) {
          tdFtestOnSa_ = builderForValue.build();
          onChanged();
        } else {
          tdFtestOnSaBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_sa = 7;</code>
       */
      public Builder mergeTdFtestOnSa(demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest value) {
        if (tdFtestOnSaBuilder_ == null) {
          if (tdFtestOnSa_ != null) {
            tdFtestOnSa_ =
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.newBuilder(tdFtestOnSa_).mergeFrom(value).buildPartial();
          } else {
            tdFtestOnSa_ = value;
          }
          onChanged();
        } else {
          tdFtestOnSaBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_sa = 7;</code>
       */
      public Builder clearTdFtestOnSa() {
        if (tdFtestOnSaBuilder_ == null) {
          tdFtestOnSa_ = null;
          onChanged();
        } else {
          tdFtestOnSa_ = null;
          tdFtestOnSaBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_sa = 7;</code>
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder getTdFtestOnSaBuilder() {
        
        onChanged();
        return getTdFtestOnSaFieldBuilder().getBuilder();
      }
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_sa = 7;</code>
       */
      public demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder getTdFtestOnSaOrBuilder() {
        if (tdFtestOnSaBuilder_ != null) {
          return tdFtestOnSaBuilder_.getMessageOrBuilder();
        } else {
          return tdFtestOnSa_ == null ?
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.getDefaultInstance() : tdFtestOnSa_;
        }
      }
      /**
       * <code>.jd3.StatisticalTest td_ftest_on_sa = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder> 
          getTdFtestOnSaFieldBuilder() {
        if (tdFtestOnSaBuilder_ == null) {
          tdFtestOnSaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTest.Builder, demetra.toolkit.io.protobuf.ToolkitProtos.StatisticalTestOrBuilder>(
                  getTdFtestOnSa(),
                  getParentForChildren(),
                  isClean());
          tdFtestOnSa_ = null;
        }
        return tdFtestOnSaBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sa.Diagnostics)
    }

    // @@protoc_insertion_point(class_scope:sa.Diagnostics)
    private static final demetra.sa.io.protobuf.SaProtos.Diagnostics DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new demetra.sa.io.protobuf.SaProtos.Diagnostics();
    }

    public static demetra.sa.io.protobuf.SaProtos.Diagnostics getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Diagnostics>
        PARSER = new com.google.protobuf.AbstractParser<Diagnostics>() {
      @java.lang.Override
      public Diagnostics parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Diagnostics(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Diagnostics> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Diagnostics> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public demetra.sa.io.protobuf.SaProtos.Diagnostics getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sa_Component_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sa_Component_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sa_SaDecomposition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sa_SaDecomposition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sa_BenchmarkingSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sa_BenchmarkingSpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sa_VarianceDecomposition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sa_VarianceDecomposition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sa_Diagnostics_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sa_Diagnostics_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\010sa.proto\022\002sa\032\rtoolkit.proto\"V\n\tCompone" +
      "nt\022\031\n\004data\030\001 \001(\0132\013.jd3.TsData\022\014\n\004stde\030\002 " +
      "\003(\001\022\017\n\007nbcasts\030\003 \001(\005\022\017\n\007nfcasts\030\004 \001(\005\"\342\001" +
      "\n\017SaDecomposition\022#\n\004mode\030\001 \001(\0162\025.sa.Dec" +
      "ompositionMode\022\035\n\006series\030\002 \001(\0132\r.sa.Comp" +
      "onent\022*\n\023seasonally_adjusted\030\003 \001(\0132\r.sa." +
      "Component\022\034\n\005trend\030\004 \001(\0132\r.sa.Component\022" +
      "\037\n\010seasonal\030\005 \001(\0132\r.sa.Component\022 \n\tirre" +
      "gular\030\006 \001(\0132\r.sa.Component\"\236\001\n\020Benchmark" +
      "ingSpec\022\017\n\007enabled\030\001 \001(\010\022&\n\006target\030\002 \001(\016" +
      "2\026.sa.BenchmarkingTarget\022\016\n\006lambda\030\003 \001(\001" +
      "\022\013\n\003rho\030\004 \001(\001\022\"\n\004bias\030\005 \001(\0162\024.sa.Benchma" +
      "rkingBias\022\020\n\010forecast\030\006 \001(\010\"|\n\025VarianceD" +
      "ecomposition\022\r\n\005cycle\030\001 \001(\001\022\020\n\010seasonal\030" +
      "\002 \001(\001\022\021\n\tirregular\030\003 \001(\001\022\020\n\010calendar\030\004 \001" +
      "(\001\022\016\n\006others\030\005 \001(\001\022\r\n\005total\030\006 \001(\001\"\211\003\n\013Di" +
      "agnostics\0229\n\026variance_decomposition\030\001 \001(" +
      "\0132\031.sa.VarianceDecomposition\0229\n\033seasonal" +
      "_ftest_on_irregular\030\002 \001(\0132\024.jd3.Statisti" +
      "calTest\0222\n\024seasonal_ftest_on_sa\030\003 \001(\0132\024." +
      "jd3.StatisticalTest\0229\n\033seasonal_qtest_on" +
      "_irregular\030\004 \001(\0132\024.jd3.StatisticalTest\0222" +
      "\n\024seasonal_qtest_on_sa\030\005 \001(\0132\024.jd3.Stati" +
      "sticalTest\0223\n\025td_ftest_on_irregular\030\006 \001(" +
      "\0132\024.jd3.StatisticalTest\022,\n\016td_ftest_on_s" +
      "a\030\007 \001(\0132\024.jd3.StatisticalTest*x\n\rCompone" +
      "ntType\022\r\n\tUNDEFINED\020\000\022\n\n\006SERIES\020\001\022\t\n\005TRE" +
      "ND\020\002\022\014\n\010SEASONAL\020\003\022\026\n\022SEASONALLYADJUSTED" +
      "\020\004\022\r\n\tIRREGULAR\020\005\022\014\n\010CALENDAR\020\006*V\n\021Decom" +
      "positionMode\022\013\n\007UNKNOWN\020\000\022\014\n\010ADDITIVE\020\001\022" +
      "\022\n\016MULTIPLICATIVE\020\002\022\022\n\016PSEUDOADDITIVE\020\003*" +
      "p\n\022BenchmarkingTarget\022\034\n\030BENCH_TARGET_UN" +
      "SPECIFIED\020\000\022\031\n\025BENCH_TARGET_ORIGINAL\020\001\022!" +
      "\n\035BENCH_TARGET_CALENDARADJUSTED\020\002*{\n\020Ben" +
      "chmarkingBias\022\032\n\026BENCH_BIAS_UNSPECIFIED\020" +
      "\000\022\023\n\017BENCH_BIAS_NONE\020\001\022\027\n\023BENCH_BIAS_ADD" +
      "ITIVE\020\002\022\035\n\031BENCH_BIAS_MULTIPLICATIVE\020\003B\"" +
      "\n\026demetra.sa.io.protobufB\010SaProtosP\000b\006pr" +
      "oto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          demetra.toolkit.io.protobuf.ToolkitProtos.getDescriptor(),
        });
    internal_static_sa_Component_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_sa_Component_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sa_Component_descriptor,
        new java.lang.String[] { "Data", "Stde", "Nbcasts", "Nfcasts", });
    internal_static_sa_SaDecomposition_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_sa_SaDecomposition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sa_SaDecomposition_descriptor,
        new java.lang.String[] { "Mode", "Series", "SeasonallyAdjusted", "Trend", "Seasonal", "Irregular", });
    internal_static_sa_BenchmarkingSpec_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_sa_BenchmarkingSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sa_BenchmarkingSpec_descriptor,
        new java.lang.String[] { "Enabled", "Target", "Lambda", "Rho", "Bias", "Forecast", });
    internal_static_sa_VarianceDecomposition_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_sa_VarianceDecomposition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sa_VarianceDecomposition_descriptor,
        new java.lang.String[] { "Cycle", "Seasonal", "Irregular", "Calendar", "Others", "Total", });
    internal_static_sa_Diagnostics_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_sa_Diagnostics_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sa_Diagnostics_descriptor,
        new java.lang.String[] { "VarianceDecomposition", "SeasonalFtestOnIrregular", "SeasonalFtestOnSa", "SeasonalQtestOnIrregular", "SeasonalQtestOnSa", "TdFtestOnIrregular", "TdFtestOnSa", });
    demetra.toolkit.io.protobuf.ToolkitProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
